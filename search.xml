<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[Github] MCBBS-Client</title>
      <link href="/2026/05/26/8684/"/>
      <url>/2026/05/26/8684/</url>
      
        <content type="html"><![CDATA[<h1 id="MCBBS-Client-MCBBS-客户端"><a href="#MCBBS-Client-MCBBS-客户端" class="headerlink" title="MCBBS-Client (MCBBS 客户端)"></a>MCBBS-Client (MCBBS 客户端)</h1><p><a href="/download/MCBBS-Client-dev.zip">下载本项目</a></p><div align="center"><a href="http://miao.su/image/HdIbf"><img src="http://miao.su/images/2018/12/24/447a2b32e7ec7bd5fb486.md.png" width="200" height="200"></a></div><div align="center"><h3>根仓库</h3></div><h4>该项目已冻结，不再积极维护</h4><h4>该项目下的代码可能会在未来复用，进行新的项目研发</h4><p>欢迎使用 MCBBS 客户端，这里是 MCBBS 客户端的源代码总仓库。</p><p><a href="http://www.mcbbs.net/">论坛首页</a></p><p><a href="https://app.langyo.xyz/">项目展示首页(暂时无效)</a></p><h2 id="此客户端的开发模式"><a href="#此客户端的开发模式" class="headerlink" title="此客户端的开发模式"></a>此客户端的开发模式</h2><p>此客户端使用混合开发模式，本体为 HTML5 应用，并依托于本地平台提供的混合开发框架。</p><p>前端部分依赖 React 库与 Material-UI 库进行构造，并使用 Reflux 库进行数据库与界面的数据交换。这需要依赖 Node.js 环境对页面进行预先转译。</p><p>后端部分的桌面端依赖 Electron，移动端依赖 Crodova。</p><h2 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h2><p>当前 dev 分支的版本为 <strong>0.5.0</strong>，开发代号为 <strong>熔炉</strong> 。</p><h2 id="工作指南"><a href="#工作指南" class="headerlink" title="工作指南"></a>工作指南</h2><blockquote><p>请先安装 Git 与 Node 环境！</p><p>强烈建议使用 VSCode 进行开发！不论您使用什么语言，这个 IDE 都值得您使用！</p><p>对于 C++ 与 C# 开发者，建议额外使用 Visual Studio；对于 Java 开发者，建议额外使用 IDEA。</p></blockquote><p>在开始之前，您应当先设置自己的 Git 用户名和邮箱，这是 Github 识别您的提交的依据！</p><p><code>git config user.name &lt;您在Github上的用户名&gt;</code></p><p><code>git config user.email &lt;您在Github上注册时使用的邮箱&gt;</code></p><p>先拉取仓库：</p><p>（对于协作者）</p><p><code>git clone https://github.com/langyo/MCBBS-Client.git</code></p><p>（对于其他人，您需要先右上角 Fork，然后拉取您自己的 Fork 仓库）</p><p><code>git clone https://github.com/&lt;Github用户名&gt;/MCBBS-Client.git</code></p><p>然后执行子模块刷新：</p><p><code>git submodule init</code></p><p>如果您已经克隆过该仓库，但需要进行子模块同步，请执行：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br><span class="line">git submodule sync</span><br></pre></td></tr></tbody></table></figure><p>协作者权限与小组成员身份以邀请制发放。</p><h2 id="子仓库说明"><a href="#子仓库说明" class="headerlink" title="子仓库说明"></a>子仓库说明</h2><blockquote><p>需要注意的是，在各个子模块下将只存在其所负责的子项目，这有助于开发者专注于其正在开发的那部分模块。</p><p>项目已于 0.5.0 版本子模块化！~</p></blockquote><ul><li><p><code>native-desktop-electron</code><br>桌面端的 H5 部分，并提供对底层 Electron 桥接。</p></li><li><p><code>native-desktop-node</code><br>桌面端的 Node 部分，提供对 Node 本地服务端的支持，并由此桥接到其它语言编写的插件客户端。</p></li><li><p><code>native-desktop-java</code><br>桌面端的 Java 部分，提供对 Java 插件的支持。</p></li><li><p><code>native-desktop-cs</code><br>桌面端的 C# 部分，提供对 C# 插件的支持。</p></li><li><p><code>native-desktop-cpp</code><br>桌面端的 C++ 部分，提供对 C++ 插件的支持。</p></li><li><p><code>native-mobile-cordova</code><br>移动端的 H5 部分，并提供对底层 Cordova 桥接。</p></li><li><p><code>core</code><br>平台无关代码（JavaScript）部分，具体请查看对应的分支。这应该算是整个项目最重要的一个分支了。</p></li><li><p><code>res-live2d</code></p><p>用于放置Live2D 资源，主要用于贮存客户端使用的 Live2D 虚拟形象模型。</p></li><li><p><code>res-wallpaper</code></p><p>用于放置背景图片资源。</p></li><li><p><code>website</code><br>客户端的前端宣传网站，它是独立开发的。</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg=="><script type="text/javascript">  (function(d, s) {    var j, e = d.getElementsByTagName(s)[0];    if (typeof LivereTower === 'function') { return; }    j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;    e.parentNode.insertBefore(j, e);  })(document, 'script');</script></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「Disqus」为 hexo 博客添加文章推荐功能</title>
      <link href="/2025/09/24/2589378/"/>
      <url>/2025/09/24/2589378/</url>
      
        <content type="html"><![CDATA[<p>这是 Disqus 最近更新的一项功能。</p><p>如果您已经为自己的博客启用 Disqus 评论系统，直接打开 <a href="https://disqus.com/admin/settings/recommendations/">https://disqus.com/admin/settings/recommendations/</a> 选择站点，找到 <code>Enable Recommendations on your site</code>，选定布局样式，暂时支持更改的项目有：</p><ul><li>显示文章发表日期</li><li>显示评论数</li><li>推荐栏目的布局</li><li>推荐文章的日期范围</li><li>……</li></ul><p>save 保存，等待一会儿，刷新自己的文章页面，即可看见推荐文章。</p><p>hexo “动” 得越来越厉害了😌</p><p><em>hexo 默认的Markdown渲染不支持 CheckBox 吗？😵</em></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「视频」MC绷带指令</title>
      <link href="/2025/09/24/28523795/"/>
      <url>/2025/09/24/28523795/</url>
      
        <content type="html"><![CDATA[<iframe src="https://www.bilibili.com/video/BV1aZ42117MF" width="800" height="600" frameborder="0" allowfullscreen=""></iframe><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GriefDefender | 支持混合端且功能丰富强大的领地插件</title>
      <link href="/2025/04/07/GriefDefender/"/>
      <url>/2025/04/07/GriefDefender/</url>
      
        <content type="html"><![CDATA[<h3 id="多平台插件推荐-GriefDefender-–-支持混合端且功能丰富强大的领地插件。"><a href="#多平台插件推荐-GriefDefender-–-支持混合端且功能丰富强大的领地插件。" class="headerlink" title="多平台插件推荐 [GriefDefender] – 支持混合端且功能丰富强大的领地插件。"></a>多平台插件推荐 [GriefDefender] – 支持混合端且功能丰富强大的领地插件。</h3><h5 id="Bukkit-Sponge-开源-付费获取支持-内置汉化-开发者-bloodshot"><a href="#Bukkit-Sponge-开源-付费获取支持-内置汉化-开发者-bloodshot" class="headerlink" title="Bukkit &amp; Sponge | 开源 | 付费获取支持 | 内置汉化 | 开发者: bloodshot"></a>Bukkit &amp; Sponge | 开源 | 付费获取支持 | 内置汉化 | 开发者: bloodshot</h5><ul><li>支持版本：<img src="https://img.shields.io/spiget/tested-versions/68900?label=2.0%E4%BB%A5%E4%B8%8A&amp;style=flat-square"> Bukkit 1.8-1.16.5(2.0版本以前) Sponge 1.12.2(全版本)</li><li>社区评价：<img src="https://img.shields.io/spiget/rating/68900?label=Spigot%20%E8%AF%84%E5%88%86&amp;style=flat-square"> |<img src="https://img.shields.io/github/stars/bloodmc/GriefDefender?label=Github%20%E6%94%B6%E8%97%8F&amp;style=flat-square"></li></ul><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><p><a href="https://www.spigotmc.org/resources/68900/">Spigot</a> 请在此处购买支持，代购的应当给你 Discord 链接。<br><a href="https://github.com/bloodmc/GriefDefender">Github</a> GitHub 仓库源码老旧，内部还是开源的，MIT<br><a href="https://www.patreon.com/bloodmc">Patreon</a> 如果你是群组，在这里购买高级支持。<br><a href="https://github.com/bloodmc/GriefDefender/wiki">Wiki</a></p><p>GD支持的插件详见：<a href="https://github.com/bloodmc/GDHooks">GDHooks</a></p><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>GriefDefender 前身是 Sponge 版的 GriefPrevention，作为 Sponge 为数不多可用的领地插件存在。而现在，bloodmc 将他带到了 Bukkit 平台， 我们很高兴能有幸目睹这一功能丰富的插件能在双平台上展现异样的光芒。</p><p>bloodmc是 MCPC/Cauldron 的开发者之一，其代码老练，功能与性能兼具，后又混迹于 Sponge 社区， 现在 GriefDefender 作为一个由混合端始祖之一开发的插件，自然也会支持混合端(Mohist/Arclight/LoliServer/CatServer)。</p><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul><li><strong>广泛的支持</strong> GriefDefender 作为领地插件，由于经历了 Sponge 时代的打磨，哪怕在 Bukkit/Hybrid 服务端上也有着对 Mod 一流的支持。这种支持十分恐怖，GD 能帮助您溯源 Forge 所提供的假玩家后背的真玩家(基于假玩家的放置者)，其强大的标签系统允许您在 Mod 有 bug 的情况下使用 GD 提供的高级标签来读取 NBT/Meta 定义情境来 进行各种行为判断来阻止。</li><li><strong>用户友好性</strong> 它完全依赖 聊天UI 进行操作，但这并所有界面都已经被汉化(包括预置标签)。相较于冗杂的 GUI，聊天框能更快速的处理您想要的一切。而在权限定义方面，GD 允许您创建 <strong>领地群组</strong>，以便多个领地共享相同的领地配置，领地快照允许您保存当前设置状态，领地结构图则允许您快速把领地复原到某个时间点上的状况。</li><li><strong>情境定义/高度客制化</strong> 功能性上，它能比肩 FTBChunk 但在客制化方面又超越 FTBChunk，它的标签系统允许您用最基础的标签创建属于您自己的标签来客制化保护体验。情境定义的对象包括但不限于 <strong>领地、作用方块的数据、作用的玩家、作用的实体、权限</strong>，比如您可以让某个玩家被某个实体于某个领地之间没有碰撞箱(projectile)。</li><li><strong>助力经济</strong> 在多样性方面，它支持领地的出租，出租后的领地租客挖掘领地内方块不会掉任何东西，而租期结束后领地又会自动复原。除此之外，您还能创建领地银行，征收领地税务，移除长期不活跃领地。在没有经济提供者(Vault-Economy)，内置了名为 “领地方块” 的类货币机制，允许您通过玩家游戏时间奖励圈地方块。</li><li><strong>对管理员友善</strong> 您能为用户提供预制标签，也能通过权限给予玩家控制高级情境的能力。在情境定义方面，它支持 1.13+ 的 Tags 系统，这意味着您可以使用 #monster #player 代指一类事物以方便情境定义。</li><li><strong>强悍性能与数据库支持</strong> GD 始终坚信，功能的冗杂并不代表性能的低效，GD 已经在超过 70+ 玩家的服务器中以 20 TPS 的佳绩稳定运行。数据库方面，支持 <strong>MYSQL|MariaDB|PostgreSQL</strong>，如果您不使用数据库，GD 将使用 LuckPerms 和 文件 存储数据。</li><li><strong>主动支持别的插件</strong> 在插件的支持上，GDHooks 涵盖了市面上大部分常见商店插件及在线地图插件(Dynmap，Pl3xmap，Bluemap)， 而对使用盔甲架的家具插件，我们更是直接挂钩家具库来识别家具类型，对 McMMO 的支持精确到了能否使用某个 Skill 。</li></ul><p>我这里无法再赘述太多，它还支持同客户端mod CUI的协同来显示领地，唯一的不足就是 GD 必须依赖一个支持情境系统的插件来储存数据（到目前为止只支持 LuckPerms）。</p><h4 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h4><p><img src="https://i.loli.net/2021/10/03/IguG1czZXjP7ke3.gif"><img src="https://i.loli.net/2021/10/03/OmxSB8uT3tjvHfM.gif"><img src="https://i.loli.net/2021/10/03/wd3XWgsEyhGHmM9.gif"></p><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「教程」在Deepin（Linux）下如何优雅地查词典？—— sdcv ⚡📚</title>
      <link href="/2025/02/25/57892389/"/>
      <url>/2025/02/25/57892389/</url>
      
        <content type="html"><![CDATA[<blockquote><p><em><strong>sdcv = stardict console version ，即终端下的 stardict 词典</strong></em></p></blockquote><p>支持导入本地词典！</p><p><code>man sdcv</code> 发现 sdcv 有个 <code>--color</code> 参数，加上之后，字典名称和释义颜色有所区分，阅读效果稍稍好些。</p><p><code>sudo apt install sdcv</code></p><p>将词典解压后存放至 <code>~/.stardict/dic</code> ，如果目录不存在，则 <code>mkdir -p ~/.stardict/dic</code> 手动创建。</p><p><code>sdcv -l</code></p><p>点击展开</p><p><code>sdcv &amp;#x5173;&amp;#x952E;&amp;#x8BCD;</code> 查词，搜索结果较模糊的情况下，可能需要二次确认指定词典。</p><p>示例：</p><p>点击展开</p><p>或者 <code>sdcv</code> 进行连续查词。</p><p><code>man sdcv</code> 查看使用手册。</p><p>从此，在终端看到不认识的单词，就不必再打开浏览器了 🤣</p><p>Deepin 的快捷键可以帮助我们快速启动一些命令。</p><p>控制中心 =&gt; 键盘和语言 =&gt; 快捷键 =&gt; 底部加号新建：</p><p>名称、快捷键随意，命令 <code>sdcv</code> 。</p><p>手机上也可以使用 Termux 进行安装：</p><p>点击展开</p><p>考虑了一下，干脆再装两个需要联网使用的终端词典，查句子还得靠它们。</p><p><strong>安装：</strong></p><p><code>sudo apt-get install festival festvox-kallpc16k</code></p><p><code>npm install fanyi -g</code></p><p><strong>使用：</strong><br> <code>fy &lt;字、词、句、段&gt;&lt;/字、词、句、段&gt;</code></p><p>点击展开</p><p>默认使用谷歌翻译，还支持 Bing 、Yandex 、Apertium。</p><p><strong>获取源码编译安装：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 合适的目录git clone https://github.com/soimort/translate-shellcd translate-shell/makesudo make install</span><br></pre></td></tr></tbody></table></figure><p><strong>使用示范：</strong></p><ul><li>英译中<br> <code>trans en:zh ccp</code> 或者 <code>trans love</code> <em>（顺便鄙视一下谷歌翻译，查不出用法更妥当的 cpc ）</em></li><li>中译英<br> <code>trans zh:en &amp;#x5927;&amp;#x4E08;&amp;#x592B;</code> 或者省略 zh <code>trans :en &amp;#x4E00;&amp;#x89C1;&amp;#x6768;&amp;#x8FC7;&amp;#x8BEF;&amp;#x7EC8;&amp;#x751F;</code> <em>（ <code>trans &amp;#x5927;&amp;#x4E08;&amp;#x592B;</code> 会被当做日语）</em></li><li>听读音<br>加上 <code>-p</code> 听译文读音<br>加上 <code>-sp</code> 听输入的单词读音<br>在后台可以看见它调用的是 mpv ，获取 Google TTS。<br> <code>mpv --no-config http://translate.googleapis.com/translate_tts?ie=UTF-8&amp;client=gtx&amp;tl=zh-CN&amp;q=&amp;#x82DF;&amp;#x5229;&amp;#x56FD;&amp;#x5BB6;&amp;#x751F;&amp;#x6B7B;&amp;#x4EE5;&amp;#xFF0C;&amp;#x5C82;&amp;#x56E0;&amp;#x7978;&amp;#x798F;&amp;#x907F;&amp;#x8D8B;&amp;#x4E4B;&amp;#x3002;</code><br>（我们 mpv 真是太厉害啦！）</li></ul><p>有空格的句子需要用 <code>''</code> 或者 <code>""</code> 包起来。</p><p>顺便加个 <code>alias ggfy='trans :en'</code> 进 <code>.zshrc</code>。</p><p>补充：Foliate（电子书阅读器）可以调用 sdcv 的本地词典。</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[1.12.2][支持手机版|拔刀剑]祝福或诅咒：无限力量之征——关于剑与理想的故事</title>
      <link href="/2024/06/07/2384%E9%93%85389/"/>
      <url>/2024/06/07/2384%E9%93%85389/</url>
      
        <content type="html"><![CDATA[<p><strong>🎉整合包在 CurseForge 下载量突破 55000！</strong><br><strong>B 站相关视频播放量已超过四十万！<br> 感谢有你！</strong><br><a href="https://www.curseforge.com/minecraft/modpacks/blessed-or-cursed-expedition-to-infinite-force">https://www.curseforge.com/minecraft/modpacks/blessed-or-cursed-expedition-to-infinite-force</a></p><p><strong>本整合包已 支持手机版，欢迎各位玩家体验！</strong><br>手机版仅在交流群内发布，群内提供手机版安装教学和热心群友手把手指导安装，<br>点击、扫描下方二维码，或搜索群号，加入我们的交流群！</p><p>;;;<br><strong>向参与了手机版制作的交流 1 群热心玩家 @.好好，@.金苹果 表示衷心感谢！</strong></p><p>我们欢迎任何人制作本整合包的直播或视频，<br>欢迎各位 UP 主联系我们，把你的大作展示在这里！</p><p>本整合包提供专门的服务端，欢迎各位服主移步下方置顶楼层下载服务端包，<br>一键架设你前所未见的拔刀剑服务器！</p><h1 id="Blessed-or-Cursed-Expedition-to-Infinite-Force"><a href="#Blessed-or-Cursed-Expedition-to-Infinite-Force" class="headerlink" title="Blessed or Cursed: Expedition to Infinite Force"></a>Blessed or Cursed: Expedition to Infinite Force</h1><p>一个关于剑与理想的，铸剑师的故事。</p><h2 id="国内下载地址"><a href="#国内下载地址" class="headerlink" title="国内下载地址"></a>国内下载地址</h2><p><strong>本整合包支持 MCBBS 整合包标准格式</strong></p><p>点击这里下载整合包文件，即可一键导入 MultiMC 及主流国产 Minecraft 启动器：</p><p><a href="https://pan.baidu.com/s/1cHFGYRsLFk1ben8q2r36fw">https://pan.baidu.com/s/1cHFGYRsLFk1ben8q2r36fw</a></p><p>提取码: a27w</p><p>我们仍然推荐各位从 CurseForge 下载整合包，</p><p>点点手指即可，不仅给我们提供一些微薄的收入，更是对我们意义重大的支持！</p><p><a href="https://www.curseforge.com/minecraft/modpacks/blessed-or-cursed-expedition-to-infinite-force/files">https://www.curseforge.com/minec ... nfinite-force/files</a></p><p>如果你喜欢我们的整合包，请点击上方链接下载支持我们！</p><h2 id="整合包简介"><a href="#整合包简介" class="headerlink" title="整合包简介"></a>整合包简介</h2><p>MCBBS 上的拔刀剑整合包实在太多了，我相信你也玩过不少。</p><p>但是在你玩那些包含拔刀剑的整合包时，或许你只做过其中的一两把拔刀剑；</p><p>你只是在玩其他的 MOD 时，捎带玩一下拔刀剑；</p><p>那些其他的 MOD 提供的武器装备比拔刀剑强大很多，</p><p>拔刀剑实际上并不是你的主菜。</p><p>我今天想给你带来一个以拔刀剑 / 最后的太刀匠人为主题的 MOD 整合包。</p><p>你需要收集拔刀剑、强化你的拔刀剑，</p><p>只有付出杀敌数和耀魂，用越来越强大的拔刀剑战胜凶恶的敌人，</p><p>用从它们那里缴获的战利品，为你的旅程铺路，</p><p>你才能逐步探索整合包的发展线路，最终取得整合包的终极物品 - 无限之心，</p><p>获得不死不朽的无限力量。</p><p>整合包非常轻量，把优化 MOD、辅助 MOD 统统算上，单机端 MOD 总数为 70 个，</p><p>而服务端 MOD 总数仅 51 个。</p><p>单机不需要很高的配置也能玩，如果在服务器上使用，20 个玩家同时在线也能达到 18-19 的 TPS，</p><p>可以说既适合单机游戏，也适合开服和大家一起玩，</p><p>我们提供了做好的 Forge 官方端服务端包，下载地址请看置顶回复！</p><p>感谢整合包玩家 ayaya 结合网上的现有教程和自己的游戏理解，</p><p>仔细编纂的整合包完整教程：<br><a href="plugin_id-link_redirect-target-https-shimo_im_docs_N2A1vYgE5LfRmj3D_read.html">https://shimo.im/docs/N2A1vYgE5LfRmj3D/read</a></p><p>在此感谢 ayaya 与所有为此教程提供了第一手素材的各位教程作者！</p><p>如果你在游玩过程中遇到困难，不妨查阅这份教程，或许可以解答你的问题。</p><h2 id="整合包背景故事"><a href="#整合包背景故事" class="headerlink" title="整合包背景故事"></a>整合包背景故事</h2><p>“繁星如许，明月如初。前尘往事，从何细数。”</p><p>我放下手中的古卷，遥想千年前这片土地上发生的那场决战。</p><p>邪魔与人类，侵略与反抗，</p><p>无数的英雄在血染的战场上捐躯，无数的刀匠在沸腾的炉火前献身，</p><p>无数的名刀在残酷的搏杀中折断，无数的史诗在后人的口耳间相传。</p><p>在茫茫的时间长河中，我或许是一枚闪亮的金砂，</p><p>我不愿随波逐流藉藉无名，我渴望着在历史面前证明自己，</p><p>我要像传说中的那些英雄一样伟大。</p><p>站在现代科学巨人的肩膀上，我伸手去触摸”无限力量”这颗天空中的明星。</p><p>我对机械制造、金属冶炼、电子工程、化学工程都有涉猎，被人谬赞为”天才”的我，却不以这些成就而沾沾自喜。</p><p>在我看来，这些现代科学的成就是我追求”无限力量”的垫脚石，</p><p>但我却被”如何达到无限的力量”这一问题所困，我渴望有人为我指引一条道路。</p><p>直到有一天，我从一个旧书贩子那里买到了一本残破不堪的古卷，</p><p>这本带有挥之不去的血腥味的残卷，向我吐露出前人的秘密。</p><p>书本的作者背负着种族的使命、追逐着个人的理想，</p><p>同样为了”无限的力量”而苦苦求索，</p><p>在熊熊燃烧的锻炉前挥汗如雨、为打造一把宝刀呕心沥血，</p><p>他就这样独自战斗了一生，乃至最后献出宝贵的生命。</p><p>他的手稿字字句句，在我读来都像是诱人的耳语：</p><p>“跟我来吧，我带你去取得无限的力量！”</p><p>于是我离开了繁华的人类社会，独自一人去往苍茫的旷野，</p><p>我要在那里追寻属于我的理想，见证真正的无限之力从我的手中诞生！</p><p>然而古卷以作者的牺牲画上句号，它淡淡的血腥味，也仿佛带着诅咒的意味。</p><p>我求索无限力量的道路，前途究竟是光明还是黑暗？</p><p>我.日夜追逐的理想，究竟应得祝福，还是当受诅咒？</p><p>想到这里我不由得陷入沉思，再次捧起手中的古卷看了又看…</p><h2 id="给各位玩家的建议"><a href="#给各位玩家的建议" class="headerlink" title="给各位玩家的建议"></a>给各位玩家的建议</h2><h3 id="推荐配置"><a href="#推荐配置" class="headerlink" title="推荐配置"></a>推荐配置</h3><p>运行内存：4 GB 及以上，6 GB 完全足够流畅游玩。</p><p>Java 运行环境：推荐使用 64 位的 Java 8。</p><p><strong>手机都能流畅游玩的 低配 整合包！</strong></p><h3 id="游玩指导"><a href="#游玩指导" class="headerlink" title="游玩指导"></a>游玩指导</h3><ol><li>这个包的主线就是拔刀剑和最后的太刀匠人两个 MOD，</li></ol><p>整合包线路是跟随最后的太刀匠人的进度系统前进的。</p><p>当你发现有拔刀剑合成不了、配方不能进行下去的时候，</p><p>请检查进度系统中，最后的太刀匠人 MOD 的进度。</p><p>最后的太刀匠人 MOD 的指南书也可以帮助你。</p><p>指南书的配方被我修改为 4 块泥土 2x2 合成，当你丢失了指南书，记得做一本新的。</p><ol start="2"><li>我在 JEI 和物品信息中埋了不少提示，记得看看。</li></ol><p>不仅可以解答一些游玩方面的问题，还可以发现这个整合包中我设置的彩蛋。</p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><p>Q：你这包怎么安装啊？</p><p>A：我发布的整合包是 CurseForge 格式，MultiMC、HMCL 这些支持 Curseforge 整合包的启动器直接导入即可。</p><p>你要是实在不会导入整合包，就看这个 B 站视频：<br><a href="https://www.bilibili.com/video/av44819629">https://www.bilibili.com/video/av44819629</a></p><p>Q：安装提示”未能解析 Curse 整合包”，装不上怎么办呀？</p><p>A：99% 安装失败问题的原因都是启动器太旧，甚至最新的”稳定版”启动器都有可能存在安装失败问题。</p><p>务必确保你正在使用最新的”开发版”/“快照版”/“体验版”启动器，</p><p>如果已经使用最新启动器仍然安装失败，欢迎直接加群咨询我本人。</p><p>Q：你这包有没有 BQ 或者 FTBQ 之类的任务可以做啊？</p><p>A：你自由玩就行了，任务这种东西挺束缚游玩体验的。</p><p>看《妖刀的记录与锻造方法》这本游戏新人礼包中的指南书，</p><p>或者是跟着最后的太刀匠人 MOD 的进度走就行了，就在原版进度系统中可以看到。</p><p>Q：为啥你这包没有 Optifine 和自动汉化更新？</p><p>A：CurseForge 实际上是不允许把 Optifine 放在整合包里的。<br><strong>但我推荐你自己装一下。</strong></p><p>自动汉化更新会把语言强制改为中文，你让外国人怎么玩嘛。</p><p>目前整合包已经自带 JEI 的拼音搜索功能（由 HECH 模组实现）。</p><p>Q：游戏崩溃怎么办？<br>A：直接使用启动器的”导出崩溃报告”功能导出一份崩溃报告，<br>回帖在下面提问时，作为帖子附件上传，发送给我，或者在加群询问我时发送给我。</p><p>Q: 我游戏没崩，但是有其他的问题想问…</p><p>A: 只管问！回复在这帖子底下或者直接加群询问都行，我看到就会回复。</p><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><ol start="0"><li><p>1.12.0-hotfix 修复了 1.12.0 版本中导致工作台合成得到的深渊国度书本外观错误的问题。</p></li><li><p>用 HEI + HECH 拼音搜索代替 JEI，优化搜索物品性能和游戏内体验，卡顿得到缓解，也不再需要反复切换输入法了。</p></li><li><p>新增呼声颇高的游戏体验改善模组鼠标手势。</p></li><li><p>所有拔刀剑参与的配方不再检查 SA、SB 等属性，你可以任意修改拔刀剑了。</p></li><li><p>新增无限之心的两个功能：</p></li></ol><ul><li><p>你可以在工作台上将任何你从无限之心中抽到但不想要的奖品回收为替身地藏，后者可以使你的女仆无敌。</p></li><li><p>无限之心 + 任何物品 = 该物品的不毁版本。</p></li></ul><ol start="5"><li><p>尝试修复一个导致深渊锭不能合成的 bug。</p></li><li><p>加入一批定制的语言文件。</p></li></ol><p><strong>往期更新日志</strong></p><p>1.11.0 更新日志：</p><ol><li><p>删去上传崩溃报告功能损坏的 VanillaFix 模组。</p></li><li><p>删去在某些设备上导致整合包的所有汉字消失的 SmoothFonts 模组。</p></li><li><p>更新 LootTweaker 到 0.3.1 版本，以及更新 CraftTweaker 和 ContentTweaker 模组。</p></li><li><p>Forge 版本从 14.23.5.2855 更新到 14.23.5.2860。</p></li><li><p>现在 SpecialAttack (SA) 、SummonedBlade（SB）、SpecialEffect (SE) 被修改过的拔刀剑，</p></li></ol><p>也可以提取杀敌数和耀魂点数了。</p><ol start="6"><li><p>现在所有的山樱系列拔刀剑都可以提取杀敌数和耀魂点数了。</p></li><li><p>结月刀付丧移动到 T2 拔刀剑序列。</p></li><li><p>修复了一个脚本语法错误。</p></li></ol><p>1.10.2-BETA 修复了玩家丢出蓄力的拔刀剑可以复制该拔刀剑的恶性 Bug。</p><p>1.10.1-BETA 修复了没有与扎哈尔战斗过的玩家吃下”扎哈尔的羞辱”导致的崩溃、</p><p>拔刀剑杀死玩家的死亡信息字幕没有翻译的问题，和一个复制拔刀剑的恶性 Bug；</p><p>新增楼观旋风刃的配方，新增工业时代 2 的纳米和量子护甲套装的车万女仆祭坛充电功能，</p><p>并添加了相应的提示文字，此外消除了所有的红色报错。</p><p>1.10.0-BETA 版本修复了 Log4j 漏洞，更新 CraftTweaker 版本到 4.1.20.672，</p><p>新增 Boss 机制：经验吞噬者扎哈尔。</p><blockquote><p>你召唤的扎哈尔有 1/3 会变为经验吞噬者扎哈尔。<br>他会吸取你的经验等级来回复生命值，如果你的经验值耗尽，他将逃离战斗。<br>如果他击杀了你，他会给你一只鸡，吃下去你的经验值就会恢复。<br>但如果你成功击败了他，他将给你 1-4 个额外的守门者精华作为奖励。</p></blockquote><p>1.9.0 版本回退 FutureMC MOD 到 0.2.6.1 版本，修复无法进行村民交易的问题，<br>更新热量与气候 MOD 到 3.8.4 版本，更新 LootTweaker 到 0.3.0-with-old-parser version 版本<br>1.8.0 版本更新 FutureMC mod 到 0.2.7.3 版本、更新 Modernity 资源包更新至 3.5.2 版本，<br>修改机制：在你成功合成了”沾满魔力的铜钥匙”和”死灵之书”物品之后，反挂机机制会分别变得宽松两倍和三倍。<br>1.7.2 版本移除了会打断连击和有刷物品 bug 的”反射”技能精英怪。<br>阴影修格斯腐肉也可以用于清理扭曲。<br>所有的修格斯腐肉清理扭曲的点数都会在其 JEI 描述中显示。<br>所有修格斯腐肉清理扭曲的点数翻倍。<br>1.7.1 版本修复了联机时攻击其他玩家，游戏聊天框出现红字报错的问题；<br>修复了攻击修格斯，游戏聊天框出现红字报错的问题；<br>修复了攻击带有”反射”词缀的精英怪，游戏聊天框出现红字报错的问题；<br>修复了空手挖掘树叶，游戏聊天框出现红字报错的问题。<br>禁止玩家食用反物质怪物的掉落物，手持反物质带骨腐肉右键点击，会直接变为反物质骨头，而不是吃掉。<br>1.7.0 版本增加了 Clumps 经验合并模组，优化了大量经验球掉落时游戏的性能表现。<br>1.6.0 版本更新热量与气候到 3.7.2 版本，<br>更新自定义主菜单到 2.2.2 版本，解决了旧版本容易启动时崩溃的问题。<br><strong>如果你经常遇到游戏无法启动，在启动中崩溃的情况，请立即更新！</strong><br>此外豆腐史莱姆将不再成为精英怪物。<br>1.5.1 版本狩猎祭坛的物品改为深层晶片、阴影野兽的召唤数量改为 1，<br>灾厄武士的召唤量改为 16，怪物召唤概率之比调整为4：4：2<br>1.5.0 版本向狩猎世界加入了全新的狩猎祭坛机制；<br>现在可以用封印之布代替砂轮去除物品的附魔；<br>禁用暮色森林的拆解台。<br>1.4.0 版本新增了狩猎维度 MOD 及其配套机制。<br>1.3.1 版本添加了蓝钢刀条合成虚空刀条的配方，<br>修复了僵尸猪人在下界热死的 Bug，<br>由于出现了两个严重的 Bug，暂时移除了Future MC 模组的砂轮，在修复完成后我们将恢复砂轮。<br>1.3.0 版本加入平滑字体、<br>修复了热量与气候的矿石覆盖暮色森林的 BOSS 刷怪箱的问题，并添加了豆腐魔杖的配方。<br>1.2.1 版本移除了一些不必要的文件。<br>1.2.0 版本更新了热量与气候 MOD ，新增了大量的新食物和机器！<br>如果你想知道完整的更新内容，请查阅热量与气候 MOD 的更新日志！<br>用纸破坏原版树叶可以得到蚕卵纸，解决了一直以来蚕卵纸不能获得，无法养蚕的问题。<br>1.1.6 版本允许合成、采集悬赏榜，也可以在村庄里找到它了。<br>解禁湮灭弹核心，现在可以通过阴影仪式安全地召唤萨托斯。<br>1.1.5 版本将主菜单改为中英双语，修复了 FutureMC 模组的去皮木头（Stripped Woods）不能合成木板的问题。<br>并更新 Modernity 资源包到 3.5.0.版本。<br>1.1.4 版本修复了 1.1.3 版本中存在的一个引起进入存档时出现红色报错的小问题。<br>1.1.3 版本删除了冗余文件，让整合包更小，运行更快。<br>1.1.2 版本调整了刷怪机制，现在僵尸、骷髅、苦力怕等原版怪物不再无视亮度刷新了。<br>1.1.1 版本在《妖刀的锻造方法》指南书的序言一章，加入了拔刀剑的基础使用教程。<br>如果你从来没有玩过拔刀剑，现在你也可以在教程中了解它并轻松上手了。<br>1.1.0 版本给所有与暮色森林传送门相关的物品加入了完整的说明文字，<br>包括钻石、沾满魔力的铜钥匙和制作铜钥匙的拔刀剑和两种碎片。<br>之前的版本中与深渊生物互动产生的扭曲无法清除，为了解决这一恼人的问题，<br>1.1.0 版本新增了一种”扭曲清理仪式”，可以清除普通（粘性）扭曲。<br>目前这一机制仍在测试阶段，欢迎各位玩家提出宝贵的建议。<br>1.0.5 增加了用中阶耀魂之瓶合成自然碎片的配方，<br>应该可以解决自然碎片在 T3 阶段之后消耗量很大，但又不得不从 T2 的拔刀剑中获得这个问题，<br>你可以不再被迫在 T3 阶段使用樱剪这把 T2 拔刀了。<br>1.0.4 版本删去了不必要的调试信息，你的游戏不再被这些东西打扰了。<br>IC2 扳手现在可以制作了。<br>此外我们修复了一些小的配方问题。<br>1.0.3 版本进一步调整了蠹虫召唤机制，使其对非挂机玩家更友好。<br>1.0.2 版本大幅优化了蠹虫召唤机制，改善了游戏体验。<br>1.0.1 版本修复了游戏开始时左下角出现红色报错的问题。<br>如果这使你感到困扰，请尽快更新！</p><h2 id="模组列表"><a href="#模组列表" class="headerlink" title="模组列表"></a>模组列表</h2><p>帖内展示的模组列表可能过期，仅供参考，以 CurseForge 展示的模组列表为准：</p><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/gravestone-mod">https://www.curseforge.com/minecraft/mc-mods/gravestone-mod</a></p><ul><li>GraveStone Mod (by henkelmax)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/thaumcraft">https://www.curseforge.com/minecraft/mc-mods/thaumcraft</a></p><ul><li>Thaumcraft (by Azanor13)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/clumps">https://www.curseforge.com/minecraft/mc-mods/clumps</a></p><ul><li>Clumps (by Jaredlll08)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/mixinbootstrap">https://www.curseforge.com/minecraft/mc-mods/mixinbootstrap</a></p><ul><li>MixinBootstrap (by LX_Gaming)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/redstone-flux">https://www.curseforge.com/minecraft/mc-mods/redstone-flux</a></p><ul><li>Redstone Flux (by TeamCoFH)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/inventory-tweaks">https://www.curseforge.com/minecraft/mc-mods/inventory-tweaks</a></p><ul><li>Inventory Tweaks [1.12 only] (by JimeoWan)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/contenttweaker">https://www.curseforge.com/minecraft/mc-mods/contenttweaker</a></p><ul><li>ContentTweaker (by Jaredlll08)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/touhou-little-maid">https://www.curseforge.com/minecraft/mc-mods/touhou-little-maid</a></p><ul><li>Touhou Little Maid (by TartaricAcid)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/botania">https://www.curseforge.com/minecraft/mc-mods/botania</a></p><ul><li>Botania (by Vazkii)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/loottweaker">https://www.curseforge.com/minecraft/mc-mods/loottweaker</a></p><ul><li>LootTweaker (by Daomephsta)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/smooth-font">https://www.curseforge.com/minecraft/mc-mods/smooth-font</a></p><ul><li>Smooth Font (by bre2el)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/konkrete">https://www.curseforge.com/minecraft/mc-mods/konkrete</a></p><ul><li>Konkrete [Forge] (by Keksuccino)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/appleskin">https://www.curseforge.com/minecraft/mc-mods/appleskin</a></p><ul><li>AppleSkin (by squeek502)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/mtlib">https://www.curseforge.com/minecraft/mc-mods/mtlib</a></p><ul><li>MTLib (by Jaredlll08)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/baubles">https://www.curseforge.com/minecraft/mc-mods/baubles</a></p><ul><li>Baubles (by Azanor13)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/tree-chopper">https://www.curseforge.com/minecraft/mc-mods/tree-chopper</a></p><ul><li>Tree Chopper (by MrDuchy)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/no-recipe-book">https://www.curseforge.com/minecraft/mc-mods/no-recipe-book</a></p><ul><li>No Recipe Book (by Seneschal_Luwin)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/chargers">https://www.curseforge.com/minecraft/mc-mods/chargers</a></p><ul><li>Chargers (by GoryMoon)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/the-last-smith">https://www.curseforge.com/minecraft/mc-mods/the-last-smith</a></p><ul><li>The Last Smith (by sz0999312)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/zenutil">https://www.curseforge.com/minecraft/mc-mods/zenutil</a></p><ul><li>Zen Utils (by youyihj)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/modtweaker">https://www.curseforge.com/minecraft/mc-mods/modtweaker</a></p><ul><li>ModTweaker (by Jaredlll08)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/waila-harvestability">https://www.curseforge.com/minecraft/mc-mods/waila-harvestability</a></p><ul><li>Waila Harvestability (by squeek502)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/giselbaers-durability-viewer">https://www.curseforge.com/minecraft/mc-mods/giselbaers-durability-viewer</a></p><ul><li>Giselbaer’s Durability Viewer (by Giselbaer)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/tofucraftreload">https://www.curseforge.com/minecraft/mc-mods/tofucraftreload</a></p><ul><li>TofuCraftReload (by sz0999312)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/dupefix-project">https://www.curseforge.com/minecraft/mc-mods/dupefix-project</a></p><ul><li>DupeFix Project (by Focamacho)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/fancymenu-forge">https://www.curseforge.com/minecraft/mc-mods/fancymenu-forge</a></p><ul><li>FancyMenu [Forge] (by Keksuccino)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/resource-loader">https://www.curseforge.com/minecraft/mc-mods/resource-loader</a></p><ul><li>Resource Loader (by Lumien231)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/ivtoolkit">https://www.curseforge.com/minecraft/mc-mods/ivtoolkit</a></p><ul><li>IvToolkit (by Ivorforce)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/abyssalcraft">https://www.curseforge.com/minecraft/mc-mods/abyssalcraft</a></p><ul><li>AbyssalCraft (by Shinoow)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/mob-spawner-control">https://www.curseforge.com/minecraft/mc-mods/mob-spawner-control</a></p><ul><li>Mob Spawner Control (by PyrofabTheModsmith)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/patchouli">https://www.curseforge.com/minecraft/mc-mods/patchouli</a></p><ul><li>Patchouli (by Vazkii)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/absent-by-design">https://www.curseforge.com/minecraft/mc-mods/absent-by-design</a></p><ul><li>Absent by Design (by Lothrazar)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/future-mc">https://www.curseforge.com/minecraft/mc-mods/future-mc</a></p><ul><li>Future MC (by thedarkcolour)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/building-gadgets">https://www.curseforge.com/minecraft/mc-mods/building-gadgets</a></p><ul><li>Building Gadgets (by Direwolf20)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/vanilla-anvil-repair">https://www.curseforge.com/minecraft/mc-mods/vanilla-anvil-repair</a></p><ul><li>Vanilla Anvil Repair (by eksekk)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/enchantment-descriptions">https://www.curseforge.com/minecraft/mc-mods/enchantment-descriptions</a></p><ul><li>Enchantment Descriptions (by DarkhaxDev)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/base">https://www.curseforge.com/minecraft/mc-mods/base</a></p><ul><li>B.A.S.E (by lanse505)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/slashblade">https://www.curseforge.com/minecraft/mc-mods/slashblade</a></p><ul><li>SlashBlade (by flammpfeil)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/abyssalcraft-integration">https://www.curseforge.com/minecraft/mc-mods/abyssalcraft-integration</a></p><ul><li>AbyssalCraft Integration (by Shinoow)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/probe">https://www.curseforge.com/minecraft/mc-mods/probe</a></p><ul><li>Probe (by yesterday17_p)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/hunting-dimension">https://www.curseforge.com/minecraft/mc-mods/hunting-dimension</a></p><ul><li>Hunting Dimension (by DarkhaxDev)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/slashblade-japanese-addon-pack">https://www.curseforge.com/minecraft/mc-mods/slashblade-japanese-addon-pack</a></p><ul><li>SlashBlade Japanese Addon Pack (by sz0999312)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/initial-inventory">https://www.curseforge.com/minecraft/mc-mods/initial-inventory</a></p><ul><li>Initial Inventory (by Jaredlll08)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/dans-mouse-tweaks">https://www.curseforge.com/minecraft/mc-mods/dans-mouse-tweaks</a></p><ul><li>dan’s Mouse Tweaks (by CleanroomMC)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/champions">https://www.curseforge.com/minecraft/mc-mods/champions</a></p><ul><li>Champions (by TheIllusiveC4)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/applecore">https://www.curseforge.com/minecraft/mc-mods/applecore</a></p><ul><li>AppleCore (by squeek502)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/jade">https://www.curseforge.com/minecraft/mc-mods/jade</a></p><ul><li>Jade 🔍 (by Snownee_)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/bountiful">https://www.curseforge.com/minecraft/mc-mods/bountiful</a></p><ul><li>Bountiful (Forge) (by Ejektaflex)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/texture-packs/modernity">https://www.curseforge.com/minecraft/texture-packs/modernity</a></p><ul><li>Modernity (by AstroTibs)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/just-enough-resources-jer">https://www.curseforge.com/minecraft/mc-mods/just-enough-resources-jer</a></p><ul><li>Just Enough Resources (JER) (by way2muchnoise)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/macaws-furniture">https://www.curseforge.com/minecraft/mc-mods/macaws-furniture</a></p><ul><li>Macaw’s Furniture (by sketch_macaw)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/sakura">https://www.curseforge.com/minecraft/mc-mods/sakura</a></p><ul><li>Sakura (by sz0999312)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/block-drops-jei-addon">https://www.curseforge.com/minecraft/mc-mods/block-drops-jei-addon</a></p><ul><li>Block Drops (JEI Addon) (by KidsDontPlay)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/recurrent-complex">https://www.curseforge.com/minecraft/mc-mods/recurrent-complex</a></p><ul><li>Recurrent Complex (by Ivorforce)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/bookshelf">https://www.curseforge.com/minecraft/mc-mods/bookshelf</a></p><ul><li>Bookshelf (by DarkhaxDev)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/mctitle">https://www.curseforge.com/minecraft/mc-mods/mctitle</a></p><ul><li>MCTitle (by _ForgeUser19510086)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/heat-and-climate">https://www.curseforge.com/minecraft/mc-mods/heat-and-climate</a></p><ul><li>Heat And Climate (by defeatedcrow)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/had-enough-characters">https://www.curseforge.com/minecraft/mc-mods/had-enough-characters</a></p><ul><li>Had Enough Characters (by CleanroomMC)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/the-twilight-forest">https://www.curseforge.com/minecraft/mc-mods/the-twilight-forest</a></p><ul><li>The Twilight Forest (by Benimatic)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/hwyla">https://www.curseforge.com/minecraft/mc-mods/hwyla</a></p><ul><li>Hwyla (by TehNut)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/ic2-tweaker">https://www.curseforge.com/minecraft/mc-mods/ic2-tweaker</a></p><ul><li>IC2 Tweaker (by tttusk)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/heat-and-climate-lib">https://www.curseforge.com/minecraft/mc-mods/heat-and-climate-lib</a></p><ul><li>Heat And Climate Lib (by defeatedcrow)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/had-enough-items">https://www.curseforge.com/minecraft/mc-mods/had-enough-items</a></p><ul><li>Had Enough Items (by CleanroomMC)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/journeymap">https://www.curseforge.com/minecraft/mc-mods/journeymap</a></p><ul><li>JourneyMap (by techbrew)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/shadowfacts-forgelin">https://www.curseforge.com/minecraft/mc-mods/shadowfacts-forgelin</a></p><ul><li>Shadowfacts’ Forgelin (by ShadowfactsDev)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/crafttweaker">https://www.curseforge.com/minecraft/mc-mods/crafttweaker</a></p><ul><li>CraftTweaker (by Jaredlll08)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/in-control">https://www.curseforge.com/minecraft/mc-mods/in-control</a></p><ul><li>In Control! (by McJty)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/energy-converters">https://www.curseforge.com/minecraft/mc-mods/energy-converters</a></p><ul><li>Energy Converters (by xalcon)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/industrial-craft">https://www.curseforge.com/minecraft/mc-mods/industrial-craft</a></p><ul><li>Industrial Craft (by sfPlayer1)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/customskinloader">https://www.curseforge.com/minecraft/mc-mods/customskinloader</a></p><ul><li>CustomSkinLoader (by xfl03)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/earthworks">https://www.curseforge.com/minecraft/mc-mods/earthworks</a></p><ul><li>Earthworks (by Forge_User_14975520)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/surge">https://www.curseforge.com/minecraft/mc-mods/surge</a></p><ul><li>Surge (by DarkhaxDev)</li></ul><p>CurseForge 链接：<br><a href="https://www.curseforge.com/minecraft/mc-mods/mysterious-mountain-lib">https://www.curseforge.com/minecraft/mc-mods/mysterious-mountain-lib</a></p><ul><li>Mysterious Mountain Lib (by sz0999312)</li></ul><p>本整合包内嵌了 Modernity 资源包：</p><p><a href="https://www.curseforge.com/minecraft/texture-packs/modernity">https://www.curseforge.com/minecraft/texture-packs/modernity</a><br><del>本整合包嵌入了开源字体<a href="https://github.com/adobe-fonts/source-sans/blob/release/LICENSE.md">Source Sans 3 Light</a>和<a href="https://github.com/adobe-fonts/source-han-sans/blob/master/LICENSE.txt">Source Han Sans VF</a>，点击链接查看开源协议。</del></p><p>目前版本已不再内嵌字体。</p><h2 id="整合包视频实况"><a href="#整合包视频实况" class="headerlink" title="整合包视频实况"></a>整合包视频实况</h2><p>祝福或诅咒：无限力量之征 拔刀剑+太刀生存</p><p>by<br><a href="https://space.bilibili.com/686127">@籽岷</a></p><p>【紫晶流光】我的世界祝福或诅咒：无限力量之征拔刀剑生存</p><p>by<br><a href="https://space.bilibili.com/171983684">@紫晶流光</a></p><p>从小刀匠到神匠的成神之路 - 第十二期</p><p>by<br><a href="https://space.bilibili.com/694503487">@阿巴阿巴的安星天</a></p><p>《从小刀匠到神匠的成神之路》全系列播放列表：</p><p><a href="https://space.bilibili.com/694503487/channel/detail?cid=200128">https://space.bilibili.com/694503487/channel/detail?cid=200128</a></p><p>由国外玩家制作的 <strong>英语</strong>《祝福或诅咒：无限力量之征》整合包宣传视频</p><p><a href="https://youtu.be/SkXUB28q4rs?t=183">https://youtu.be/SkXUB28q4rs?t=183</a></p><p>我们甚至 <strong>火到国外</strong>！受到全球玩家喜爱的拔刀剑整合包！</p><h2 id="整合包概念图"><a href="#整合包概念图" class="headerlink" title="整合包概念图"></a>整合包概念图</h2><p>_我循着《妖刀的记录及锻造方法》的指引，来到锻刀工坊的故地。<br>在丛生的杂草与嶙峋的乱石中，我拾到一把精钢锻造、寒光逼人的开山刀。</p><p>传说，千年前那位天狗匠人，为寻觅一方宝地建造工坊，<br>初次登上妖怪之山时，曾用此刀斩断荆棘开路。<br>历经漫长岁月，其上铭文依旧如新、熠熠生辉：_<br>_ <strong>若热忱灼如烈阳，若极目可至远方</strong>_</p><p><img src="/static/image/common/none.gif"></p><p>_ <strong>又何惧风刀霜剑，又何惧前路茫茫</strong>_</p><p><img src="/static/image/common/none.gif"><br><img src="/static/image/common/none.gif"></p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>Minecraft 开发团队</p><p>Minecraft Forge 团队</p><p>本整合包中所有 MOD 的作者</p><p>所有为本整合包中包含的 MOD 提供了汉化的玩家</p><h3 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h3><p>虽然不幸失去了 1.12.2 模组开发环境，但是仍然克服困难，</p><p>为最后的太刀匠人 MOD 修复了关键 BUG 的 @0999312</p><p>尽管诸多事务缠身，仍然凭借高超的 Java 技术力和巨大的耐心，</p><p>帮助我解决了 CraftTweaker 的各种问题的 @youyihj</p><p>Minecraft 魔改交流群的各位群友，包括在 MCBBS 有账号和没有账号的各位，我都尽量@一下：</p><p><a href="home_mod-space-uid-3716147.html">@GaryBBB</a> <a href="home_mod-space-uid-1046331.html">@科星</a></p><p>@superhelo</p><p>谢谢你们教我写 CrT 的事件，以及解答我现在看起来很低级，但当时确实困扰了我很久的问题。</p><p>感谢我的朋友 Laevatain 为毕业物品绘制了材质。这个物品用了你的名字来命名，有排面吧。</p><p>感谢<br><a href="home_mod-space-uid-658244.html">@妖月</a></p><p>提供了部分物品的材质。</p><p>感谢我的服务器的各位玩家担任了本整合包的测试员，找到了整合包的各种问题并被我逐一修复。</p><p>感谢我的朋友<br><a href="home_mod-space-uid-674849.html">@東風</a> <a href="home_mod-space-uid-3041158.html">@菠萝_Yuuki1</a> <a href="home_mod-space-uid-761520.html">@弧寒</a></p><p>对我的支持和信任，我爱你们。</p><p><strong>感谢正在看这个帖子的你。</strong></p><h2 id="写给各位整合包作者的话"><a href="#写给各位整合包作者的话" class="headerlink" title="写给各位整合包作者的话"></a>写给各位整合包作者的话</h2><p>这不是 MCBBS 第一个拔刀剑整合包，</p><p>但或许这是 MCBBS 第一个魔改拔刀剑的整合包。</p><p>第一次有人把拔刀剑放在整合包的 C 位，让它成为整合包真正的主角。</p><p>我希望这不是最后一个魔改拔刀剑的整合包，因为我借着这个整合包，</p><p>希望告诉整个国内 Minecraft 魔改整合包圈子，</p><p>不管是国产 MOD、日式 MOD 还是国外 MOD，</p><p>只要整合包作者能发挥创意、精心设计，用做独立游戏的思路来整合它们，</p><p>任何 MOD 都能做成精彩的整合包，哪怕这听上去有多么不可能。</p><p>我希望这个整合包能激励越来越多的整合包制作者，放下对于某些 MOD 的偏见，</p><p>用自己的慧眼去发现那些有潜力的 MOD，让它们成为你设计的游戏的一部分。</p><p>我相信，这样做能打开各位的思路，</p><p>让 MC 整合包不被局限在那几个古典 MOD 划定的范围中，</p><p>而是在更加广阔的天地里，创造出无限的可能。</p><p>如果你喜欢这个整合包，<br>请在帖子下方评分支持我们！</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> MC </category>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> Mod </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dominion | 新的领地插件，支持Folia！</title>
      <link href="/2024/06/07/Dominion/"/>
      <url>/2024/06/07/Dominion/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>鉴于 Residence 插件的作者项目较多，维护压力大，无法及时跟进新版本以及适配Folia核心。故开发此插件，旨在平替纯净版生存服Residence的使用。</p><p>请注意，本插件仍然处于测试阶段，因此可能存在一定的行为控制漏洞。如果遇到此类遗漏的行为控制欢迎即使发送邮件或添加QQ告知，感激不尽。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>本插件基本还原了Residence的核心功能，主要适用于原版纯净生存服务器的防破坏目的，因此暂不考虑引入价格系统、商店等非原版Minecraft玩法。</p><p><img src="https://ssl.lunadeer.cn:14437/i/2024/02/16/65cf3b08c986b.png"></p><p>为了提高存储效率，本插件使用了数据库+缓存的方式存储领地数据，玩家配置领地权限直接修改数据库内容，随后触发缓存更新。权限控制则以异步的方式访问缓存，减少事件阻塞。</p><p>权限系统主要由领地权限、玩家特权组成，玩家特权优先级高于领地权限。没有特权的玩家在领地内收到领地权限的控制，有特权配置则按照特权设置受控。</p><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul><li>支持 Postgresql 或 sqlite 存储数据；</li><li>支持BlueMap卫星地图渲染；</li><li>支持为玩家单独设置特权；</li><li>支持设置领地管理员；</li><li>支持子领地；</li><li>采用 TUI 方式进行权限配置交互，简单快捷；</li></ul><h2 id="支持版本"><a href="#支持版本" class="headerlink" title="支持版本"></a>支持版本</h2><ul><li>1.20.1+ (Paper、Folia)</li></ul><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li>WebUI</li><li>Admin TUI</li></ul><h2 id="建议与反馈"><a href="#建议与反馈" class="headerlink" title="建议与反馈"></a>建议与反馈</h2><p>Mail: <a href="mailto:zhangyuheng@lunadeer.cn">zhangyuheng@lunadeer.cn</a></p><p>QQ群：309428300</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> MC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用新版opl联机mc教程 | Mybbs</title>
      <link href="/2024/06/07/opl_mc/"/>
      <url>/2024/06/07/opl_mc/</url>
      
        <content type="html"><![CDATA[<p>本教程前提是你和你的朋友已经安装了相同版本，且mod相同的minecraft.</p><p>同时建议存在无正版玩家时，都使用外置登录</p><p>注意，此教程为面向小白的教程，可能内容写得过于详细，请自行判断是否需要阅读。</p><p>粘贴 <code>ctrl</code> + <code>v</code> 复制 <code>ctrl</code> + <code>c</code></p><h3 id="作为房主"><a href="#作为房主" class="headerlink" title="作为房主"></a>作为房主</h3><ol><li>打开minecraft，进入游戏，选择单人游戏，根据情况进入世界</li><li>点击 <code>esc</code>(键盘左上角)，点击 <code>&amp;#x5BF9;&amp;#x5C40;&amp;#x57DF;&amp;#x7F51;&amp;#x5F00;&amp;#x653E;</code></li><li>记录左下角出现的端口号</li><li>双击运行软件主程序，从页面左上角获取你的UUID</li><li>将你的 <code>UUID</code>和 <code>&amp;#x7AEF;&amp;#x53E3;&amp;#x53F7;</code>发个你的朋友，并点击右上角的启动按钮</li></ol><p><img src="https://blog.gldhn.top/2024/04/22/opl_mc/tp1.png"></p><h3 id="作为连接的玩家"><a href="#作为连接的玩家" class="headerlink" title="作为连接的玩家"></a>作为连接的玩家</h3><ol><li>打开minecraft，点击多人游戏</li><li>打开软件主程序，点击右上角 <code>&amp;#x65B0;&amp;#x5EFA;&amp;#x8FDE;&amp;#x63A5;</code></li><li>依次输入房主为你提供的UUID和端口（填远程端口，本地端口会自动填写）协议选择 <code>TCP</code> <img src="https://blog.gldhn.top/2024/04/22/opl_mc/tp2.png"></li><li>点击添加，然后点击右上角的启动</li><li>可以在隧道列表处看到你的连接， <code>&amp;#x8FDE;&amp;#x63A5;&amp;#xFF1A;ip:&amp;#x7AEF;&amp;#x53E3; -&gt;</code>后为你进游戏的ip地址（请完整复制） <img src="https://blog.gldhn.top/2024/04/22/opl_mc/tp3.png"></li><li>点击左上角日志，观察日志出现连接成功的提示</li><li>回到游戏，点击 <code>&amp;#x6DFB;&amp;#x52A0;&amp;#x670D;&amp;#x52A1;&amp;#x5668;</code>输入第5点处获取的ip地址(可提前添加)</li><li>刷新服务器列表，出现服务器信息后双击进入世界</li></ol><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>后续联机仅游戏端口会发生改变，房主发送新的端口即可，连接的玩家只需要点击编辑修改 <code>&amp;#x8FDC;&amp;#x7A0B;&amp;#x7AEF;&amp;#x53E3;</code>即可</p><p>隧道可自行选择是否启用，也可以点击编辑参数</p><p>opl联机工具下载地址：<a href="https://blog.gldhn.top/2024/04/19/opl_ui/">UI测试版</a></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> MC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ANine-LuckPermsEX | 九之称号的LP称号支持</title>
      <link href="/2024/06/07/ANine-LuckPermsEX/"/>
      <url>/2024/06/07/ANine-LuckPermsEX/</url>
      
        <content type="html"><![CDATA[<h1 id="正文部分"><a href="#正文部分" class="headerlink" title="正文部分"></a>正文部分</h1><h3 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h3><blockquote><p>ANine-LuckPermsEX是Anine-Title的附属插件 ANine-LuckPermsEX可以同步Anine-Title的称号到LP权限称号上。</p></blockquote><h3 id="二、介绍"><a href="#二、介绍" class="headerlink" title="二、介绍"></a>二、介绍</h3><p>ANine作者写的ANine-TitleExtend也可以做到这点 本插件与其不同的在于TitleExtend不能在指令中使用引号，导致带有空格的称号无法正常赋予，本插件可以做到这点。 目前插件写死在插件里，称号优先级为30，日后会更新为可自定义指令</p><h3 id="三、使用方法"><a href="#三、使用方法" class="headerlink" title="三、使用方法"></a>三、使用方法</h3><ol><li>安装Anine-Title插件</li><li>把ANine-LuckPermsEX放到插件文件夹中 3.没有配置（目前），直接开服即可</li></ol><h3 id="四、下载"><a href="#四、下载" class="headerlink" title="四、下载"></a>四、下载</h3><p><a href="https://lipind.dns.navy:5001/d/f/814678111726647544">点击前往下载</a></p><h3 id="五、催更"><a href="#五、催更" class="headerlink" title="五、催更"></a>五、催更</h3><p>作者：<a href="mailto:lipind@foxmail.com">lipind@foxmail.com</a></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> MC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[github]一键免费部署你的私人 ChatGPT 网页应用</title>
      <link href="/2024/06/06/4939453/"/>
      <url>/2024/06/06/4939453/</url>
      
        <content type="html"><![CDATA[<p>[下载zip]（<a href="https://www.pixelbbs.cn/source/plugin/bphp_clouds/upload/4438/20240606/f5765fe962e757b97ec91eeb63fcc2d1.zip%EF%BC%89">https://www.pixelbbs.cn/source/plugin/bphp_clouds/upload/4438/20240606/f5765fe962e757b97ec91eeb63fcc2d1.zip）</a></p><div align="center"><img src="./docs/images/icon.svg" alt="预览"><h1 align="center">NextChat</h1><p>一键免费部署你的私人 ChatGPT 网页应用，支持 GPT3, GPT4 &amp; Gemini Pro 模型。</p><p><a href="https://chat-gpt-next-web.vercel.app/">演示 Demo</a> / <a href="https://github.com/Yidadaa/ChatGPT-Next-Web/issues">反馈 Issues</a> / <a href="https://discord.gg/zrhvHCr79N">加入 Discord</a></p><p><a href="https://vercel.com/new/clone?repository-url=https://github.com/Yidadaa/ChatGPT-Next-Web&amp;env=OPENAI_API_KEY&amp;env=CODE&amp;project-name=chatgpt-next-web&amp;repository-name=ChatGPT-Next-Web"><img src="https://vercel.com/button" alt="Deploy with Vercel"></a></p><p><a href="https://zeabur.com/templates/ZBUEFA"><img src="https://zeabur.com/button.svg" alt="Deploy on Zeabur"></a></p><p><a href="https://gitpod.io/#https://github.com/Yidadaa/ChatGPT-Next-Web"><img src="https://gitpod.io/button/open-in-gitpod.svg" alt="Open in Gitpod"></a></p><p><img src="/./docs/images/cover.png" alt="主界面"></p></div><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><ol><li>准备好你的 <a href="https://platform.openai.com/account/api-keys">OpenAI API Key</a>;</li><li>点击右侧按钮开始部署：<br><a href="https://vercel.com/new/clone?repository-url=https://github.com/Yidadaa/ChatGPT-Next-Web&amp;env=OPENAI_API_KEY&amp;env=CODE&amp;env=GOOGLE_API_KEY&amp;project-name=chatgpt-next-web&amp;repository-name=ChatGPT-Next-Web"><img src="https://vercel.com/button" alt="Deploy with Vercel"></a>，直接使用 Github 账号登录即可，记得在环境变量页填入 API Key 和<a href="#%E9%85%8D%E7%BD%AE%E9%A1%B5%E9%9D%A2%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81">页面访问密码</a> CODE；</li><li>部署完毕后，即可开始使用；</li><li>（可选）<a href="https://vercel.com/docs/concepts/projects/domains/add-a-domain">绑定自定义域名</a>：Vercel 分配的域名 DNS 在某些区域被污染了，绑定自定义域名即可直连。</li></ol><h2 id="保持更新"><a href="#保持更新" class="headerlink" title="保持更新"></a>保持更新</h2><p>如果你按照上述步骤一键部署了自己的项目，可能会发现总是提示“存在更新”的问题，这是由于 Vercel 会默认为你创建一个新项目而不是 fork 本项目，这会导致无法正确地检测更新。<br>推荐你按照下列步骤重新部署：</p><ul><li>删除掉原先的仓库；</li><li>使用页面右上角的 fork 按钮，fork 本项目；</li><li>在 Vercel 重新选择并部署，<a href="./docs/vercel-cn.md#%E5%A6%82%E4%BD%95%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE">请查看详细教程</a>。</li></ul><h3 id="打开自动更新"><a href="#打开自动更新" class="headerlink" title="打开自动更新"></a>打开自动更新</h3><blockquote><p>如果你遇到了 Upstream Sync 执行错误，请手动 Sync Fork 一次！</p></blockquote><p>当你 fork 项目之后，由于 Github 的限制，需要手动去你 fork 后的项目的 Actions 页面启用 Workflows，并启用 Upstream Sync Action，启用之后即可开启每小时定时自动更新：</p><p><img src="/./docs/images/enable-actions.jpg" alt="自动更新"></p><p><img src="/./docs/images/enable-actions-sync.jpg" alt="启用自动更新"></p><h3 id="手动更新代码"><a href="#手动更新代码" class="headerlink" title="手动更新代码"></a>手动更新代码</h3><p>如果你想让手动立即更新，可以查看 <a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork">Github 的文档</a> 了解如何让 fork 的项目与上游代码同步。</p><p>你可以 star/watch 本项目或者 follow 作者来及时获得新功能更新通知。</p><h2 id="配置页面访问密码"><a href="#配置页面访问密码" class="headerlink" title="配置页面访问密码"></a>配置页面访问密码</h2><blockquote><p>配置密码后，用户需要在设置页手动填写访问码才可以正常聊天，否则会通过消息提示未授权状态。</p></blockquote><blockquote><p><strong>警告</strong>：请务必将密码的位数设置得足够长，最好 7 位以上，否则<a href="https://github.com/Yidadaa/ChatGPT-Next-Web/issues/518">会被爆破</a>。</p></blockquote><p>本项目提供有限的权限控制功能，请在 Vercel 项目控制面板的环境变量页增加名为 <code>CODE</code> 的环境变量，值为用英文逗号分隔的自定义密码：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code1,code2,code3</span><br></pre></td></tr></tbody></table></figure><p>增加或修改该环境变量后，请<strong>重新部署</strong>项目使改动生效。</p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><blockquote><p>本项目大多数配置项都通过环境变量来设置，教程：<a href="./docs/vercel-cn.md">如何修改 Vercel 环境变量</a>。</p></blockquote><h3 id="OPENAI-API-KEY-（必填项）"><a href="#OPENAI-API-KEY-（必填项）" class="headerlink" title="OPENAI_API_KEY （必填项）"></a><code>OPENAI_API_KEY</code> （必填项）</h3><p>OpanAI 密钥，你在 openai 账户页面申请的 api key，使用英文逗号隔开多个 key，这样可以随机轮询这些 key。</p><h3 id="CODE-（可选）"><a href="#CODE-（可选）" class="headerlink" title="CODE （可选）"></a><code>CODE</code> （可选）</h3><p>访问密码，可选，可以使用逗号隔开多个密码。</p><p><strong>警告</strong>：如果不填写此项，则任何人都可以直接使用你部署后的网站，可能会导致你的 token 被急速消耗完毕，建议填写此选项。</p><h3 id="BASE-URL-（可选）"><a href="#BASE-URL-（可选）" class="headerlink" title="BASE_URL （可选）"></a><code>BASE_URL</code> （可选）</h3><blockquote><p>Default: <code>https://api.openai.com</code></p></blockquote><blockquote><p>Examples: <code>http://your-openai-proxy.com</code></p></blockquote><p>OpenAI 接口代理 URL，如果你手动配置了 openai 接口代理，请填写此选项。</p><blockquote><p>如果遇到 ssl 证书问题，请将 <code>BASE_URL</code> 的协议设置为 http。</p></blockquote><h3 id="OPENAI-ORG-ID-（可选）"><a href="#OPENAI-ORG-ID-（可选）" class="headerlink" title="OPENAI_ORG_ID （可选）"></a><code>OPENAI_ORG_ID</code> （可选）</h3><p>指定 OpenAI 中的组织 ID。</p><h3 id="AZURE-URL-（可选）"><a href="#AZURE-URL-（可选）" class="headerlink" title="AZURE_URL （可选）"></a><code>AZURE_URL</code> （可选）</h3><blockquote><p>形如：https://{azure-resource-url}/openai/deployments/{deploy-name}</p></blockquote><p>Azure 部署地址。</p><h3 id="AZURE-API-KEY-（可选）"><a href="#AZURE-API-KEY-（可选）" class="headerlink" title="AZURE_API_KEY （可选）"></a><code>AZURE_API_KEY</code> （可选）</h3><p>Azure 密钥。</p><h3 id="AZURE-API-VERSION-（可选）"><a href="#AZURE-API-VERSION-（可选）" class="headerlink" title="AZURE_API_VERSION （可选）"></a><code>AZURE_API_VERSION</code> （可选）</h3><p>Azure Api 版本，你可以在这里找到：<a href="https://learn.microsoft.com/en-us/azure/ai-services/openai/reference#chat-completions">Azure 文档</a>。</p><h3 id="GOOGLE-API-KEY-optional"><a href="#GOOGLE-API-KEY-optional" class="headerlink" title="GOOGLE_API_KEY (optional)"></a><code>GOOGLE_API_KEY</code> (optional)</h3><p>Google Gemini Pro 密钥.</p><h3 id="GOOGLE-URL-optional"><a href="#GOOGLE-URL-optional" class="headerlink" title="GOOGLE_URL (optional)"></a><code>GOOGLE_URL</code> (optional)</h3><p>Google Gemini Pro Api Url.</p><h3 id="ANTHROPIC-API-KEY-optional"><a href="#ANTHROPIC-API-KEY-optional" class="headerlink" title="ANTHROPIC_API_KEY (optional)"></a><code>ANTHROPIC_API_KEY</code> (optional)</h3><p>anthropic claude Api Key.</p><h3 id="ANTHROPIC-API-VERSION-optional"><a href="#ANTHROPIC-API-VERSION-optional" class="headerlink" title="ANTHROPIC_API_VERSION (optional)"></a><code>ANTHROPIC_API_VERSION</code> (optional)</h3><p>anthropic claude Api version.</p><h3 id="ANTHROPIC-URL-optional"><a href="#ANTHROPIC-URL-optional" class="headerlink" title="ANTHROPIC_URL (optional)"></a><code>ANTHROPIC_URL</code> (optional)</h3><p>anthropic claude Api Url.</p><h3 id="HIDE-USER-API-KEY-（可选）"><a href="#HIDE-USER-API-KEY-（可选）" class="headerlink" title="HIDE_USER_API_KEY （可选）"></a><code>HIDE_USER_API_KEY</code> （可选）</h3><p>如果你不想让用户自行填入 API Key，将此环境变量设置为 1 即可。</p><h3 id="DISABLE-GPT4-（可选）"><a href="#DISABLE-GPT4-（可选）" class="headerlink" title="DISABLE_GPT4 （可选）"></a><code>DISABLE_GPT4</code> （可选）</h3><p>如果你不想让用户使用 GPT-4，将此环境变量设置为 1 即可。</p><h3 id="ENABLE-BALANCE-QUERY-（可选）"><a href="#ENABLE-BALANCE-QUERY-（可选）" class="headerlink" title="ENABLE_BALANCE_QUERY （可选）"></a><code>ENABLE_BALANCE_QUERY</code> （可选）</h3><p>如果你想启用余额查询功能，将此环境变量设置为 1 即可。</p><h3 id="DISABLE-FAST-LINK-（可选）"><a href="#DISABLE-FAST-LINK-（可选）" class="headerlink" title="DISABLE_FAST_LINK （可选）"></a><code>DISABLE_FAST_LINK</code> （可选）</h3><p>如果你想禁用从链接解析预制设置，将此环境变量设置为 1 即可。</p><h3 id="WHITE-WEBDEV-ENDPOINTS-可选"><a href="#WHITE-WEBDEV-ENDPOINTS-可选" class="headerlink" title="WHITE_WEBDEV_ENDPOINTS (可选)"></a><code>WHITE_WEBDEV_ENDPOINTS</code> (可选)</h3><p>如果你想增加允许访问的webdav服务地址，可以使用该选项，格式要求：</p><ul><li>每一个地址必须是一个完整的 endpoint<blockquote><p><code>https://xxxx/xxx</code></p></blockquote></li><li>多个地址以<code>,</code>相连</li></ul><h3 id="CUSTOM-MODELS-（可选）"><a href="#CUSTOM-MODELS-（可选）" class="headerlink" title="CUSTOM_MODELS （可选）"></a><code>CUSTOM_MODELS</code> （可选）</h3><blockquote><p>示例：<code>+qwen-7b-chat,+glm-6b,-gpt-3.5-turbo,gpt-4-1106-preview=gpt-4-turbo</code> 表示增加 <code>qwen-7b-chat</code> 和 <code>glm-6b</code> 到模型列表，而从列表中删除 <code>gpt-3.5-turbo</code>，并将 <code>gpt-4-1106-preview</code> 模型名字展示为 <code>gpt-4-turbo</code>。<br>如果你想先禁用所有模型，再启用指定模型，可以使用 <code>-all,+gpt-3.5-turbo</code>，则表示仅启用 <code>gpt-3.5-turbo</code></p></blockquote><p>用来控制模型列表，使用 <code>+</code> 增加一个模型，使用 <code>-</code> 来隐藏一个模型，使用 <code>模型名=展示名</code> 来自定义模型的展示名，用英文逗号隔开。</p><h3 id="DEFAULT-INPUT-TEMPLATE-（可选）"><a href="#DEFAULT-INPUT-TEMPLATE-（可选）" class="headerlink" title="DEFAULT_INPUT_TEMPLATE （可选）"></a><code>DEFAULT_INPUT_TEMPLATE</code> （可选）</h3><p>自定义默认的 template，用于初始化『设置』中的『用户输入预处理』配置项</p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p>点击下方按钮，开始二次开发：</p><p><a href="https://gitpod.io/#https://github.com/Yidadaa/ChatGPT-Next-Web"><img src="https://gitpod.io/button/open-in-gitpod.svg" alt="Open in Gitpod"></a></p><p>在开始写代码之前，需要在项目根目录新建一个 <code>.env.local</code> 文件，里面填入环境变量：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">OPENAI_API_KEY=&lt;your api key here&gt;</span><br><span class="line"></span><br><span class="line"># 中国大陆用户，可以使用本项目自带的代理进行开发，你也可以自由选择其他代理地址</span><br><span class="line">BASE_URL=https://b.nextweb.fun/api/proxy</span><br></pre></td></tr></tbody></table></figure><h3 id="本地开发"><a href="#本地开发" class="headerlink" title="本地开发"></a>本地开发</h3><ol><li>安装 nodejs 18 和 yarn，具体细节请询问 ChatGPT；</li><li>执行 <code>yarn install &amp;&amp; yarn dev</code> 即可。⚠️ 注意：此命令仅用于本地开发，不要用于部署！</li><li>如果你想本地部署，请使用 <code>yarn install &amp;&amp; yarn build &amp;&amp; yarn start</code> 命令，你可以配合 pm2 来守护进程，防止被杀死，详情询问 ChatGPT。</li></ol><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="容器部署-（推荐）"><a href="#容器部署-（推荐）" class="headerlink" title="容器部署 （推荐）"></a>容器部署 （推荐）</h3><blockquote><p>Docker 版本需要在 20 及其以上，否则会提示找不到镜像。</p></blockquote><blockquote><p>⚠️ 注意：docker 版本在大多数时间都会落后最新的版本 1 到 2 天，所以部署后会持续出现“存在更新”的提示，属于正常现象。</p></blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker pull yidadaa/chatgpt-next-web</span><br><span class="line"></span><br><span class="line">docker run -d -p 3000:3000 \</span><br><span class="line">   -e OPENAI_API_KEY=sk-xxxx \</span><br><span class="line">   -e CODE=页面访问密码 \</span><br><span class="line">   yidadaa/chatgpt-next-web</span><br></pre></td></tr></tbody></table></figure><p>你也可以指定 proxy：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3000:3000 \</span><br><span class="line">   -e OPENAI_API_KEY=sk-xxxx \</span><br><span class="line">   -e CODE=页面访问密码 \</span><br><span class="line">   --net=host \</span><br><span class="line">   -e PROXY_URL=http://127.0.0.1:7890 \</span><br><span class="line">   yidadaa/chatgpt-next-web</span><br></pre></td></tr></tbody></table></figure><p>如果你的本地代理需要账号密码，可以使用：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-e PROXY_URL="http://127.0.0.1:7890 user password"</span><br></pre></td></tr></tbody></table></figure><p>如果你需要指定其他环境变量，请自行在上述命令中增加 <code>-e 环境变量=环境变量值</code> 来指定。</p><h3 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h3><p>在控制台运行下方命令：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s https://raw.githubusercontent.com/Yidadaa/ChatGPT-Next-Web/main/scripts/setup.sh)</span><br></pre></td></tr></tbody></table></figure><p>⚠️ 注意：如果你安装过程中遇到了问题，请使用 docker 部署。</p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><h3 id="捐赠者"><a href="#捐赠者" class="headerlink" title="捐赠者"></a>捐赠者</h3><blockquote><p>见英文版。</p></blockquote><h3 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h3><p><a href="https://github.com/Yidadaa/ChatGPT-Next-Web/graphs/contributors">见项目贡献者列表</a></p><h3 id="相关项目"><a href="#相关项目" class="headerlink" title="相关项目"></a>相关项目</h3><ul><li><a href="https://github.com/songquanpeng/one-api">one-api</a>: 一站式大模型额度管理平台，支持市面上所有主流大语言模型</li></ul><h2 id="开源协议"><a href="#开源协议" class="headerlink" title="开源协议"></a>开源协议</h2><p><a href="https://opensource.org/license/mit/">MIT</a></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】搭建一个Chat-GPT Proxy</title>
      <link href="/2024/06/06/130442795/"/>
      <url>/2024/06/06/130442795/</url>
      
        <content type="html"><![CDATA[<p>由于众所周知的原因，Chat-GPT在国内无法使用。如果要使用的话，需要一定的科技含量。</p><h2 id="账号获取"><a href="#账号获取" class="headerlink" title="账号获取"></a>账号获取</h2><p>目前主流两种方式：<br>1、按照教程，自己注册。<br>2、直接购买一个账号。</p><p>直接注册的话，还需要一个开放国的手机号码，一个邮箱。没有手机号码的话，可以使用虚拟手机号，但这里会遇到运气的问题。比较折腾。</p><p>直接购买，则相对简单，但要防骗。简单来说，也是一个运气问题。如果购买账号，则要注意：卖方需要提供两个账号：1）一个可以登录邮箱的邮箱账号密码，可用于OpenAi密码重置。2）OpenAi登录账号密码。</p><p>购买到账号之后，首先登录邮箱，更改邮箱密码，接下来登录OpenAi，重置密码（不可修改密码，只可重置）。</p><p>注意：登录OpenAi，不可用国内地址，或者被大量共享的地址。</p><h2 id="访问环境"><a href="#访问环境" class="headerlink" title="访问环境"></a>访问环境</h2><p>由于使用被大量共享的地址容易导致封号的问题。因此，推荐你自己使用一个独享的IP地址来访问，因此，首选”美国”云主机。（注意不要贪便宜选个国内的，用不了）<br>比如 微软的Azure（实测），阿里云，亚马逊云（实测,Web已封，但Api可用） 等。<br>主机配置无需太高，1核、1G，Win11英文版即可满足需求。不建议使用Win7，实测远程桌面界面太模糊，而且还要升级浏览器，乱七八糟的事情太多。</p><p>使用这个云主机，就可以直接访问Chat.OpenAi.com。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>云主机，在美国，访问起来比较卡，你只有耐心等待了。就算升级云主机也没啥用，因为瓶颈在网络，而不是系统。我自己的虚拟机，CPU利用率不到10%，内存大概950M左右。也就是说，Win11，1核，1G就可以满足需求，多了也浪费。</p><p>如果每次通过远程桌面的浏览器访问OpenAi的话，卡的厉害。因此，我们可以考虑将这台云主机作为一个Proxy，然后通过Web Api的方式来访问。</p><h2 id="开发服务器"><a href="#开发服务器" class="headerlink" title="开发服务器"></a>开发服务器</h2><p>目前有很多方案，本人擅长C#。本来打算自己做一个，但发现目前已经有人做好了，那就直接用。<br>首先以最小化模式创建一个ASP.NET Core Web Api，.NET版本选6.0即可。<br>接下来，添加nuget包：OpenAI-DotNet-Proxy</p><p>修改Program.cs代码</p><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> UserToken = <span class="string">"sess-"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title">AuthenticationFilter</span> : <span class="title">AbstractAuthenticationFilter</span></span><br><span class="line">    {</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ValidateAuthentication</span>(<span class="params">IHeaderDictionary request</span>)</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (!request.Authorization.ToString().Contains(UserToken))</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> AuthenticationException(<span class="string">"User is not authorized"</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">var</span> auth = OpenAIAuthentication.LoadFromEnv();</span><br><span class="line">        <span class="keyword">var</span> settings = <span class="keyword">new</span> OpenAIClientSettings();</span><br><span class="line">        <span class="keyword">var</span> openAIClient = <span class="keyword">new</span> OpenAIClient(auth, settings);</span><br><span class="line">        <span class="keyword">var</span> proxy = OpenAIProxyStartup.CreateDefaultHost&lt;AuthenticationFilter&gt;(args, openAIClient);</span><br><span class="line">        proxy.Run();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>接下来编译，发布即可。<br>将编译好的程序，复制到云主机上。</p><h2 id="申请免费证书"><a href="#申请免费证书" class="headerlink" title="申请免费证书"></a>申请免费证书</h2><p>如果你的域名在阿里申请，则可向阿里申请一个免费证书。腾讯，同理。<br>下载那个IIS证书，即可。</p><h2 id="添加SSL证书"><a href="#添加SSL证书" class="headerlink" title="添加SSL证书"></a>添加SSL证书</h2><p>修改 appsettings.json</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="string">"Logging"</span>: {</span><br><span class="line">    <span class="string">"LogLevel"</span>: {</span><br><span class="line">      <span class="string">"Default"</span>: <span class="string">"Information"</span>,</span><br><span class="line">      <span class="string">"Microsoft.AspNetCore"</span>: <span class="string">"Warning"</span></span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="string">"AllowedHosts"</span>: <span class="string">"*"</span>,</span><br><span class="line">  <span class="string">"AllowInvalid "</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"Kestrel"</span>: {</span><br><span class="line">    <span class="string">"Endpoints"</span>: {</span><br><span class="line">      <span class="string">"Https"</span>: {</span><br><span class="line">        <span class="string">"Url"</span>: <span class="string">"https://*:443"</span>,</span><br><span class="line">        <span class="string">"Certificate"</span>: {</span><br><span class="line">          <span class="string">"Path"</span>: <span class="string">"C:\\Users\\Zmrbak\\Desktop\\publish\\www.abc.com.pfx"</span>,</span><br><span class="line">          <span class="string">"Password"</span>: <span class="string">"123465n"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"Certificates"</span>: {</span><br><span class="line">      <span class="string">"Default"</span>: {</span><br><span class="line">        <span class="string">"Path"</span>: <span class="string">"C:\\Users\\Zmrbak\\Desktop\\publish\\www.chatgpt.abc.com.pfx"</span>,</span><br><span class="line">        <span class="string">"Password"</span>: <span class="string">"123465n"</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>在云主机上，设置环境配置（中文：此电脑\属性\高级系统设置\环境变量\系统变量），添加如下变量：<br><strong>OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxx</strong><br>来自于：<a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a><br><strong>OPENAI_ORGANIZATION_ID=org-xxxxxxxxxxxxxxxxxxxxx</strong><br>来自于：<a href="https://platform.openai.com/account/org-settings">https://platform.openai.com/account/org-settings</a></p><p>执行如下脚本（请替换正确的OPENAI_API_KEY、OPENAI_ORGANIZATION_ID）</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setx OPENAI_API_KEY sk-xxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">setx OPENAI_ORGANIZATION_ID org-xxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></tbody></table></figure><p>在Azure控制面板中，发布443端口，允许访问。</p><p>启动Web Api程序。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>在你的计算机上执行如下指令</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -k https://云主机/health</span><br></pre></td></tr></tbody></table></figure><p>如果能够返回 ok，则表明云主机端Web Api工作正常。</p><h2 id="客户端开发"><a href="#客户端开发" class="headerlink" title="客户端开发"></a>客户端开发</h2><p>创建一个.NET的控制台程序。<br>添加nuget程序包：OpenAI-DotNet<br>编写如下代码：</p><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">{</span><br><span class="line">    HttpClientHandler clientHandler = <span class="keyword">new</span> HttpClientHandler();</span><br><span class="line">    clientHandler.ServerCertificateCustomValidationCallback += (sender, cert, chain, sslPolicyErrors) =&gt; { <span class="keyword">return</span> <span class="literal">true</span>; };</span><br><span class="line">    clientHandler.SslProtocols = SslProtocols.None;</span><br><span class="line">    <span class="keyword">var</span> httpClient = <span class="keyword">new</span> HttpClient(clientHandler);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> auth = <span class="keyword">new</span> OpenAIAuthentication(<span class="string">$"sess-aAbBcCdDeE123456789"</span>);</span><br><span class="line">    <span class="keyword">var</span> settings = <span class="keyword">new</span> OpenAIClientSettings(domain: <span class="string">"云主机IP地址"</span>);</span><br><span class="line">    <span class="keyword">var</span> api = <span class="keyword">new</span> OpenAIClient(auth, settings, httpClient);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> messages = <span class="keyword">new</span> List&lt;Message&gt;</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">new</span> Message(Role.System, <span class="string">"特朗普什么时候当选美国总统的？"</span>),</span><br><span class="line">    };</span><br><span class="line">    <span class="keyword">var</span> chatRequest = <span class="keyword">new</span> ChatRequest(messages);</span><br><span class="line">    <span class="keyword">await</span> api.ChatEndpoint.StreamCompletionAsync(chatRequest, result =&gt;</span><br><span class="line">    {</span><br><span class="line">        Console.Write(result.FirstChoice);</span><br><span class="line">    });</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><p>输出：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">特朗普当选美国总统是在2016年11月8日的美国总统选举中获胜的。</span><br></pre></td></tr></tbody></table></figure><p>则表明:客户端</p><p>OpenAI-DotNet官网资料：<br><a href="https://github.com/RageAgainstThePixel/OpenAI-DotNet">https://github.com/RageAgainstThePixel/OpenAI-DotNet</a></p><h2 id="求支持"><a href="#求支持" class="headerlink" title="求支持"></a>求支持</h2><p><img src="https://img-blog.csdnimg.cn/2cb5bfaea0b94cb4b0aec64945a51ca8.png#pic_center"></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模组整合包 - 我的世界随机空岛1.1.4手机移植</title>
      <link href="/2024/06/03/481472347/"/>
      <url>/2024/06/03/481472347/</url>
      
        <content type="html"><![CDATA[<p>这是一个受启发于原版随机空岛数据包的整合包，整合包每3分钟会随机刷新出原版及模组的方块【【保姆级一键自动安装】中配科技空岛我的世界随机空岛1.1.4手机移植版（FCL启动器制作）<br><img src="https://s21.ax1x.com/2024/04/07/pFLS641.md.jpg"><br><img src="https://s21.ax1x.com/2024/04/07/pFLSWjO.md.jpg"><br><img src="https://s21.ax1x.com/2024/04/07/pFLS236.md.jpg"><br><img src="https://s21.ax1x.com/2024/04/07/pFLSRgK.md.jpg"><br><img src="https://s21.ax1x.com/2024/04/07/pFLSg9x.md.jpg"><br><img src="https://s21.ax1x.com/2024/04/07/pFLS4De.md.jpg"><br><a href="https://drive.uc.cn/s/94347da084534#/list/share">下载</a></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 整合包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bedrock Dedicated Server - 官方我的世界基岩版专用服务端</title>
      <link href="/2024/06/02/178/"/>
      <url>/2024/06/02/178/</url>
      
        <content type="html"><![CDATA[<p>在2018年9月11日，Mojang发布了官方Bedrock Edition服务器软件的早期alpha版本。</p><p>Bedrock版与Java版服务器软件类似，专用的基岩服务器允许Windows和Linux计算机上的Minecraft玩家在自己的设备上开设服务器，或使用基于云的服务托管其服务器。 BDS与Realms领域服使用的服务器软件相同 。</p><h2 id="推荐硬件​"><a href="#推荐硬件​" class="headerlink" title="推荐硬件​"></a>推荐硬件​</h2><p>BDS允许除了来自Nintendo Switch的玩家加入服务器。Xbox One用户只能通过LAN连接方式加入服务器。与使用TCP端口的Java版不同，BDS使用UDP端口。IPv4的默认端口为19132，IPv6的默认端口为19133。这些可以在server.properties中更改。</p><p>与官方Java版服务器软件不同，其他第三方基岩版服务器软件通常缺少Bedrock Edition vanilla服务（内置于客户端）中的许多内容。服务器也没有Mojang源代码。目前大多数Bedrock Edition服务器（包括特色服务器）使用还是非官方软件，因为Mojang的Bedrock Edition官方服务器软件目前还在进行测试。</p><h2 id="运行平台​"><a href="#运行平台​" class="headerlink" title="运行平台​"></a>运行平台​</h2><p>Bedrock Server 的 Linux 版本需要 Ubuntu 18 或更高版本。不支持其他发行版。</p><p>将文件解压到空文件夹中。使用以下命令启动服务器：：</p><p>代码：</p><p>LD_LIBRARY_PATH=. ./bedrock_server</p><p>Windows 版本的 Bedrock Server 需要：</p><ul><li>Windows 10 版本 1703 或更高版本</li><li>Windows Server 2016 或更高版本</li></ul><p>将文件解压缩到一个空文件夹中。执行bedrock_server.exe文件启动服务器。</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> MC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 服务端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO系列教程 | 为HEXO绑定自己的域名 | 小白向教程 –</title>
      <link href="/2024/06/02/hexo-tutorial-use-your-domain-beginner/"/>
      <url>/2024/06/02/hexo-tutorial-use-your-domain-beginner/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>GitHub为我们的HEXO博客提供了免费的域名，真的是超级方便！但是以 <code>.github.io</code>结尾的域名显得有些冗长了，如果我们喜欢简短、具有自己特色的域名，不妨看看这篇文章，为我们漂亮的HEXO博客绑定一个自己的域名！</p><h2 id="2-准备域名"><a href="#2-准备域名" class="headerlink" title="2. 准备域名"></a>2. 准备域名</h2><p>你可以看夜梦的这篇文章准备你心仪的域名：<a href="https://tech.yemengstar.com/register-domain-via-rainyun/">域名注册新选择——雨云</a></p><p>准备好域名，我们就可以开始准备绑定属于自己的域名啦！夜梦的测试域名为 <code>yemengstar.top</code>，注册在腾讯云，所以就以腾讯云DNSPOD进行演示。雨云上DNS解析的方式也是一样的！</p><h2 id="3-配置域名"><a href="#3-配置域名" class="headerlink" title="3. 配置域名"></a>3. 配置域名</h2><h3 id="3-1-DNS中设置CNAME记录"><a href="#3-1-DNS中设置CNAME记录" class="headerlink" title="3.1 DNS中设置CNAME记录"></a>3.1 DNS中设置CNAME记录</h3><p>GitHub提供的详细文档：<a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain">Managing a custom domain for your GitHub Pages site – GitHub Docs</a></p><p>我们需要在DNS中设置一个 <strong>CNAME记录</strong>，将自定义域名指向 <code>yemenghexo.github.io</code>（ <code>&amp;#x4F60;&amp;#x7684;&amp;#x7528;&amp;#x6237;&amp;#x540D;.github.io</code>）：</p><h3 id="3-2-本地CNAME文件"><a href="#3-2-本地CNAME文件" class="headerlink" title="3.2 本地CNAME文件"></a>3.2 本地CNAME文件</h3><p>完成A记录解析后，我们需要在本地HEXO中的 <code>source</code>文件夹下（ <strong>请一定在source文件夹下创建！</strong>）创建一个CNAME文件（不带任何后缀）</p><p>将我们的 <strong>自定义域名</strong>填写进去：</p><h3 id="3-3-修改本地config"><a href="#3-3-修改本地config" class="headerlink" title="3.3 修改本地config"></a>3.3 修改本地config</h3><p>我们需要修改 <code>_config.yml</code>文件，在URL中填入我们的自定义域名：</p><h2 id="4-绑定域名"><a href="#4-绑定域名" class="headerlink" title="4. 绑定域名"></a>4. 绑定域名</h2><p>完成域名解析和本地配置修改后，我们就可以到GitHub上面绑定我们自己的域名了~</p><p>我们进入仓库，点击settings：</p><p>在pages栏目中，找到custom domain，然后把我们自己的域名填入其中：</p><p>绑定后，会进入DNS检查。</p><p>等待检查通过以后，就可以通过我们自己的域名访问HEXO了~</p><p>成功通过夜梦自己的域名 <code>hexo.yemengstar.top</code>访问！</p><h2 id="5-其他HEXO教程推荐"><a href="#5-其他HEXO教程推荐" class="headerlink" title="5. 其他HEXO教程推荐"></a>5. 其他HEXO教程推荐</h2><p>安装HEXO：</p><ul><li><a href="https://tech.yemengstar.com/hexo-tutorial-deploy-githubpages-beginner/">HEXO系列教程 | 使用GitHub部署静态博客HEXO | 小白向教程</a></li></ul><p>配置 YUN 主题：</p><ul><li><a href="https://tech.yemengstar.com/hexo%e7%b3%bb%e5%88%97%e6%95%99%e7%a8%8b-%e9%85%8d%e7%bd%ae%e4%ba%91%e6%b8%b8%e5%90%9byun%e4%b8%bb%e9%a2%98part1-%e4%bc%98%e9%9b%85%e7%be%8e%e8%a7%82/">HEXO 系列教程 | 配置云游君 Yun 主题 PART1 | 优雅</a> <a href="https://tech.yemengstar.com/hexo-tutorial-theme-yun1-beginner/">美观</a></li><li><a href="https://tech.yemengstar.com/hexo-tutorial-theme-yun2-beginner/">HEXO 系列教程 | 配置云游君 Yun 主题 PART2 | 优雅美观</a></li></ul><p>发布文章：</p><ul><li><a href="https://tech.yemengstar.com/hexo-tutorial-postandimages-beginner/">HEXO 系列教程 | 发布文章 | 解决静态图片路径错误问题 | 小白向教程</a><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg=="><script type="text/javascript">  (function(d, s) {    var j, e = d.getElementsByTagName(s)[0];    if (typeof LivereTower === 'function') { return; }    j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;    e.parentNode.insertBefore(j, e);  })(document, 'script');</script></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> 精品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog介绍</title>
      <link href="/2024/06/01/845792875/"/>
      <url>/2024/06/01/845792875/</url>
      
        <content type="html"><![CDATA[<p><strong>網誌</strong>（blog）是<strong>網路日誌</strong>（weblog）的簡寫，也有人從英文音譯為<strong>部落格</strong>、<strong>博客</strong>、<strong>朴</strong>等，是按照时间顺序以文章的形式在网络上定期发表内容的一种方式，屬於网络共享空间的一種。</p><h2 id="历史"><a href="#历史" class="headerlink" title="历史[|]"></a>历史[|]</h2><p>網誌的英文_blog_起源于_weblog_，意思是网络日誌。1997年由Jorn Barger所提出。在1998年，infosift的编辑<a href="http://www.jjg.net/">Jesse J. Garrett</a>将一些类似的網誌网站收集起来，寄给Cameron Barrett。Cameron随后将名单发布在CamWorld网站上，许多人亦陆续将網誌的URL给Cameron，慢慢的，一个新的网络社区俨然成型。1999年，<a href="http://www.eatonweb.com/">Brigitte Eaton</a>成立一个網誌目录，收集她所知道的網誌站點。1999年，<a href="http://www.peterme.com/">Peter Merholz</a>首次使用缩略词”blog”，成为今天常用的术语。但是，網誌真正开始快速发展的转折点，是在1999年6月，当时<a href="http://www.pitas.com/">Pitas</a>开始提供免费的網誌服务，紧接着8月，Pyra lab推出了blogger.com。blogger.com提供了简单易学的说明，以及能通过FTP直接将網誌发表在个人网站上的功能，这带给使用者很大的方便。目前已经有了很多网志服务供应商（BSP），业内人士对其盈利前景，持谨慎乐观态度。 網誌的原文是Weblog，或縮寫成Blog。Weblog這個字眼最早是由JornBarger在1997年左右提出來的。在這之前，網路世界裡所謂的 Weblog通常指的是一種硬生生地、充滿技術性記載的、無關乎敘事的紀錄。</p><h2 id="定義"><a href="#定義" class="headerlink" title="定義[|]"></a>定義[|]</h2><p>Weblog 指的是以 web 作為呈現媒介的個人 blog ，也有人把它稱做網頁型態的日記，1999 年 Peter Merholz 開始把將Weblog 唸成 We Blog ；因而有了 Blog 這個說法。此時的Blog不僅可以拿來當名詞或 Weblog 的縮寫，更成為一個動詞。</p><p>作名詞用的時候，Weblog或說是Blog有了更嚴謹的定義它指的是一些文章，而這些文章必須要滿足以下條件：</p><p>於是 Blog 從很概略的「網頁型式的個人札記」轉變成具有多樣特性的文章集結。</p><p>作為動詞的時候，根據 Meg Hourihan在what We’re Doing When We Blog 一文裡指出此乃是按照各自的規則來整理資訊的方法。根據這個說法，當某個人在 Blog 的時候，並不只是生產被人們稱之為「網誌 (Blog) 」的一篇文章；實際上，亦是在實踐個人的信念，以所認同且認可的規則，將感官所接受到的種種資訊整理後加以出版，成為其他讀者所能夠閱讀的文本。</p><p>CNN自2003年三月十日起，開始報導一些關於網誌(Blog)的新聞，使得網路新聞有了新生命。</p><h2 id="特色"><a href="#特色" class="headerlink" title="特色[|]"></a>特色[|]</h2><p>網誌是个人或群体以时间顺序所作的一种记录，并且不断更新。網誌之间的交流主要是通过回溯引用（TrackBack）和广播/留言/评论的方式来进行的。網誌的操作管理用语，也借鉴了大量档案管理用语。一个網誌亦可被视为一个档案，或是卷宗。与传统档案不同的是，網誌的作者既是这份档案的创作人，也是其档案管理人。而書寫網誌（Blog）的人，通常稱為「blogger」（即網誌作者），既可以是一個人撰寫，也可以是一群人寫。</p><p>網誌大量采用了RSS _（Really Simple Syndication或者Rich Site Summary或者RDFSite Summary）_技术，所有的RSS文件都必须符合由W3C发布的XML 1.0规范。对读者来说，可以通过RSS订阅一个網誌，确知该網誌作者最近的更新。对網誌作者来说，RSS可以使自己发布的文章易于被计算机程序理解并摘要。</p><p>对知识管理和创造而言，網誌提供了新的形态和途径。对汉语为母语的人而言，網誌写作既接续了汉语笔记文学的优秀传统，更充分鼓励了个人表达。从交往形态考察，網誌空間设定了积极的读者、作者、编者互动转换关系，”<a href="http://www.blogbus.com/blogbus/blog/diary.php?diaryid=224997">言者互重，阅者相惜</a>“。</p><h2 id="優缺點"><a href="#優缺點" class="headerlink" title="優缺點[|]"></a>優缺點[|]</h2><p>一般網路上的討論平台只能提供給所有人共享的環境，想要有個人發表空間，除了自己有能力製作網頁者，一般人不太容易。而有了部落格之後，不管是誰、不論是什麼性質的文字、連結、圖片、視訊，都可以在自己的部落格很自在地建構出來。</p><p>網誌不只是將使用者的意見與想法傳遞在網路上，更可以讓興趣相投的網友交換建議並深入了解彼此。個人化的留言板讓使用者隨時隨地可以得知網友的意見與反應，RSS聯播則提供部落格之間即時的資訊交流。</p><p>網誌最大的特色，就是把整個過程都簡化到讓一般人都能創作自己的網站。準備好一切要發表的內容素材，所有事情就都由程式自動完成製作上傳，不需具備任何網頁設計能力。</p><p>網誌的內容都是個人的心得或創為主，有人發現許多網誌在缺乏與他人良好互動的情況下，會有內容疲乏的問題，往往到最後不知所云，甚至半途而廢。</p><p>網誌上的創作分類方式完全由作者決定，通常規劃不夠細膩，就會導致無法精確導引讀者找到特定資料。</p><h2 id="網誌內容的討論"><a href="#網誌內容的討論" class="headerlink" title="網誌內容的討論[|]"></a>網誌內容的討論[|]</h2><p>網誌的內容沒有限制，只要能上網，會打字，腦袋有一些想法的人，例如放一些相片，都可以經營。網路日誌可以抒發心情、紀錄生活、討論時事政治，甚至發展成為具有影響力的新聞媒體，而且是參與門檻低和深具影響力的行銷媒介。網誌是意見和知識的自由市場，儘管別人可以有不同的看法，卻不會有人（能夠）阻止其他人經營自己的網誌。不过，有時候，生產網誌的內容十分困難，而如果要生產有價值的內容，更是難上加難。好的內容是智慧的結晶，而且還得源源不絕（即不停地更生網誌的內容）。這得靠長期、大量地閱讀、思考及書寫，才不至於只會寫浪費別人時間的東西。</p><p>2005年10月7日，新加坡一个法庭对两名年轻的男性網誌作者判刑，理由是这两人在其网志上发表了种族性言论，并在网民中引发了激烈的争论。</p><h2 id="在網誌上经常用到的技术"><a href="#在網誌上经常用到的技术" class="headerlink" title="在網誌上经常用到的技术[|]"></a>在網誌上经常用到的技术[|]</h2><h2 id="在網誌上经常用到的版权协议"><a href="#在網誌上经常用到的版权协议" class="headerlink" title="在網誌上经常用到的版权协议[|]"></a>在網誌上经常用到的版权协议[|]</h2><ul><li>创作共用</li></ul><h2 id="網誌的应用"><a href="#網誌的应用" class="headerlink" title="網誌的应用[|]"></a>網誌的应用[|]</h2><p>目前網誌最多用于个人出版，也有用于商业公司的内部交流和教育学习领域。另外，许多新的应用也相继出现。例如Moblog（通过移动通信设备写網誌）。</p><p>這幾年，科技產業發展的趨勢，都脫離不了「行動」的概念，帶著聽、帶著看，現在更能帶著寫。 雖然台灣網誌的發展，還停留在個人心情抒寫的層次，尚未出現明顯的商業化運用，但過去一向動作保守的電信業者，中華電信態度最為積極，新推出的「Xuite」服務，不僅搭配寬頻的優惠方案，更以大規模電視廣告來宣傳「行動部落格」（Mobile Blog, Moblog）的相關應用。</p><p>台灣大哥大商務長魏士明就表示，全球3G服務陸續開始，也讓手機傳輸資訊的速度大幅上升，傳輸照片以及動態影像檔案的時間大幅縮短，讓手機部落格被接受的可能性大增，3G服務可以促進行動部落格的應用，市場規模更是無法想像。</p><h2 id="中文译名争议"><a href="#中文译名争议" class="headerlink" title="中文译名争议[|]"></a>中文译名争议[|]</h2><p>Template:Wikinews _blog_的中文意思即<strong>網誌</strong>或<strong>网络日誌</strong>，不过，在中国大陆有人往往也将_blog_本身和_blogger_（即網誌作者）音譯为”博客”；而在台灣，有人則分別音譯成”部落格”及”部落客”。然而，也有很多人反对這些音譯名稱，尤其是”博客”。反对者认为”博客”有太多的精英主义色彩（或其它意涵），并被商业利益所利用，为此他们发起了”<a href="http://www.cnblog.org/imnotboke/index.html">我不是博客</a>“的运动。因此，”博客”等音譯名稱并非大家都接受的中文译名。另外，在香港亦有人簡單直接的稱之為「」。</p><h2 id="參看"><a href="#參看" class="headerlink" title="參看[|]"></a>參看[|]</h2><ul><li>一些網誌工具<ul><li>Blogger：網誌書寫和發佈服務網站。</li><li>Bloglines：提供免費的在線網誌管理與閱讀服務。</li><li>Bo-blog：同時支持繁簡體中文的網誌系統，基於PHP+MYSQL空間。演示:<a href="http://beichen.name/">[1]</a>。</li><li>Drivel: LiveJournal客戶端的GNU/Linux版本，使用GNOME/Gtk+2.0</li><li>exBlog：網誌寫作軟件。</li><li>LifeType：網誌寫作軟件(PHP+MySQL)，原名<strong>pLog</strong>。</li><li>LiveJournal: 在線專欄是歷史悠久的網誌網站，以開源/無廣告為特色，在各種平台中都有好用的客戶端。</li><li>MovableType：網誌寫作軟件。</li><li>MSN Spaces：為MSN旗下的網誌書寫網站。</li><li>Performancing:Mozilla Firefox的插件，方便用戶在本地寫作。</li><li>PJBlog：同時支持繁簡體中文的網誌系統，功能相當完整多元。</li><li>Semagic: LiveJournal客戶端的Windows版本。</li><li>Tatter Tools：網誌寫作軟件(PHP+MySQL)。</li><li>Technorati：著名的网志搜索网站。</li><li><a href="/zh/wiki/WordPress" title="WordPress">WordPress</a>：網誌寫作軟件。</li><li>Xanga：網誌書寫網站。</li><li>Yblog.org：一個非營利、綜合性的中文網誌。</li><li>Z-Blog：基於ASP平臺的開放、高效、健壯、實用、美觀、大方的Blog程式，同時支援簡體和繁體中文。官方网站:<a href="http://www.rainbowsoft.org/">[2]</a>。</li><li>無名小站：繁體中文中最受歡迎的網誌。</li></ul></li></ul><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献[|]"></a>参考文献[|]</h2><h2 id="外部链接"><a href="#外部链接" class="headerlink" title="外部链接[|]"></a>外部链接[|]</h2><p>Template:Wiktionary</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[转载] [联机教程] [联机][2021.1.1][CPS].schematic文件格式详解</title>
      <link href="/2024/05/31/%5B%E8%BD%AC%E8%BD%BD%5D%20%5B%E8%81%94%E6%9C%BA%E6%95%99%E7%A8%8B%5D%20%5B%E8%81%94%E6%9C%BA%5D%5B2021.1.1%5D%5BCPS%5D.schematic%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%AF%A6%E8%A7%A3/"/>
      <url>/2024/05/31/%5B%E8%BD%AC%E8%BD%BD%5D%20%5B%E8%81%94%E6%9C%BA%E6%95%99%E7%A8%8B%5D%20%5B%E8%81%94%E6%9C%BA%5D%5B2021.1.1%5D%5BCPS%5D.schematic%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>联机教程</p><span id="more"></span><p>前言<br>大多数服主应该对于Schematic文件格式又熟悉又陌生，通常在导入地图时，一般使用替换地图文件的方式，而使用Schematic格式文件的方法使用较少，因此可能对Schematic文件格式较为陌生，加之近期有较多人询问我Schematic格式文件如何导入等问题，因此便写出此教程供服主们学习，教程将会用通俗易懂的语言对Schematic文件格式进行详细的讲解</p><p>字数统计<br>字数1707，字符数（不计空格）3137，字符数（计空格）3197，非中文单词208，中文字符1499（来自WPS字数统计）</p><p>什么是schematic文件格式？<br>Schematic文件格式为一种由玩家社区所创建的用于存储Minecraft世界信息，进而可以通过第三方应用程序（如MCEdit、Minecraft Note Block Studio、红石模拟器、WorldEdit以及Schematica等）进行编辑。地形以NBT格式储存并松散地基于Indev世界格式。方块和数据的目录以YZX的排序存储，也就是说X坐标的变化最频繁。这与Classic，Indev以及Anvil文件格式中的方块排序相似。这种格式不能将应该覆盖已有方块的空气方块和不应覆盖已有方块的空气方块区分开。（摘自Minecraft Wiki）<br>总而言之，schematic文件格式是用来储存Minecraft世界信息的工具，可以导出保存，也可以导入使用，也可以通过第三方工具对此格式文件内容进行编辑</p><p>NBT格式详解<br>Schematic:<br>Width: 沿X轴方向的大小<br>Height: 沿Y轴方向的大小<br>Length: 沿Z轴方向的大小<br>Materials: 版本世界类型<br>Blocks: 地图中所用到的物品ID<br>AddBlocks: 可用于编辑的空余地图区域<br>Add: 已启用<br>Data: 在地图中用到的其它方块<br>Entities: 在地图中的每个实体<br>TileEntities: 在地图中的每个实体<br>Icon: 用于地图图标的物品<br>SchematicaMapping: 此地图中所保存版本的ID<br>ExtendedMetadata: Schematica为扩展提供的任意附加数据<br>WEOriginX: 沿X的中心坐标（WorldEdit）<br>WEOriginY: 沿Y的中心坐标（WorldEdit）<br>WEOriginZ: 沿Z的中心坐标（WorldEdit）<br>WEOffsetX: 沿X的偏移坐标（WorldEdit）<br>WEOffsetY: 沿Y的偏移坐标（WorldEdit）<br>WEOffsetZ: 沿Z的偏移坐标（WorldEdit）<br>itemStackVersion: 仅用于MCEdit2，游戏版本<br>BlockIDs: 地图中的方块ID（MCEdit2）<br>ItemIDs: 地图中的物品ID（MCEdit2）<br>TileTicks: 地图中方块更新的列表（MCEdit-Unified）<br>i：方块的ID<br>t：处理时所需的时刻（tick）<br>p：同一时刻处理的优先值<br>x：地图中X坐标<br>y：地图中Y坐标<br>z：地图中Z坐标<br>Biomes: 地图中所有生物群系（MCEdit-Unified）</p><p>什么是schematic数据库？<br>Schematic数据库是一种免费的用于上传、下载、浏览、收藏schematic格式文件的网站<br>网站地址：<br>minecraft-schematics.com<br>minecraft-schematics.net</p><p>如何创建schematics文件夹？<br>单人游戏1.下载安装worldeditMOD<br>1.打开Minecraft.minecraft\config\worldedit目录<br>2.在worldedit目录下创建一个名为schematics的文件夹</p><p>多人联机<br>1.下载安装worldedit插件<br>2.打开Minecraft Sever\plugins\WorldEdit目录<br>3.在WorldEdit目录下创建一个名为schematics的文件夹</p><p>如何导入schematic格式文件?<br>单人游戏<br>1.下载安装worldedit游戏MOD<br>2.将你要使用的.schematic格式文件放到Minecraft.minecraft\config\worldedit\schematics目录下3.进入游戏，输入指令//schem load 文件名（如：//schem load skyworld），将此文件中的建筑会导入到worldedit的剪贴板中<br>提示：若出现skyblock.schematic loaded. Paste it with //paste则证明剪贴成功<br>4.输入指令//paste，将此文件的建筑添加到你所在的位置</p><p>多人联机<br>1.下载安装WorldEdit插件<br>2.将你要使用的.schematic格式文件放到Minecraft Sever\plugins\WorldEdit目录下<br>3.进入游戏，输入指令//schem load 文件名（如：//schem load skyworld），将此文件中的建筑会导入到worldedit的剪贴板中<br>提示：若出现skyblock.schematic loaded. Paste it with //paste则证明剪贴成功<br>4.输入指令//paste，将此文件的建筑添加到你所在的位置</p><p>如何导出schematic格式文件？<br>单人游戏<br>1.下载安装worldedit游戏MOD<br>2.进入游戏，用木斧选择你要导出的地图区域<br>3.输入//copy对选择区域进行复制<br>4.输入//schem save 文件名 将选择区域以 文件名.schematic 导出<br>5.导出后文件将会生存在Minecraft.minecraft\config\worldedit\schematics目录下</p><p>多人联机<br>1.下载安装WorldEdit插件<br>2.进入游戏，用木斧选择你要导出的地图区域<br>3.输入//copy对选择区域进行复制<br>4.输入//schem save 文件名 将选择区域以 文件名.schematic 导出<br>5.导出后文件将会生存在Minecraft Server.minecraft\config\worldedit\schematics目录下</p><p>如何导出/导入规模较大的建筑？<br>对于规模较为大的建筑来说，使用worldedit导入或导出，会导致后台报错、服务器卡顿甚至崩溃<br>部分服主会通过使用MCedit导出/导入大地图来解决，但是大部分服主对于MCedit的操作较为生疏，此部分将会提供其他较为不错的方法来解决此问题<br>在编写教程的时候，为了让教程内容丰富，本人对相关知识进行了大量的搜索和学习。在此期间，发现了一款名为FastAsyncWorldEdit的插件，此插件为WorldEdit的优化插件，插件主要用于减少WorldEdit插件在操作过程中的卡顿，安装此插件后可以导出/导入较大规模的建筑，且几乎无卡顿，使用方便操作简单<br>提示：在1.12.2之前此插件需要WorldEdit插件作为前置，而1.12.2版本后FastAsyncWorldEdit便成为一个独立的插件，无需WorldEdit插件作为前置<br>FastAsyncWorldEdit插件的使用方法和WorldEdit插件的使用方法一样，格式为//指令<br>站内搬运：<a href="https://www.mcbbs.net/thread-781901-1-1.html">https://www.mcbbs.net/thread-781901-1-1.html</a><br>原贴：<a href="https://github.com/boy0001/FastAsyncWorldedit/releases">https://github.com/boy0001/FastAsyncWorldedit/releases</a></p><p>注意事项<br>1.按照上述过程使用时必须安装worldedit插件或MOD<br>2.使用worldedit粘贴建筑时，需要一段的等待时间，若出现报错或者内存溢出等非正常情况，可能是文件过大导致的，此情况请仔细阅读如何导出规模较大的建筑？部分<br>3.在WorldEdit 7.0.0（Minecraft1.13之后的版本），无法再使用.schematic的格式导出地图文件，只允许使用.schem的格式导出，但仍可以使用旧版本的.schematic文件导入地图</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> MC </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[转载] [联机教程] [Wiki][PCD]MythicMobs 帮助手册翻译 又更新了</title>
      <link href="/2024/05/31/%5B%E8%BD%AC%E8%BD%BD%5D%20%5B%E8%81%94%E6%9C%BA%E6%95%99%E7%A8%8B%5D%20%5BWiki%5D%5BPCD%5DMythicMobs%20%E5%B8%AE%E5%8A%A9%E6%89%8B%E5%86%8C%E7%BF%BB%E8%AF%91%20%E5%8F%88%E6%9B%B4%E6%96%B0%E4%BA%86/"/>
      <url>/2024/05/31/%5B%E8%BD%AC%E8%BD%BD%5D%20%5B%E8%81%94%E6%9C%BA%E6%95%99%E7%A8%8B%5D%20%5BWiki%5D%5BPCD%5DMythicMobs%20%E5%B8%AE%E5%8A%A9%E6%89%8B%E5%86%8C%E7%BF%BB%E8%AF%91%20%E5%8F%88%E6%9B%B4%E6%96%B0%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>联机教程</p><span id="more"></span><p>教程类型:插件<br>教程来源:转载<br>原贴地址:mcbbs - 754503921<br>教程目标:MythicMobs<br>MythicMobs Manual<br>索引 &amp; 原文<br>源地址： <a href="http://www.mythicmobs.net/manual/doku.php">http://www.mythicmobs.net/manual/doku.php</a></p><p>醒目！嫌鼠标翻着很累的，可以去这里看</p><p><a href="https://pluginscdtribe.github.io/wiki/mythicmobs/">https://pluginscdtribe.github.io/wiki/mythicmobs/</a></p><ol><li><p>索引</p></li><li><p>概览<br>  ├ 什么是 MythicMobs<br>  ├ 变更日志<br>  ├ CONFIG.YML<br>  ├ 命令<br>  ├ 权限<br>  ├ 常见问题<br>  ├ 例子<br>  └ Artifacts 附加插件</p></li><li><p>生物<br>  ├ 概览<br>  ├ 生物种类列表<br>  ├ 生物设置<br>  ├ 生物等级<br>  ├ 生物派系（自定义AI）<br>  ├ 技能力量等级<br>  ├ 自定义 AI<br>  ├ 自定义击杀信息<br>  ├ 模块：威胁表<br>  ├ 模块：免疫表<br>  ├ 附加：伪装<br>  ├ 附加：任务<br>  └ 附加：Miniature Pets</p></li><li><p>技能<br>  ├ 概览<br>  ├ 机制<br>  ├ 特效<br>  ├ 目标<br>  ├ 触发<br>  ├ 条件<br>  └ 变量</p></li><li><p>物品<br>  ├ 概览<br>  ├ 物品属性<br>  ├ 物品设置<br>  ├ 常用物品 ID<br>  ├ 附魔<br>  ├ 药水<br>  └ 旗帜图案</p></li><li><p>掉落<br>  └ 概览</p></li><li><p>刷怪点<br>  ├ 刷怪点<br>  └ 随机刷怪点</p></li><li><p>其他<br>  ├ 伤害修正<br>  ├ 装备<br>  ├ Boss 血条<br>  └ 颜色</p></li><li><p>教程 (由于篇幅限制,在2楼提供)<br>  ├ 第一步<br>  ├ 更改原版生物<br>  ├ 创建随机刷怪点<br>  ├ 自定义生物 AI<br>  └ 使用命令技能</p></li><li><p>Artifacts 附加 (由于篇幅限制,在2楼提供)<br>  ├ 技能<br>  ├ 机制<br>  ├ 条件<br>  ├ 选项<br>  ├ 弹药<br>  ├ 耐久<br>  ├ Lore 属性<br>  └ 示例<br>MythicMobs Manual<br>教程 &amp; 资源下载</p></li><li><p>资源下载<br>本 Wiki 字数统计为 39134 字<br>Wiki 的文档版在这里下载</p></li><li><p>第一步<br>使用 MythicMobs 创建自己的生物甚至是Boss是很简单的，这些是你需要了解的：<br>· 如何配置 YAML 文件<br>· 你的文件到哪里去了<br>· MythicMobs 拥有的设置选项<br>YAML-文件<br>YAML 格式的文件常用于保存配置。这些文件易于读写，并且加载的很快。绝大多数的 Minecraft 插件都使用 YAML 文件来作为他们的配置文件，MythicMobs 也不例外。<br>如果你想要深入了解YAML是什么，那么请前往 YAML Wiki 条目（英文）（中文，需过墙）<br>然而更多关于 YAML 的知识对于配置 MythicMobs 的生物来说，是不需要的。<br>但是使用 YAML 时有一点需要注意：不要使用 Tab 键<br>编辑 YAML 文件的最好的软件是 Notepad++<br>你的文件到哪里去了<br>在加载 MythicMobs 到你的服务器之后，它的文件夹将会像大部分 Minecraft 插件一样，在 /plugins 文件夹内，你甚至会找到很多的子文件夹。<br>file:///C:/Users/ADMINI~1/AppData/Local/Temp/ksohtml/wps9C1B.tmp.png<br>将配置文件放入正确的文件夹始终是非常重要的。<br>错误的放置配置文件将会被插件读取为其他东西，比如你讲生物配置放进了技能文件夹，插件就将试图将它读取为生物的技能，当然这会报错并输出到你的服务器控制台。<br>记住：将文件放进正确的文件夹，否则你的创造物将不会运行。<br>ExampleXXX.yml这些示例文件无法被删除，它们将会在下次重启时重新生成，如果你不想加载里面的配置，只需要删除里面的内容。<br>MythicMobs 设置<br>确实，MythicMobs 有很多的配置可供修改，但是你不应该就这样去做了，你修改的东西越多，就越容易犯错误，也就会最终变得困惑不解、不知所措，被水淹没。说到这里，我建议你做几件事，这将让你更加得心应手：<br>创建一个本地服务器<br>在你自己的电脑上创建一个 Spigot 服务器，这是创建和测试最便捷的方法了。只需要安装服务器，创建一个超平坦世界。接着载入 MythicMobs 和其他你想测试的插件，这样做有以下优势：<br>· 你可以按下 Tab 切换 Minecraft 和 Notepad++<br>· 安全的测试环境<br>· 崩溃不打扰其他人<br>· 速度快捷<br>如果你的电脑足够久远，并且你担心性能什么的，不用担心，Spigot 足够轻量，并且如果你的电脑可以胜任原版的单人游戏，那么我想你的电脑也可以开着 Spigot 玩服务器。（相信我，我用着一颗上古双核处理器，但是表现令人尖叫）<br>选择正确的版本<br>突然有了问题？请确保你使用了对应你版本的 MythicMobs，兼容列表也可以在下载页面找到。</p></li><li><p>更改原版生物<br>MythicMobs 不止能创建自定义生物，它也可以改变原版 Minecraft 生成的生物。实现这个太简单了，你需要做的只是将想要改变的生物写入自动生成的 VanillaMobs.yml 文件，位于/MythicMobs/Mobs 文件夹。接着你就可以做你想做的了。<br>一般来说，覆盖原版生物可以使用整个 MythicMobs 的技能和选项。如果你在某个地方跌倒了，请确认你使用了正确的格式并爬起来，如果爬不起来，那么请到我们的 Bug提交论坛 寻求帮助！<br>完全移除一个原版生物（知道你讨厌苦力怕）<br>让我们轻松地开始，你可能在寻找这个：如何阻止一个特定的生物生成。<br>我们猜你狠苦力怕入骨，而且你还想让他们见鬼去吧。第一件事我们要做的是找到苦力怕的正确种类代号，我们可以在这个页面（见生物|生物种类）找到正确的种类代号为… “CREEPER”。<br>VanillaMobs.yml<br>CREEPER:<br>由于一些显而易见的原因，确定一个生物种类不是必要的（难道不是吗2333）。剩下需要做的是添加一个移除机制到这个生物，这样当它出生时就会移除。<br>CREEPER:<br>  Skills:</p></li></ol><ul><li>remove @self ~onSpawn</li></ul><p>就是这样！任何生成的苦力怕会马上删除！<br>如果你想阻止更多生物生成，那么你就无限重复上面的过程，就像这样：<br>CREEPER:<br>  Skills:</p><ul><li>remove @self ~onSpawn<br>ENDERMAN:<br>  Skills:</li><li>remove @self ~onSpawn<br>ZOMBIE:<br>  Skills:</li><li>remove @self ~onSpawn<br>…</li></ul><p>给生物添加5毛特效（可爱的僵尸）<br>僵尸没那么吓人是吧？或者你想让你的服务器的年龄限制下降一些？让我们给你的休闲小怪加上一些爱。第一步，找到生物种类，接着还是像这样：<br>VanillaMobs.yml:<br>ZOMBIE:<br>接着，我们要使用粒子机制（见技能|机制|粒子），选择我们想要的爱心粒子（“heart” &lt;3），从粒子类型选择。<br>ZOMBIE:<br>  Skills:</p><ul><li>effect:particles{particle=heart;amount=1;hs=0.1;vs=0.1;y=1.5} @self ~onTimer:20 0.25</li></ul><p>然后又一次，我们成功了。显而易见，我们有了一个完全自定义的生物。这个例子将会生成一颗红心粒子，平均每 4 秒一颗。<br>更改生物选项（爬行的末影人）<br>你可以在原版生物上更改生物选项，让我们把服务器里的末影人变得更加可怕，同时也会丧失它们的基础能力。<br>ENDERMAN:<br>  Options:<br>    PreventTeleporting: true<br>  Skills:</p><ul><li>potion{type=INVISIBILITY;duration=630720000;level=0} @self ~onSpawn</li></ul><p>这个示例将会阻止你的服务器的末影人使用传送能力，注意这些设置只会对 Minecraft 生成的生物有效。你创建的其他自定义的生物（比如末影人）不会受到原版覆盖带来的影响。<br>并且，末影人在生成时会对自己使用药水机制，这样让他们隐形 63072000 ticks。这看起来可能像个随机数，然而这相当于游戏内的 1 年，为什么不呢？<br>但是末影人并不会永久隐形。你仍然会看到他们的眼睛，就像隐形的蜘蛛一样，末影人也是。<br>更改属性<br>这个该不用多说什么了吧，你可以更改原版覆盖生物的属性。就像这样：<br>ZOMBIE:<br>  Health: 200<br>  Damage: 20<br>  Armor: 5<br>  Options:<br>    MovementSpeed: 0.25<br>    FollowRange: 137<br>    Silent: true<br>  Skills:</p><ul><li>jump{v=0.5} ~onTimer:140</li></ul><ol start="4"><li>创建随机刷怪点<br>示例 1：大多数普通生物，一个稀有的 Boss<br>场景<br>作为一个腐竹，你的玩家有一个采矿世界，用于挖掘各种矿物到他们的地皮。你想通过 MythicMobs 偶尔产生一些稀有的强大的生物而不是普通的生物，来让玩家的生存更加刺激。这个 Boss 可能掉落一些有趣的装备，或者掉落罕见的金块和钻石块。<br>要求</li><li>我们希望在地面上生成普通怪物，在地下生成 Boss</li><li>所有的其他的生物是自然的生物<br>世界名： MiningWorld<br>外界生成<br>· Skeletal Fire Wizard (1% chance)<br>内部生成<br>· Skeletal Necromancer (1% chance)<br>步骤</li><li>我们使用 RandomSpawners 所以第一件事是确认当前世界开启了生物生成。<br>· 如果你已经有了自然生成的野怪，那么你已经开启了。<br>· 如果没有，请做这些事：打开 server.properties 文件，检查 Spawn-Monsters 为 true。重启你的服务器，下一步是使用 /gamerule doMobSpawning true 来保证规则执行。</li><li>接下来我们需要设置两个强大的Boss生物，使用MythicMobs手册的其他配置Boss。对于这个例子，很好地使用我们的 Skeletal Fire Wizard 生物为地面的 Boss， Skeletal Necromancer 为地下的Boss。这两个生物都可以在例子中找到。</li><li>创建 RandomMobSpawner 设置<br>SkeletalFireWizard:<br>  Mobname:SkeletalWizard_Fire<br>  Worlds: MiningWorld<br>  Chance: 0.01<br>  Priority: 1<br>  SpawnMethod: replace<br>  Conditions:<ul><li>outside true</li></ul></li></ol><p>分析</p><ol><li>Minecraft 会决定在 MiningWorld 世界生成生物</li><li>MythicMob 的 RandomSpawner 开始运行，决定生成的生物</li><li>如果生成器决定生成 SkeletalFireWizard，随机刷怪点会掷骰决定生成。</li><li>如果生成器决定生成 SkeletalNecromancer，随机刷怪点会掷骰决定生成。</li><li>如果都没有，那么生成普通小怪<br>示例 2：密集的冒险区（仅 MythicMobs）<br>场景<br>作为腐竹，你设置了一片用于冒险的区域，让玩家杀死 MythicMobs 并掉落稀有物品。你只想让 MythicMobs 生成，自然生物不能生成。这片区域附近包括了一片森林群系和下雪的群系。<br>要求</li><li>只生成 MythicMobs</li><li>应该有几率生成 Boss</li><li>如果没有生成 Boss，每个区域都应该随机生成一个生物<br>冒险区域<br>· 世界名： world<br>· 区域： AdvRegion<br>冒险区域生物<br>· Abominable Snowman (1% 几率)<br>森林群系生物<br>· Large Spider (25% 几率)<br>· Minor Earth Elemental (25% 几率)<br>· Greater Earth Elemental (25% 几率)<br>· Black Wolf (25% 几率，默认生成)<br>雪地生物<br>· Frost Spider (25% 几率)<br>· Minor Frost Elemental (25% 几率)<br>· Greater Frost Elemental (25% 几率)<br>· White Wolf (25% 几率，默认生成)<br>步骤</li><li>我们使用 RandomSpawners 所以第一件事是确认当前世界开启了生物生成。<br>· 如果你已经有了自然生成的野怪，那么你已经开启了。<br>· 如果没有，请做这些事：打开 server.properties 文件，检查 Spawn-Monsters 为 true。重启你的服务器，下一步是使用 /gamerule doMobSpawning true 来保证规则执行。</li><li>下一步我们使用 WorldEdit 创建区域。选择一片区域，使用 /region define AdvRegion 定义一片区域。</li><li>设置 8 个普通生物和一个 Boss，仿照下方的教程</li><li>创建 RandomMobSpawner 配置：<br>整个冒险区域<br>AbominableSnowman:<br>  Mobname: AbominableSnowman<br>  Worlds: world<br>  Chance: 0.01<br>  Priority: 100<br>  SpawnMethod: replace<br>  Conditions:<ul><li>inregion AdvRegion</li></ul></li></ol><p>仅森林区域<br>LargeSpider:<br>  Mobname: LargeSpider<br>  Worlds: world<br>  Chance: 0.25<br>  Priority: 2<br>  SpawnMethod: replace<br>  Conditions:<br>    - inregion AdvRegion<br>    - biome forest<br>MinorEarthElemental:<br>  Mobname: MinorEarthElemental<br>  Worlds: world<br>  Chance: 0.25<br>  Priority: 2<br>  SpawnMethod: replace<br>  Conditions:<br>    - inregion AdvRegion<br>    - biome forest<br>GreaterEarthElemental:<br>  Mobname: GreaterEarthElemental<br>  Worlds: world<br>  Chance: 0.25<br>  Priority: 2<br>  SpawnMethod: replace<br>  Conditions:<br>    - inregion AdvRegion<br>    - biome forest<br>BlackWolf:<br>  Mobname: BlackWolf<br>  Worlds: world<br>  Chance: 1<br>  Priority: 1<br>  SpawnMethod: replace<br>  Conditions:<br>    - inregion AdvRegion<br>    - biome forest</p><p>仅下雪区域<br>FrostSpider:<br>  Mobname: FrostSpider<br>  Worlds: world<br>  Chance: 0.25<br>  Priority: 2<br>  SpawnMethod: replace<br>  Conditions:<br>    - inregion AdvRegion<br>    - biome snowy<br>MinorFrostElemental:<br>  Mobname: MinorFrostElemental<br>  Worlds: world<br>  Chance: 0.25<br>  Priority: 2<br>  SpawnMethod: replace<br>  Conditions:<br>    - inregion AdvRegion<br>    - biome snowy<br>GreaterFrostElemental:<br>  Mobname: GreaterFrostElemental<br>  Worlds: world<br>  Chance: 0.25<br>  Priority: 2<br>  SpawnMethod: replace<br>  Conditions:<br>    - inregion AdvRegion<br>    - biome snowy<br>WhiteWolf:<br>  Mobname: WhiteWolf<br>  Worlds: world<br>  Chance: 1<br>  Priority: 1<br>  SpawnMethod: replace<br>  Conditions:<br>    - inregion AdvRegion<br>    - biome snowy</p><p>分析<br>这个设置更加复杂了，让我们看看发生了什么：</p><ol><li>Minecraft 会决定在 AdvRegion 区域生成生物</li><li>MythicMob 的 RandomSpawner 开始工作，决定生成什么生物</li><li>所有的 RandomMobSpawners 会掷骰决定生成哪个生物</li><li>如果 AbominableSnowman (优先度 100) 轮到了，将会立刻生成而跳过下一个生物，因为它拥有最高的优先度</li><li>如果生物在森林中生成，那么只会考虑森林的突变种群</li><li>对于森林群系，将会掷优先度为 2 的生物（Large Spider 和 elementals）</li><li>任意掷到的生物都会生成</li><li>如果没有生物被掷到，那么就会生成 Black Wolf，因为它有最低的优先度，并且几率 100%<br>9 如果生物在雪地中生成，那么只会考虑雪地的突变种群</li><li>对于雪地群系，将会掷优先度为 2 的生物（Frost Spider 和 elementals）</li><li>任意掷到的生物都会生成</li><li>如果没有生物被掷到，那么就会生成 Whitek Wolf，因为它有最低的优先度，并且几率 100%</li><li>请注意，这种设置将会保证 MythicMobs 一定生成。许多人认为将几率设置为 100% 会让自然生物不会生成、这不是插件工作原理导致的，这是因为总是有很小的几率，所有生物都没有掷到，Minecraft 就会生成原版生物，这就是为什么要添加一个优先度最低而且几率为 100% 的生物在最后。</li><li>自定义生物 AI<br>MythicMobs 提供了自行编写生物AI的能力，这可以为生物添加一大堆高度自定义的设定，如生物怎样近战、攻击哪些目标、和其他的动作。<br>在以下的一节里，我将会提供一些例子来展示如何配置一些服务器常用的场景。<br>AI 目标 &amp; 派系（AI Goals &amp; AI Targets &amp; Factions）<br>· 自定义 AI 通常需要两个配置来工作，即 AI Goals，这告诉生物它需要怎样动作，和 AI Targets，这告诉生物怎样锁定目标。<br>· 派系用于将生物分组，经常用于更高级的配置中。<br>· 作为默认，每个 Minecraft 生物都有一些全局 AI 。举个例子，骷髅的 AI 告诉了骷髅应该锁定玩家为目标，并且应该使用弓和箭来攻击。为了使用 MythicMobs 重写骷髅的AI，我们要先清除它的 AI Goals，然后给他们添加新的目标。<br>让我们看看底下这个例子：<br>DecayingSkeleton:<br>  Mobtype: skeleton<br>  Display: ‘&amp;aa decaying skeleton’<br>  Health: 15<br>  Damage: 1<br>  Faction: Undead<br>  AIGoalSelectors:</li></ol><ul><li>0 clear</li><li>1 arrowattack<br>  AITargetSelectors:</li><li>0 clear</li><li>1 players<br>  Options:<br>FollowRange: 10<br>MovementSpeed: 0.2<br>PreventOtherDrops: true</li></ul><p>· 这个示例展示了 骷髅 AI 如何攻击目标。（剪掉了其他没啥用的东西，比如随机的走动）<br>· AIGoalSelectors 项告诉了骷髅使用弓与箭攻击目标。<br>· AITargetSelectors 项告诉了骷髅应该锁定玩家。<br>· 如你所见，一般第一件事是 clear，这样你就有一个空的AI来编辑了，这是很重要的，如果不这样做，你的AI可能不会像预期那样工作<br>· 现在我想让骷髅近战攻击其他的派系的生物，让我们看看这是怎么做到的：<br>DecayingSkeleton:<br>  Mobtype: skeleton<br>  Display: ‘&amp;aa decaying skeleton’<br>  Health: 15<br>  Damage: 1<br>  Faction: Undead<br>  AIGoalSelectors:</p><ul><li>0 clear</li><li>1 meleeattack<br>  AITargetSelectors:</li><li>0 clear</li><li>1 hurtbytarget</li><li>2 otherfactionmonsters<br>  Equipment:</li><li>COS_WoodSword:0<br>  Options:<br>FollowRange: 10<br>MovementSpeed: 0.2<br>PreventOtherDrops: true</li></ul><p>· 骷髅 AI 编写为攻击其他派系生物和攻击它的生物，作为附加，它会使用近战攻击而不是远程攻击。<br>· AIGoalSelectors 项现在将目标设置为近战，需要注意的是你只有给骷髅装备剑才能使用近战攻击，装备弓的时候是不行的。但是这对僵尸是不需要的。<br>· AITargetSelectors 项现在将玩家移除出了它的目标范围，所以现在骷髅不会主动攻击玩家。现在骷髅将会主动攻击其他派系的生物，也就是不在它自己的派系里的生物（比如不在Undead）。这里也有一个 hurtbytarget 的优先度为1，也就是说如果有生物主动攻击了它（比如玩家），骷髅就会反击。这个属性的优先级一般都很高，这样它们就不会被随意利用。如果没有这个，骷髅就会很容易的被击杀，而不会反击，这显然不是想要的结果。<br>· 查看完整的 Goals 和 Targets，请查看自定义 AI[见下<br>· 在接下来的两个小节里，我会展示经常使用的场景以及它们的 AI 配置，这也是你可能想要在服务器里实现的功能。<br>示例 1：守卫攻击附近怪物<br>· 在这个场景里，我们想在城市的入口生成一些守卫，用以清除赶走附近乱晃的太近的怪物，你可以使用一个伪装成村民的铁傀儡，但是它们的 AI 更难控制，而且它们的击退特效对怪物也不是很公平，所以我们要使用 MythicMobs 的自定义 AI 来完成这件事。<br>· 首先，我们需要一只生物来守护我们的城镇。让我们创建一个伪装成村民的骷髅，并给它装备剑。<br>SummonedGuard1:<br>  Mobtype: skeleton<br>  Display: ‘&amp;Ea town guard’<br>  Health: 500<br>  Damage: 5<br>  Equipment:</p><ul><li>COS_StoneSword:0<br>  Options:<br>Disguise: villager<br>Despawn: true<br>FollowRange: 5<br>AlwaysShowName: false<br>MovementSpeed: 0.35<br>PreventOtherDrops: true<br>KnockbackResistance: 1<br>PreventMobKillDrops: true</li></ul><p>· 如果我们将这个生物放入刷怪点，它将攻击所有的玩家，所以我们需要调整一下，让它更加友善。<br>SummonedGuard1:<br>  Mobtype: skeleton<br>  Display: ‘&amp;Ea town guard’<br>  Health: 500<br>  Damage: 5<br>  Equipment:</p><ul><li>COS_StoneSword:0<br>  Faction: Guard<br>  AIGoalSelectors:</li><li>0 clear</li><li>1 opendoors</li><li>2 meleeattack<br>  AITargetSelectors:</li><li>0 clear</li><li>1 hurtbytarget</li><li>2 otherfactionmonsters<br>  Options:<br>Disguise: villager<br>Despawn: true<br>FollowRange: 5<br>AlwaysShowName: false<br>MovementSpeed: 0.35<br>PreventOtherDrops: true<br>KnockbackResistance: 1<br>PreventMobKillDrops: true</li></ul><p>· 现在这个生物会攻击其他生物，也会攻击攻击它的生物（比如一些无良玩家），在攻击的时候也会主动开门。<br>· 这解决了一半的问题。下一步，我们需要保证城墙外游荡的生物会主动攻击我们的守卫。<br>· 在下面我们设置了一个 Decaying Skeleton，并且也对他们进行设置。<br>DecayingSkeleton:<br>  Mobtype: skeleton<br>  Display: ‘&amp;aa decaying skeleton’<br>  Health: 15<br>  Damage: 1<br>  Faction: Undead<br>  AIGoalSelectors:</p><ul><li>0 clear</li><li>1 meleeattack<br>  AITargetSelectors:</li><li>0 clear</li><li>1 hurtbytarget</li><li>2 players<br>  Equipment:</li><li>COS_RawHead:4</li><li>COS_WoodSword:0<br>  Options:<br>Despawn: true<br>FollowRange: 10<br>AlwaysShowName: false<br>MovementSpeed: 0.2<br>PreventOtherDrops: true</li></ul><p>· 我们的 Decaying Skeleton 现在在 Undead 派系（与 Guard 派系不同），这样他就会被守卫主动攻击。并且添加 hurtbytarget 后，他们会反击来自守卫的攻击（然后死掉）。<br>· 其他在城镇附近生成的怪物，我们也会添加相同的 AI ，这样这些生物就有了与守卫不同的派系。<br>· 现在在我们生成我们的刷怪点后，它会守卫村庄，忽略玩家（只要他们不去主动招惹）。<br>· 其他更多的设置，比如很短的攻击距离和很短的跟随距离，会保证他们不会乱搞，而是杀死那些可以获得经验和掉落的生物。我们也添加了 PreventMobKillDrops，来防止无良玩家刷东西。<br>示例 2：哥布林和半兽人互相攻击<br>· 在真实世界里，我们有两个派系：哥布林和半兽人都不是很喜欢对方。我们创建了一个战场，但是它们都是用默认 AI，没有做太多的战斗。<br>· 我们可以使用 MythicMobs 的自定义 AI 来实现这个功能，这样它们就会主动互相攻击，并且也会攻击晃进战场的玩家。<br>· 让我们创建一个半兽人生物和一个哥布林生物。<br>OrcCenturion:<br>  Mobtype: villagezombie<br>  Display: ‘&amp;aan orc centurion’<br>  Health: 50<br>  Damage: 4<br>  Faction: Orcs<br>  AIGoalSelectors:</p><ul><li>0 clear</li><li>1 opendoors</li><li>2 meleeattack<br>  AITargetSelectors:</li><li>0 clear</li><li>1 hurtbytarget</li><li>2 specificfactionmonsters Goblin</li><li>3 players<br>  Equipment:</li><li>C_DeathfistSkullcap:4</li><li>C_DeathfistTunic:3</li><li>C_DeathfistLeggings:2</li><li>C_DeathfistBoots:1</li><li>COS_WoodSword:0<br>  Options:<br>Despawn: true<br>FollowRange: 10<br>AlwaysShowName: false<br>MovementSpeed: 0.25<br>PreventOtherDrops: true<br>PreventItemPickup: true<br>KnockbackResistance: 0.25<br>PreventMobKillDrops: true</li></ul><p>GoblinBattlemaster:<br>  Mobtype: zombie<br>  Display: ‘&amp;aa goblin battlemaster’<br>  Health: 80<br>  Damage: 4<br>  Faction: Goblin<br>  AIGoalSelectors:</p><ul><li>0 clear</li><li>1 opendoors</li><li>2 meleeattack<br>  AITargetSelectors:</li><li>0 clear</li><li>1 hurtbytarget</li><li>2 specificfactionmonsters Orcs</li><li>3 players<br>  Equipment:</li><li>COS_BronzeHead:4</li><li>COS_BronzeChest:3</li><li>COS_BronzeLegs:2</li><li>COS_BronzeFeet:1</li><li>COS_WoodAxe:0<br>  Skills:</li><li>skill BashI ~onAttack &gt;0 0.25<br>  Options:<br>Despawn: true<br>FollowRange: 10<br>AlwaysShowName: false<br>MovementSpeed: 0.25<br>PreventOtherDrops: true<br>PreventItemPickup: true<br>KnockbackResistance: 0.4<br>PreventMobKillDrops: true</li></ul><p>· 这里是我们的设置里需要注意的一些地方：<br>· 第一步，我们设置了半兽人生物在 Orc 派系，而哥布林生物在 Goblin 派系，这会将两种生物分开。<br>· 下一步，我们都给每个生物配置了 clear，opendoors（开门），和 meleeattack（近战），这适用于大多数近战生物。<br>· 最后我们将 AI Targets 清空。<br>· 第一是 hurtbytarget 选择器，之前也提过，这是一个很好的反击设置，这样这个生物就不会被利用。<br>· 下一步是 specifictargetfaction 选择器，选择互相的阵营。设置优先度为 2，这样它们没有在战斗的时候，就会主动攻击对方。<br>· 最后是 players 玩家选择器，如果附近没有哥布林/半兽人，它们就会攻击玩家。<br>· 最后记得添加 PreventMobKillDrops 为 true，这样路过的玩家就不会捡到满地的掉落物和经验。<br>· 如果我们要配置其他的哥布林和半兽人类型的生物，我们需要复制粘贴他们的 AI 设置，这样它们就会跟半兽人/哥布林的 AI 相同了。<br>6. 使用命令技能<br>这个功能很没意思，而且会在后台大量刷提示，不译。<br>原理就是用command机制和execute和其他原版命令<br>MythicMobs Manual</p><p>机制（元技能）查询<br>首字母字典序<br>Add Tag（计分板添加标签）<br>添加计分板标签到目标。<br>属性<br>属性<br>别名<br>描述<br>默认值<br>tagt标签名称default<br>特别注意<br>用于 hastag 条件。你也可以使用原版命令 “/scoreboard players tag &lt;玩家名&gt; add [标签名 ” 做到同样的事。<br>示例<br>给生物“Test”标签<br>TagSkill<br>  Skills:</p><ul><li>addtag{t=Test} @self</li></ul><p>只在生物拥有“Test”标签时使用<br>TagTest:<br>  Conditions:</p><ul><li>hastag{t=Test}<br>Skills:</li><li>suicide @self</li></ul><p>Activate Spawner（激活刷怪点）<br>激活一个 MythicMobs 刷怪点，让其开始刷怪。不会覆写刷怪点的任何条件和选项。<br>属性<br>属性<br>别名<br>描述<br>默认值<br>spawnersspawner, s激活的刷怪点的名称。可以使用组和正确的通配符NONE<br>特别注意<br>最好将刷怪点的“useTimer”属性设置为“false”。<br>示例<br>这将激活“BossAdd”刷怪点<br>Skills:</p><ul><li>activatespawner{spawner=BossAdd}</li></ul><p>这将激活所有在“Castle”组中的刷怪点<br>Skills:</p><ul><li>activatespawner{spawner=g:Castle}</li></ul><p>这将激活所有以 “DungeonBoss1Spawner”开头的刷怪点 (比如 DungeonBoss1Spawner1, DungeonBoss1Spawner2, 等等)<br>Skills:</p><ul><li>activatespawner{spawner=DungeonBoss1Spawner*}</li></ul><p>Arrow Volley（发射箭簇）<br>使用多个可配置的属性向目标发射一簇箭。<br>属性<br>属性<br>别名<br>描述<br>默认值<br>amounta箭簇的数量20<br>spreads箭簇的展开量45<br>velocityv箭簇的速度20<br>fireTicksf击中敌人造成燃烧的时间0<br>removeDelayrd多久箭簇会被移除200<br>注意 spread 量可能会很高！<br>示例<br>  Skills:</p><ul><li>arrowvolley{a=20;s=25;v=10;f=50;rd=200} @Target</li></ul><p>这将发射 20 支箭，展开量为 25,，速度为 10，对任何生物造成 50 ticks 火焰伤害 (2.5 秒)，接着在 200 ticks (10 秒) 后移除它们。</p><p>Atom（特效：原子）<br>注意：你必须安装 EffectLib 才能使用此特效。<br>使用<br>effect:atom{particlenucleus=[粒子特效];amountnucleus=[数量];particleorbital=[粒子效果];amountorbital=[数量];orbitals=[数量];radius=[数量];radiusnucleus=[数量];rotation=[数量];iterations=[数量];interval=[数量]} &lt;目标&gt; &lt;触发器&gt; &lt;生命修正&gt; &lt;几率&gt;</p><p>描述<br>播放来自 EffectLib 的自定义特效 Atom<br>细节<br>particlenucleus(pn): 核心使用的粒子名称<br>particleorbital(po): 轨道使用的粒子名称<br>amountnucleus(an): 核心的粒子数量<br>amountorbital(ao): 轨道的粒子数量<br>orbitals(o): 轨道添加的粒子数量<br>radius: 轨道半径<br>radiusnucleus(rn): 核心的半径，百分比：0=无, 0.50=轨道半径的半径, 1=和轨道一样大, 2.0=两倍轨道大小<br>rotation(ro): 轨道轴旋转量<br>iterations(t): 播放次数<br>interval(in): 每次播放的间隔<br>示例<br>effect:atom{pn=reddust;po=happyVillager;an=550;ao=150;o=5;r=4;rn=4;ro=0;t=25;i=5} @Self ~onInteract</p><p>创建一个原子特效，当你右键生物时，以 5 ticks 作为间隔播放 25 次，这个特效看着像个西瓜。</p><p>Bar Timer<br>等待原文更新。</p><p>Base Damage（基础伤害）<br>添加于版本 2.3<br>对目标造成以自身能力为基础的伤害。<br>属性<br>属性<br>别名<br>描述<br>默认<br>multiplierm造成伤害的百分比1<br>ignoreArmoria是否忽略护甲false<br>preventknockbackpkb, pk是否防止击退false<br>preventimmunitypi是否忽略免疫false<br>示例<br>这个示例中，生物受到攻击时，将会对目标造成 150% 自身基础攻击的伤害。<br>  Skills:</p><ul><li>basedamage{m=1.5} @target ~onDamaged</li></ul><p>Block Mask（方块遮罩）<br>添加于版本 2.2<br>创建一个由方块构成的遮罩包围目标。创建或变更的方块最后会回到最初的状态。提前重置方块可以使用 blockunmask-effect （见下的示例）<br>注意 blockmask 特效永远不会对世界中的方块造成变化，也不会破坏任何环境。这个特效造成的方块变化其实是装饰，没有方块真正变化了，所有东西都会还原。<br>属性<br>属性<br>别名<br>描述<br>默认值<br>materialmat, m用于方块遮罩的方块，必须是对应的 Bukkit 材料名gravel<br>datadv方块的数据值0<br>radiusr特效的半径0<br>noairna如果设置为 false 也会转换空气方块true<br>noisen设置特效的随机量0<br>durationd特效的持续时间 (20 ticks = 1 秒)。设置为 0 则是无限时间0<br>shapes特效的形状sphere<br>Bukkit 材料名可以在游戏内输入 /itemdb 命令，这个命令将会输出方块的材料名和其他的数据如数据值，这个命令应该在任何 Bukkit / Spigot 服务器可用。<br>特效: Blockunmask<br>blockunmask 特效将会反转 blockmask 造成的方块变化。比如当生物死亡时，可以使用这个技能来“清理”发送至玩家的假的方块更新。然而这并不是必要的，因为这会强制重新加载区块，该玩家的特效会消失。<br>属性<br>别名<br>描述<br>默认值<br>radiusr方块遮罩半径0<br>shapes特效的形状sphere<br>示例</p><ol><li>在生物周围创建一个地狱岩环境。将储蓄时间设置为 0 将会让这些假方块一直停留，直到玩家手动更新方块或者玩家重新登录。</li></ol><ul><li>effect:blockmask{m=netherrack;r=5} @self ~onTimer:1200</li></ul><ol start="2"><li>在 50 格内的每个玩家脚下创建冰块，让他们不断滑动。</li></ol><ul><li>effect:blockmask{m=ice;r=2;d=20} @PIR{r=50} ~onTimer:5</li></ul><ol start="3"><li>删除 blockmask 造成的效果，此特效只有 radius 属性。</li></ol><ul><li>effect:blockunmask{r=30}</li></ul><p>CancelEvent<br>等待原文更新。</p><p>Cast<br>[spoiler]等待原文更新。</p><p>Chain<br>等待原文更新。</p><p>Command（命令）<br>让每个提供的目标使用技能。<br>颜色字符和变量都可以使用。<br>如果命令包括了双引号和花括号，那么需要使用变量替换，否则不能执行。你可以查看命令技能教程（虽然未译）。这是因为这些符号作为技能语法的一部分，容易造成混乱。在 MythicMobs 2.4 以上，花括号不用使用变量替换了，但是引号仍然需要。<br>属性<br>属性<br>别名<br>描述<br>默认值<br>commandc执行的命令<br>示例<br>正确书写的命令技能<br>Skills:</p><ul><li>command{c=”give &lt;target.name&gt; gold_bar 20”} @trigger ~onInteract</li><li>command{c=”minecraft:tp &lt;target.name&gt; &lt;mob.uuid&gt;”} @self ~onDamaged</li><li>command{c=”minecraft:summon Zombie ~ ~ ~ &lt;&amp;lc&gt;NoAI:true,CustomName:&lt;&amp;dq&gt;Summoned Zombie&lt;&amp;dq&gt;&lt;&amp;rc&gt;”}</li><li>command{c=”minecraft:summon Zombie ~ ~ ~ {NoAI:true,CustomName:&lt;&amp;dq&gt;Summoned Zombie&lt;&amp;dq&gt;}”}</li></ul><p>无效的命令技能<br>以下的命令不会被执行，因为没有正确使用变量（空格等，详见技能|变量）。<br>Skills:</p><ul><li>command{c=”minecraft:summon Zombie ~ ~ ~ {NoAI:true,CustomName:”Summoned Zombie”}”}</li></ul><p>Consume（生命吸收）<br>伤害每个目标，并为生物恢复生命。<br>属性<br>属性<br>别名<br>描述<br>默认<br>damaged,dmg造成的伤害量None<br>healh每个伤害恢复的血量None<br>preventknockbackpkb, pk是否阻止击退false<br>preventimmunitypi是否忽略免疫false<br>ignorearmori,ia是否忽略目标盔甲false<br>“preventknockback” 和 “preventimmunity” 添加于 MythicMobs 2.3<br>示例<br>每杀死一个僵尸，为 Boss 恢复 20 HP<br>  Skills:</p><ul><li>consume{d=1000;h=20} @MobsInRadius{type=ZOMBIE;r=20}</li></ul><p>Damage（伤害）<br>伤害目标生物。<br>属性<br>属性<br>别名<br>描述<br>默认<br>amounta造成的伤害1<br>ignoreArmoria是否忽略护甲false<br>preventknockbackpkb, pk是否阻止击退false<br>preventimmunitypi是否忽略免疫false<br>“preventknockback” 和 “preventimmunity” 添加于 MythicMobs 2.3<br>示例<br>对目标造成忽略护甲的20点伤害<br>Skills:</p><ul><li>damage{amount=20;ignoreArmor=true} @target ~onTimer:20</li></ul><p>Delay（延迟）<br>对当前的技能列表延迟一定 ticks。<br>Delay 可以添加进技能，如“delay=TICKS”，详见下方示例。<br>技能延迟和格式延迟效果不同。<br>示例<br>  Skills:</p><ul><li>ignite{ticks=60}</li><li>delay 60</li><li>explode</li></ul><p>这样也可以：<br>  Skills:</p><ul><li>ignite{ticks=60;delay=80}</li><li>explode{delay=80}</li></ul><p>或：<br>  Skills:</p><ul><li>skill{skill=exampleskill;delay=200}</li></ul><p>Disguise（伪装）<br>在生物上使用伪装。这个技能需要安装 Libs Disguises 和 ProtocolLib 才可用。<br>查看概览|附加：伪装查看完整的伪装列表。<br>属性<br>属性<br>别名<br>描述<br>默认<br>disguised应用到生物的伪装<br>示例<br>这会让生物变成羊：<br>  Skills:</p><ul><li>disguise{d=SHEEP}</li></ul><p>这会让生物变成玩家，使用 Notch 的皮肤，并有 Jeb 的名称标签：<br>  Skills:</p><ul><li>disguise{d=player:&amp;7Jeb:Notch}</li></ul><p>Dismount（取消骑乘）<br>让生物取消正在骑乘的生物，如果没有正在骑乘，那么没有任何效果。没有属性，没有目标。<br>示例<br>  Skills:</p><ul><li>dismount ~onDamaged</li></ul><p>Doppleganger（分身）<br>复制目标玩家的外形，如果目标不是玩家则无效。这个技能需要安装 Libs Disguises 和 ProtocolLib 才可使用。<br>示例<br>Ditto:<br>  Type: SKELETON<br>  Skills:</p><ul><li>doppleganger @NearestPlayer ~onSpawn</li></ul><p>EjectPassenger（弹射骑乘者）<br>将骑在身上的生物弹出。总是影响自身，没有目标，没有属性。<br>示例<br>  Skills:</p><ul><li>ejectpassenger ~onDamaged</li></ul><p>Ender（特效：末影）<br>在目标处创建末影特效。<br>示例</p><ul><li>effect:ender @self ~onTimer:20</li></ul><p>EnderBeam（特效：末影激光）<br>创造一个末影水晶的特效到目标。<br>属性<br>基础属性<br>属性<br>别名<br>描述<br>默认值<br>durationd特效激活的时间长度60<br>yoffsety,yo垂直偏移量0<br>注意<br>此技能也会在生物处创建一个末影水晶。<br>示例<br>创造一个末影激光到目标，时长5秒，并有垂直偏移2格<br>  Enderbeam:</p><ul><li>effect:enderbeam{d=100;y=2;} @target</li></ul><p>Equip（装备）<br>装备生物，使用与装备相同的语法。<br>属性<br>属性<br>别名<br>描述<br>默认<br>itemi物品名称<br>示例<br>这个示例会给生物装备钻石剑<br>EquipDiamondSword:<br>  Skills:</p><ul><li>equip{item=diamond_sword:0}</li></ul><p>这个示例会给生物装备 KingsCrown<br>EquipCrown:<br>  Skills:</p><ul><li>equip{item=KingsCrown:4}</li></ul><p>Explosion（爆炸）<br>在某个坐标或生物处创建一个爆炸。<br>属性<br>属性<br>别名<br>描述<br>默认<br>yieldy爆炸范围0.013<br>blockdamagebd爆炸是否破坏方块false<br>firef,ft爆炸是否引燃方块false<br>警告： blockdamamge 似乎不受到 WorldGuard 区域的限制，自行承担风险。<br>示例<br>ExplosiveBlast:<br>  Skills:</p><ul><li>explosion{yield=4} @target</li></ul><p>Explosion（特效：爆炸）<br>生成爆炸特效，有声音和粒子，然而没伤害。<br>示例</p><ul><li>effect:explosion @self ~onDamaged</li></ul><p>Firework（特效：烟花）<br>属性<br>属性<br>别名<br>描述<br>默认值<br>typet种类，可为 0 - 40<br>durationd飞行时间0<br>flickerf添加闪烁效果false<br>trailtr添加轨道效果false<br>colorsc<br>fadecolorsfc<br>“type” 属性可为：<br>0 = 小球状爆炸<br>1 = 大球状爆炸<br>2 = 星型爆炸<br>3 = 苦力怕头型爆炸<br>4 = 爆裂型<br>示例<br>Skills:</p><ul><li>effect:firework{t=3;d=1;f=true;tr=true} @self ~onInteract</li></ul><p>Flames（特效：火焰）<br>创造一个火焰特效，模仿 Minecraft 的刷怪笼特效。<br>示例</p><ul><li>effect:flames @self ~onTimer:5</li></ul><p>Force Pull（强力拉扯）<br>传送所有的生物到一个随机的位置。<br>属性<br>属性<br>别名<br>描述<br>默认值<br>spreads<br>在玩家多少格以外<br>0<br>vspreadvs垂直范围spread<br>示例<br>这个示例将会把生物拉倒Boss周围的随机的5格内<br>ForceGrip:<br>  Skills:</p><ul><li>forcepull{spread=5} @EntitiesInRadius{r=30}</li></ul><p>Geyser（特效：喷泉）<br>添加于版本 2.1<br>在目标处创造一个流动的喷泉<br>属性<br>属性<br>别名<br>描述<br>默认值<br>typet液体种类，可为“water”或“lava”water<br>heighth喷泉高度<br>speeds流动速度10<br>示例<br>Skills:</p><ul><li>effect:geyser{type=LAVA;height=3;speed=10}</li></ul><p>Global Cooldown（全局冷却）<br>“GCD” 或 “Global Cooldown” 技能让你控制生物的全局冷却，用于和“offgcd”搭配使用，覆盖原有冷却设置。<br>属性<br>属性<br>别名<br>描述<br>默认值<br>tickst设置GCD的时长20<br>示例<br>技能触发 Global Cooldown 40 ticks，这样使用 offgcd 条件的技能无法使用。<br>IceBolt:<br>    Conditions:<br>    - offgcd<br>    - targetinlineofsight<br>    Skills:<br>    - gcd{ticks=40}</p><p>Glow（发光）<br>使目标发光（使用发光药水效果）<br>可以指定颜色<br>需要插件 GLOW API<br>属性<br>属性<br>别名<br>描述<br>默认值<br>colorc发光的颜色white<br>durationd发光时长100<br>示例<br>  Skills:</p><ul><li>effect:glow{color=RED;duration=1000}</li></ul><p>复制代码<br>让目标发红光 50 秒</p><p>Heal（治疗）<br>治疗目标特定生命值，可以“过度治疗”<br>属性<br>属性<br>别名<br>描述<br>默认值<br>amounta治疗量1<br>overhealoh是否添加 MaxHealth 以过度治疗false<br>示例<br>  Skills:</p><ul><li>heal{amount=20} @self ~onDamaged 0.2</li></ul><p>治疗自身 20 生命 (10 心) ，当受到伤害 (20% 几率)<br>  Skills:</p><ul><li>heal{amount=20;overheal=true} @self ~onDamaged 0.2</li></ul><p>当受到伤害治疗自身 20生命 （20% 几率）<br>如果生物接近满血或已经满血，那么将添加至附加的生命值。比如 20 血的生物受到治疗后会变成40血。<br>17 血的生物会变成 37 血</p><p>Heal Percent（治疗百分比量）<br>添加于版本 2.3<br>治疗目标部分生命，也可以过度治疗。<br>属性<br>属性<br>别名<br>描述<br>默认<br>multiplierm治疗的百分比，以目标的血量为参考1) 0.1<br>overheal是否允许添加 MaxHealthfalse<br>示例<br>受到攻击时治疗自身 20% 血量<br>  Skills:</p><ul><li>healpercent{m=0.2} @self ~onAttack</li></ul><p>Ignite（点燃）<br>将目标着火。<br>属性<br>属性<br>别名<br>描述<br>默认<br>tickst,d,duration燃烧时间60<br>示例<br>  Skills:</p><ul><li>ignite{ticks=100} @trigger ~onAttack</li></ul><p>攻击的目标着火5秒。</p><p>Item Spray（特效：物品喷射）<br>造成一堆物品的喷溅，玩家不可捡起。<br>属性<br>属性<br>别名<br>描述<br>默认值<br>itemi物品名，可为原版物品或 MythicMobs 物品iron_sword<br>amounta数量10<br>durationd物品出现的时间（ticks）20<br>radiusr半径0<br>velocityv,force,f物品速度1<br>yVelocityvvY 轴速度velocity<br>yOffsetyoY 轴偏移量1<br>allowpickupap是否可被玩家捡起false<br>示例<br>FanOfKnives:</p><ul><li>effect:itemspray{item=iron_sword;amount=20;velocity=5;d=100;} @self</li><li>…</li></ul><p>JSON Message（发送 Json 文本）<br>Added in 2.3.2<br>Sends a json-format chat message to the target player(s). JSON-messages are capeable of hover-events, click events and some other perks that are unavailable in the other message mechanics. They also support [color=rgb(86, 176, 79) !important]color codes and [color=rgb(86, 176, 79) !important]message variables.<br>The format of JSON-messages is a little more advanced than your everyday message. The syntax requires some extra symbols. If you don’t know anything about writing JSONs, you can visit this page or this one for help.<br>Note that double quotes must be replaced with single quotes in JSON-message mechanics.<br>Please do not post issues relating to this mechanic in the bug-report subforums unless you’re certain that your syntax is correct.<br>属性<br>Attribute<br>Aliases<br>Description<br>Default<br>messagemThe json-message to send. Must be surrounded by double-quotes.<br>示例<br>You can use both bukkit color codes or json color formatting:<br>  Skills:</p><ul><li>jsonmessage{m=”[{‘text’:’&amp;aHey, i am a JSON message!’}]”} @trigger ~onInteract</li><li>jsonmessage{m=”[{‘text’:’Hey, i am a red JSON message!’,’color’:’red’}]”} @trigger ~onInteract</li></ul><p>Here’s an example of how to make use of hover-events:<br>  Skills:</p><ul><li>jsonmessage{m=”[{‘text’:’&amp;7With me, you can create hover events’,’hoverEvent’:{‘action’:’show_text’,’value’:{‘text’:’&amp;aI am a hover event ‘}}}]”} @trigger ~onInteract</li></ul><p>And click events can be created like this. This is especially useful for the /mm signal command to create interactive quest mobs. This example would send the signal <signal> to the mob casting the json-message mechanic, if the player clicks on the click-event.<br>  Skills:</signal></p><ul><li>jsonmessage{m=”[{‘text’:’&amp;7&amp;nAlso click events! ‘,’clickEvent’:{‘action’:’run_command’,’value’:’/mm signal &lt;mob.uuid&gt; <signal>‘}}]”} @trigger ~onInteract<div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">(function(d, s) {  var j, e = d.getElementsByTagName(s)[0];  if (typeof LivereTower === 'function') { return; }  j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;  e.parentNode.insertBefore(j, e);})(document, 'script');  </script></div></signal></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> MC </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybbs友链</title>
      <link href="/2024/05/31/%E5%8F%8B%E9%93%BE/"/>
      <url>/2024/05/31/%E5%8F%8B%E9%93%BE/</url>
      
        <content type="html"><![CDATA[<p>Mybbs友链</p><span id="more"></span><p>Mypicgo ——图床<br><a href="http://microqing.lhost.fun/data/Mypicgo.html">http://microqing.lhost.fun/data/Mypicgo.html</a></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 公告 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mybbs发帖教程</title>
      <link href="/2024/05/31/%E5%8F%91%E5%B8%96/"/>
      <url>/2024/05/31/%E5%8F%91%E5%B8%96/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.pixelbbs.cn/LightPicture/2024/05/cfcfa66857ba57c1.jpg"></p><span id="more"></span><p>由于这个网站没有直接的发帖路径<br>所以版主制作了一个发布系统<br>*注意:网址会变动，时不时404,加裙获取最新网址 群号:971519377<br>按如下格式编写</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 写上你的标题</span><br><span class="line">categories: </span><br><span class="line">- 你的分类</span><br><span class="line">tags:</span><br><span class="line">- 标签1</span><br><span class="line">- 便签2</span><br><span class="line">comments: 设置评论为打开(<span class="literal">true</span>)关闭(<span class="literal">false</span>)</span><br><span class="line">img: （封面图，填网址！网址！)</span><br><span class="line">---</span><br><span class="line">&lt;帖子内容&gt;</span><br><span class="line">(在帖子内容中，可以随意使用md语法以及html标签</span><br></pre></td></tr></tbody></table></figure><p><a href=".\download\模板.md" download="">打包下载模板</a><br>教程完毕！有问题评论区发言</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[休闲] [整合包发布] [1.20.6-1.7.10]XPlus 2.0 原版整合 - 高效/稳定/便捷[Fabric/Forge]</title>
      <link href="/2024/05/31/%E6%95%B4%E5%90%88%E5%8C%851/"/>
      <url>/2024/05/31/%E6%95%B4%E5%90%88%E5%8C%851/</url>
      
        <content type="html"><![CDATA[<p>下载，使用本整合包即代表你已同意《用户协议与免责声明》</p><span id="more"></span><p><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/17/020634xmfk771qfz7iewie.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/17/020635hg6guemewetotdqe.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/17/020636k73bcdn3gnb207r2.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/17/020637lrbvovryv227or5t.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/17/020638vp2fopcfyzrifbxy.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/17/020639j0yffzxrddd9999r.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/17/020640wpd32zusvcityhvd.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/17/020641kpffxkwgso1ofo47.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/17/020643y9pt1a9zpzaz5hq3.jpg"></p><p>下载:</p><p><a href="https://www.mcmod.cn/modpack/467.html">https://www.mcmod.cn/modpack/467.html</a></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 转载 </tag>
            
            <tag> 整合包 </tag>
            
            <tag> 休闲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Github]hexo-theme-3-hexo</title>
      <link href="/2024/05/31/%5B%E4%B8%BB%E9%A2%98%5D3-hexo/"/>
      <url>/2024/05/31/%5B%E4%B8%BB%E9%A2%98%5D3-hexo/</url>
      
        <content type="html"><![CDATA[<p><a href="/download/[主题]3-hexo/hexo-theme-3-hexo-master.zip" download="">打包下载本主题zip</a><br>3-hexo 是为 <a href="https://github.com/tommy351/hexo">hexo</a> 制作的主题。三段式设计、方便。你可以点击: <a href="https://yelog.org/">我的博客</a> 查看效果</p><p>如果想要体验手机浏览效果，可以扫以下二维码：</p><p><img src="https://i.loli.net/2020/01/28/OqXkYuf8ipED6QM.png" alt="二维码图片_1月28日11时25分02秒.png"></p><p>配置及说明： <a href="http://yelog.org/2017/03/23/3-hexo-instruction/">3-hexo使用说明</a><br>功能更新日志：<a href="http://yelog.org/2017/03/13/3-hexo-logs/">3-hexo开发日志-持续更新</a><br>—————————————— &nbsp;<br><strong>关于主题：</strong></p><ol><li>极简体验</li><li>三段式设计</li><li>通过文章分类、标签或标题关键字检索</li><li>移动端适配</li><li>评论</li><li>多作者模式</li><li>全文快捷键</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo</span><br></pre></td></tr></tbody></table></figure><p>修改hexo根目录的<code>_config.yml</code>，如下</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="number">3</span><span class="string">-hexo</span></span><br></pre></td></tr></tbody></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/3-hexo</span><br><span class="line">git pull</span><br></pre></td></tr></tbody></table></figure><h2 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h2><h3 id="整体设计"><a href="#整体设计" class="headerlink" title="整体设计"></a>整体设计</h3><p><strong>三段式设计:</strong><br><img src="http://img.saodiyang.com/Fl2tl1Is5zx-D0DAt03bg0WkWXhO.png" alt="三段式设计"></p><h3 id="通过分类过滤"><a href="#通过分类过滤" class="headerlink" title="通过分类过滤"></a>通过分类过滤</h3><p><img src="http://img.saodiyang.com/FmooXnOPeRPGBts5V5W7CV0AHuIo.gif" alt="分类过滤文章"></p><h3 id="通过标题关键字搜索"><a href="#通过标题关键字搜索" class="headerlink" title="通过标题关键字搜索"></a>通过标题关键字搜索</h3><p><img src="http://img.saodiyang.com/FkF9lgTJoLdmNlYbTVokSNB3zdS4.gif" alt="文章标题关键字搜索"></p><h3 id="通过作者搜索"><a href="#通过作者搜索" class="headerlink" title="通过作者搜索"></a>通过作者搜索</h3><p><strong>若开启了多作者模式，则可以通过输入@，进行作者搜索，如下所示</strong><br><img src="http://img.saodiyang.com/FhbFRRPIDuz1pEKH-dr-RWDHVvXn.gif" alt="通过作者搜索"></p><h3 id="通过标签搜索"><a href="#通过标签搜索" class="headerlink" title="通过标签搜索"></a>通过标签搜索</h3><p><strong>输入#，就会出现标签提示</strong><br><img src="http://img.saodiyang.com/FoJsDnsoLWKo7ECSzcLmzUX_uWgw.gif" alt="通过标签搜索"></p><h3 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h3><p><img src="http://img.saodiyang.com/FtDD77YX_xenS-AZQW56qrwrQc4D.gif" alt="测试一下评论"></p><h3 id="打赏功能"><a href="#打赏功能" class="headerlink" title="打赏功能"></a>打赏功能</h3><p><img src="http://img.saodiyang.com/FhlNgOF7ipEIVrrztFdRam3WRikw.gif" alt="打赏功能"></p><h3 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h3><p><img src="http://img.saodiyang.com/FhQLLqrRCr4yFGl9nDb_9oc4yME-.png" alt="文章置顶"></p><h3 id="返回头部"><a href="#返回头部" class="headerlink" title="返回头部"></a>返回头部</h3><p><img src="http://img.saodiyang.com/FjpVByJViwYEWHHMTeayiQ-FD_qG.gif" alt="返回头部"></p><h2 id="效果博客"><a href="#效果博客" class="headerlink" title="效果博客"></a>效果博客</h2><ul><li><a href="https://www.chenuon.cn/">程忧点滴</a></li><li><a href="https://coco56.gitee.io/blog/">COCO56个人博客</a></li><li><a href="https://wallleap.cn/">wallleap</a></li><li><a href="https://dingguanyu.com/">黑刀的个人博客</a></li></ul><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p> 作者Peiwen Lu的jekyll主题：<a href="https://github.com/P233/3-Jekyll">3-jekyll</a>主题<br> 作者Yansu的<a href="http://yansu.org/">blog</a><br> 作者litten的<a href="https://github.com/litten/hexo-theme-yilia">hexo-theme-yilia</a>主题</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Github]hexo-theme-butterfly——推荐</title>
      <link href="/2024/05/31/%5B%E4%B8%BB%E9%A2%98%5Dbuty/"/>
      <url>/2024/05/31/%5B%E4%B8%BB%E9%A2%98%5Dbuty/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.shields.io/github/package-json/v/jerryc127/hexo-theme-butterfly/master?color=%231ab1ad&amp;label=master" alt="master version"><br><img src="https://img.shields.io/github/package-json/v/jerryc127/hexo-theme-butterfly/dev?label=dev" alt="master version"><br><img src="https://img.shields.io/npm/v/hexo-theme-butterfly?color=%09%23bf00ff" alt="https://img.shields.io/npm/v/hexo-theme-butterfly?color=%09%23bf00ff"><br><img src="https://img.shields.io/badge/hexo-5.3.0+-0e83c" alt="hexo version"><br><img src="https://img.shields.io/github/license/jerryc127/hexo-theme-butterfly?color=FF5531" alt="license"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/theme-butterfly-readme.png"></p><p>📢 預覽: <a href="https://butterfly.js.org/">Butterfly</a> || <a href="https://blog.crazywong.com/">CrazyWong</a></p><p>📖 文檔: <a href="https://butterfly.js.org/posts/21cfbf15/">中文</a> || <a href="https://butterfly.js.org/en/posts/butterfly-docs-en-get-started/">English</a></p><p>一款基於<a href="https://github.com/Molunerfinn/hexo-theme-melody">hexo-theme-melody</a>修改的主題</p><h2 id="💻-安裝"><a href="#💻-安裝" class="headerlink" title="💻 安裝"></a>💻 安裝</h2><h3 id="Git-安裝"><a href="#Git-安裝" class="headerlink" title="Git 安裝"></a>Git 安裝</h3><blockquote><p>本倉庫同時上傳到 <a href="https://gitee.com/immyw/hexo-theme-butterfly.git">Gitee</a>，如果你訪問 Github 緩慢，可從 Gitee 中下載。</p></blockquote><p>在博客根目錄裡安裝穩定版【推薦】</p><figure class="highlight powershell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://github.com/jerryc127/hexo<span class="literal">-theme-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></tbody></table></figure><p>如果想要安裝比較新的dev分支，可以</p><figure class="highlight powershell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> dev https://github.com/jerryc127/hexo<span class="literal">-theme-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></tbody></table></figure><h3 id="npm-安裝"><a href="#npm-安裝" class="headerlink" title="npm 安裝"></a>npm 安裝</h3><blockquote><p>此方法只支持Hexo 5.0.0以上版本</p></blockquote><p>在博客根目錄裡</p><figure class="highlight powershell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo<span class="literal">-theme-butterfly</span></span><br></pre></td></tr></tbody></table></figure><h2 id="⚙-應用主題"><a href="#⚙-應用主題" class="headerlink" title="⚙ 應用主題"></a>⚙ 應用主題</h2><p>修改hexo配置文件<code>_config.yml</code>，把主題改為<code>Butterfly</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></tbody></table></figure><blockquote><p>如果你沒有pug以及stylus的渲染器，請下載安裝： npm install hexo-renderer-pug hexo-renderer-stylus –save</p></blockquote><h2 id="🎉-特色"><a href="#🎉-特色" class="headerlink" title="🎉 特色"></a>🎉 特色</h2><ul><li><input checked="" disabled="" type="checkbox"> 卡片化設計</li><li><input checked="" disabled="" type="checkbox"> 支持二級目錄</li><li><input checked="" disabled="" type="checkbox"> 雙欄設計</li><li><input checked="" disabled="" type="checkbox"> 響應式主題</li><li><input checked="" disabled="" type="checkbox"> 夜間模式</li><li><input checked="" disabled="" type="checkbox"> Pjax</li><li><input checked="" disabled="" type="checkbox"> 文章閲讀模式</li><li><input checked="" disabled="" type="checkbox"> 簡體和繁體轉換</li><li><input checked="" disabled="" type="checkbox"> 電腦和手機都可查看TOC目錄</li><li><input checked="" disabled="" type="checkbox"> 內置多種代碼配色（darker/pale night/light/ocean），可自定義代碼配色</li><li><input checked="" disabled="" type="checkbox"> 代碼塊顯示代碼語言/關閉或展開代碼塊/代碼複製/代碼自動換行</li><li><input checked="" disabled="" type="checkbox"> 可關閉文字複製/可開啟內容複製增加版權信息）</li><li><input checked="" disabled="" type="checkbox"> 兩種搜索（ Algolia 搜索和本地搜索）</li><li><input checked="" disabled="" type="checkbox"> Mathjax 和 Katex</li><li><input checked="" disabled="" type="checkbox"> 內置404頁面</li><li><input checked="" disabled="" type="checkbox"> 顯示字數統計</li><li><input checked="" disabled="" type="checkbox"> 顯示相關文章</li><li><input checked="" disabled="" type="checkbox"> 過期文章提醒</li><li><input checked="" disabled="" type="checkbox"> 多種分享系統（Sharejs/Addtoany）</li><li><input checked="" disabled="" type="checkbox"> 多種評論系統（Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo/Giscus/Remark42/artalk）</li><li><input checked="" disabled="" type="checkbox"> 支持雙評論部署</li><li><input checked="" disabled="" type="checkbox"> 多種在線聊天（Chatra/Tidio/Daovoice/Crisp/messenger）</li><li><input checked="" disabled="" type="checkbox"> 多種分析系統</li><li><input checked="" disabled="" type="checkbox"> 谷歌廣告/手動廣告位置</li><li><input checked="" disabled="" type="checkbox"> 各種站長驗證</li><li><input checked="" disabled="" type="checkbox"> 修改網站配色</li><li><input checked="" disabled="" type="checkbox"> 打字特效 activate_power_mode</li><li><input checked="" disabled="" type="checkbox"> 多種背景特效（靜止彩帶/動態彩帶/Canvas Nest）</li><li><input checked="" disabled="" type="checkbox"> 多種鼠標點擊特效（煙花/文字/愛心）</li><li><input checked="" disabled="" type="checkbox"> 內置一種 Preloader 加載動畫和 pace.js 加載動畫條</li><li><input checked="" disabled="" type="checkbox"> 不蒜子訪問統計</li><li><input checked="" disabled="" type="checkbox"> 兩種大圖模式（Medium Zoom/Fancybox）</li><li><input checked="" disabled="" type="checkbox"> Mermaid 圖表顯示</li><li><input checked="" disabled="" type="checkbox"> 照片牆</li><li><input checked="" disabled="" type="checkbox"> 圖片懶加載</li><li><input checked="" disabled="" type="checkbox"> Instantpage/Pangu/Snackbar彈窗/PWA……</li></ul><h2 id="✨-貢獻者"><a href="#✨-貢獻者" class="headerlink" title="✨ 貢獻者"></a>✨ 貢獻者</h2><a href="https://github.com/jerryc127/hexo-theme-butterfly/graphs/contributors">  <img src="https://contrib.rocks/image?repo=jerryc127/hexo-theme-butterfly"></a><h2 id="📷-截圖"><a href="#📷-截圖" class="headerlink" title="📷 截圖"></a>📷 截圖</h2><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/butterfly-readme-screenshots-1.jpg"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/butterfly-readme-screenshots-2.jpg"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/butterfly-readme-screenshots-3.jpg"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/butterfly-readme-screenshots-4.jpg"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/theme-butterfly-readme-homepage-1.png"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/theme-butterfly-readme-homepage-2.png"></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo主题 </tag>
            
            <tag> 精品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Github]hexo-theme-Fluid</title>
      <link href="/2024/05/31/%5B%E4%B8%BB%E9%A2%98%5Dfluid/"/>
      <url>/2024/05/31/%5B%E4%B8%BB%E9%A2%98%5Dfluid/</url>
      
        <content type="html"><![CDATA[<p align="center">  <img alt="Fluid Logo" src="https://avatars2.githubusercontent.com/t/3419353?s=280&amp;v=4" width="128"></p><p align="center">一款 Material Design 风格的主题</p><p align="center">An elegant Material-Design theme for Hexo</p><p><img src="https://cdn.jsdelivr.net/gh/fluid-dev/static@master/hexo-theme-fluid/screenshots/index.png" alt="ScreenShot"></p><p align="center">  <a title="Hexo Version" target="_blank" href="https://hexo.io/zh-cn/"><img alt="Hexo Version" src="https://img.shields.io/badge/Hexo-%3E%3D%205.0-orange?style=flat"></a>  <a title="Node Version" target="_blank" href="https://nodejs.org/zh-cn/"><img alt="Node Version" src="https://img.shields.io/badge/Node-%3E%3D%2010.13.0-yellowgreen?style=flat"></a>  <a title="License" target="_blank" href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/LICENSE"><img alt="License" src="https://img.shields.io/github/license/fluid-dev/hexo-theme-fluid.svg?style=flat"></a>  <br>  <a title="GitHub Release" target="_blank" href="https://github.com/fluid-dev/hexo-theme-fluid/releases"><img alt="GitHub Release" src="https://img.shields.io/github/v/release/fluid-dev/hexo-theme-fluid?style=flat"></a>  <a title="Npm Downloads" target="_blank" href="https://www.npmjs.com/package/hexo-theme-fluid"><img alt="Npm Downloads" src="https://img.shields.io/npm/dt/hexo-theme-fluid?color=red&amp;label=npm"></a>  <a title="GitHub Commits" target="_blank" href="https://github.com/fluid-dev/hexo-theme-fluid/commits/master"><img alt="GitHub Commits" src="https://img.shields.io/github/commit-activity/m/fluid-dev/hexo-theme-fluid.svg?style=flat&amp;color=brightgreen&amp;label=commits"></a>  <br><br>  <a title="GitHub Watchers" target="_blank" href="https://github.com/fluid-dev/hexo-theme-fluid/watchers"><img alt="GitHub Watchers" src="https://img.shields.io/github/watchers/fluid-dev/hexo-theme-fluid.svg?label=Watchers&amp;style=social"></a>    <a title="GitHub Stars" target="_blank" href="https://github.com/fluid-dev/hexo-theme-fluid/stargazers"><img alt="GitHub Stars" src="https://img.shields.io/github/stars/fluid-dev/hexo-theme-fluid.svg?label=Stars&amp;style=social"></a>    <a title="GitHub Forks" target="_blank" href="https://github.com/fluid-dev/hexo-theme-fluid/network/members"><img alt="GitHub Forks" src="https://img.shields.io/github/forks/fluid-dev/hexo-theme-fluid.svg?label=Forks&amp;style=social"></a>  </p><p align="center">🇨🇳 中文简体  |  <a title="English" href="README_en.md">🇬🇧 English</a></p><p align="center">  <span>文档：</span>  <a href="https://hexo.fluid-dev.com/docs/guide/">主题配置</a> |   <a href="https://hexo.io/zh-cn/docs/front-matter">文章配置</a></p><p align="center">  <span>预览：</span>  <a href="https://hexo.fluid-dev.com/">Fluid's blog</a> |   <a href="https://zkqiang.cn">zkqiang's blog</a></p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h4 id="1-搭建-Hexo-博客"><a href="#1-搭建-Hexo-博客" class="headerlink" title="1. 搭建 Hexo 博客"></a>1. 搭建 Hexo 博客</h4><p>如果你还没有 Hexo 博客，请按照 <a href="https://hexo.io/zh-cn/docs/">Hexo 官方文档</a> 进行安装、建站。</p><h4 id="2-获取主题最新版本"><a href="#2-获取主题最新版本" class="headerlink" title="2. 获取主题最新版本"></a>2. 获取主题最新版本</h4><p><strong>方式一：</strong></p><p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-theme-fluid</span><br></pre></td></tr></tbody></table></figure><p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 内容复制进去。</p><p><strong>方式二：</strong></p><p>下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新 release 版本</a> 解压到 themes 目录，并将解压出的文件夹重命名为 <code>fluid</code>。</p><h4 id="3-指定主题"><a href="#3-指定主题" class="headerlink" title="3. 指定主题"></a>3. 指定主题</h4><p>如下修改 Hexo 博客目录中的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">fluid</span>  <span class="comment"># 指定主题</span></span><br><span class="line"></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span>  <span class="comment"># 指定语言，会影响主题显示的语言，按需修改</span></span><br></pre></td></tr></tbody></table></figure><h4 id="4-创建「关于页」"><a href="#4-创建「关于页」" class="headerlink" title="4. 创建「关于页」"></a>4. 创建「关于页」</h4><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></tbody></table></figure><p>创建成功后，编辑博客目录下 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">about</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">这里写关于页的正文，支持</span> <span class="string">Markdown,</span> <span class="string">HTML</span></span><br></pre></td></tr></tbody></table></figure><h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h2><p>更新主题的方式<a href="https://hexo.fluid-dev.com/docs/start/#%E6%9B%B4%E6%96%B0%E4%B8%BB%E9%A2%98">参照这里</a>。</p><h2 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h2><ul><li><input checked="" disabled="" type="checkbox"> 无比详实的<a href="https://hexo.fluid-dev.com/docs/">用户文档</a></li><li><input checked="" disabled="" type="checkbox"> 页面组件懒加载</li><li><input checked="" disabled="" type="checkbox"> 多种代码高亮方案</li><li><input checked="" disabled="" type="checkbox"> 多语言配置</li><li><input checked="" disabled="" type="checkbox"> 内置多款评论插件</li><li><input checked="" disabled="" type="checkbox"> 内置网页访问统计</li><li><input checked="" disabled="" type="checkbox"> 内置文章本地搜索</li><li><input checked="" disabled="" type="checkbox"> 支持暗色模式</li><li><input checked="" disabled="" type="checkbox"> 支持脚注语法</li><li><input checked="" disabled="" type="checkbox"> 支持 LaTeX 数学公式</li><li><input checked="" disabled="" type="checkbox"> 支持 mermaid 流程图</li></ul><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><table>  <thead>    <tr>      <th align="center" style="width: 240px;">        <a href="https://flowus.cn/share/eebf2144-8db7-4d68-b31e-bc2c116871de">          <img src="https://github-production-user-asset-6210df.s3.amazonaws.com/32983588/243899272-092eeb46-9172-4c10-9e72-53561ff37a00.png" height="200px"><br>          <sub>首席赞助商 ORENCEAI</sub><br>          <sub>全新的 ChatGPT 人工智能对话平台</sub>        </a>      </th>      <th align="center" style="width: 240px;">        <a href="https://www.jetbrains.com/?from=hexo-theme-fluid">          <img src="https://raw.githubusercontent.com/fluid-dev/static/690616966f34a58d66aa15ac7b550dd7bbc03967/hexo-theme-fluid/jetbrains.svg" height="200px"><br>          <sub>免费开发工具提供方 JetBrains</sub><br>          <sub>专注于创建智能开发工具</sub>        </a>      </th>    </tr>  </thead></table><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p><a href="https://github.com/fluid-dev/hexo-theme-fluid/graphs/contributors"><img src="https://opencollective.com/hexo-theme-fluid/contributors.svg?width=890&amp;button=false" alt="contributors"></a></p><p>英文文档翻译：<a href="https://eatrice.top/">@EatRice</a> <a href="https://ruru.eatrice.top/">@橙子杀手</a> <a href="https://sinetian.github.io/">@Sinetian</a></p><p>其他贡献：<a href="https://github.com/zhugaoqi">@zhugaoqi</a> <a href="https://github.com/julydate">@julydate</a> <a href="https://xiyu.pro/">@xiyuvi</a></p><p>如你也想贡献代码，可参照<a href="https://hexo.fluid-dev.com/docs/contribute/">贡献指南</a></p><h2 id="支持我们"><a href="#支持我们" class="headerlink" title="支持我们"></a>支持我们</h2><p>如果你觉得这个项目有帮助，并愿意支持它的发展，可以通过以下方式支持我们的开源创作：</p><table>  <thead>    <tr>      <th align="center" style="width: 240px;">        <div>          <img src="https://github.com/fluid-dev/static/blob/master/hexo-theme-fluid/sponsor.png?s=200&amp;v=4" height="200px" alt="微信赞赏码"><br>          <sub>微信赞赏码</sub>        </div>      </th>      <th align="center" style="width: 240px;">        <div>          <a href="https://etherscan.io/address/0x0021395954710be29c0BFDCB3f98f4D2fa5A1448">            <img src="https://avatars.githubusercontent.com/u/6250754?s=200&amp;v=4" height="200px" alt="ERC20 Token">          </a>          <br>          <sub>ERC20 Token: 0x0021395954710<br>be29c0BFDCB3f98f4D2fa5A1448</sub>        </div>      </th>    </tr>  </thead></table><p>同时我们正在<strong>寻求商业赞助</strong>，如果贵司想在本页显著位置展示广告位（每月 6K+ Views 定向流量曝光），或者有其他赞助形式，可将联系方式发送邮件至 zkqiang#126.com (#替换为@)。</p><h2 id="Star-趋势"><a href="#Star-趋势" class="headerlink" title="Star 趋势"></a>Star 趋势</h2><p><a href="https://starchart.cc/fluid-dev/hexo-theme-fluid"><img src="https://starchart.cc/fluid-dev/hexo-theme-fluid.svg" alt="Stargazers over time"></a></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo主题 </tag>
            
            <tag> 精品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Github]hexo-theme-mnh</title>
      <link href="/2024/05/31/%5B%E4%B8%BB%E9%A2%98%5Dhexo-theme-mnh/"/>
      <url>/2024/05/31/%5B%E4%B8%BB%E9%A2%98%5Dhexo-theme-mnh/</url>
      
        <content type="html"><![CDATA[<p>修改自 <a href="https://github.com/henryhuang/hexo-theme-polarbearsimple">hexo-theme-polarbearsimple</a></p><p>看了很多主题，都没有满意的，所以选了一个比较好的底子，自己修改了</p><p><a href="https://mnh.gao.tn/">在线预览 Demo</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1.安装 Hexo 插件 <code>hexo-renderer-sass</code> <code>hexo-renderer-swig</code> <code>hexo-generator-archive</code> and <code>hexo-algoliasearch</code></p>  <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-scss@github:meannoharm/hexo-renderer-sass hexo-renderer-swig hexo-generator-archive hexo-algoliasearch --save</span><br></pre></td></tr></tbody></table></figure><p>  如果使用的 <code>nodejs</code> 版本大于 12, <code>hexo-renderer-sass</code> 包可能会安装错误, 可以查看 <a href="https://github.com/knksmith57/hexo-renderer-sass/issues/43">Issue</a> 和 <a href="https://github.com/knksmith57/hexo-renderer-sass/pull/46">Pull request</a>.</p><p>  可以运行下面的命令，安装 <a href="https://github.com/kmuncie">@kmuncie</a> 版本的 <code>hexo-renderer-sass</code> </p>  <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save https://github.com/kmuncie/hexo-renderer-sass</span><br></pre></td></tr></tbody></table></figure><p>2.将主题下载到 Hexo 主题文件夹</p>  <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/meannoharm/hexo-theme-mnh themes/mnh</span><br></pre></td></tr></tbody></table></figure><p>3.修改 <code>your_site/_config.yml</code> 文件</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: http://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">mnh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show all articles at archive page.</span></span><br><span class="line"><span class="comment"># Need to install hexo-generator-archive</span></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">yearly:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">monthly:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">daily:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Global search based on Algolia https://www.algolia.com/</span></span><br><span class="line"><span class="comment"># Need to install and config hexo-algoliasearch</span></span><br><span class="line"><span class="attr">algolia:</span></span><br><span class="line">  <span class="attr">applicationID:</span> <span class="string">"&lt;APP_ID&gt;"</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="string">"&lt;API_KEY&gt;"</span></span><br><span class="line">  <span class="attr">adminApiKey:</span> <span class="string">"&lt;ADMIN_API_KEY&gt;"</span></span><br><span class="line">  <span class="attr">chunkSize:</span> <span class="number">5000</span></span><br><span class="line">  <span class="attr">indexName:</span> <span class="string">"&lt;INDEX_NAME&gt;"</span></span><br><span class="line">  <span class="attr">fields:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">content:strip:truncate,0,500</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">excerpt:strip</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">permalink</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cover</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">slug</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tags</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">categories</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">title</span></span><br></pre></td></tr></tbody></table></figure><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>修改 <code>your_site/themes/mnh/_config.yml</code></p><h3 id="配置主题组件功能"><a href="#配置主题组件功能" class="headerlink" title="配置主题组件功能"></a>配置主题组件功能</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># widget function</span></span><br><span class="line"><span class="comment"># false: disable</span></span><br><span class="line"><span class="comment"># widget_custom: custom your widget</span></span><br><span class="line"><span class="comment">#   title: your widget title</span></span><br><span class="line"><span class="comment">#   content: Add your html code in here. Example: &lt;p&gt;testing...&lt;/p&gt;</span></span><br><span class="line"><span class="attr">widget:</span></span><br><span class="line">  <span class="attr">Tags:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">Custom:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">widget_custom:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">Test</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">&lt;p&gt;testing...&lt;/p&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="网站分析"><a href="#网站分析" class="headerlink" title="网站分析"></a>网站分析</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Baidu Analytics</span></span><br><span class="line"><span class="attr">baidu_analytics:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">"[BAIDU ANALYTICS KEY]"</span></span><br><span class="line"><span class="comment"># Google Analytics</span></span><br><span class="line"><span class="comment"># use google analytics 4</span></span><br><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">gtag:</span> <span class="string">"[GOOGLE ANALYTICS GTAG]"</span></span><br></pre></td></tr></tbody></table></figure><h3 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Duoshuo</span></span><br><span class="line"><span class="attr">duoshuo_shortname:</span></span><br><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="attr">disqus_shortname:</span></span><br><span class="line"><span class="comment"># utterances</span></span><br><span class="line"><span class="attr">utterances:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">"[ENTER REPO HERE]"</span></span><br><span class="line">  <span class="attr">issueTerm:</span> <span class="string">pathname</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">github-light</span></span><br></pre></td></tr></tbody></table></figure><h3 id="许可证配置"><a href="#许可证配置" class="headerlink" title="许可证配置"></a>许可证配置</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">license:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">CC-BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line">  <span class="attr">link:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br></pre></td></tr></tbody></table></figure><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Github] CSDNExporter</title>
      <link href="/2024/05/31/%5B%E5%B7%A5%E5%85%B7%5DCSDNE/"/>
      <url>/2024/05/31/%5B%E5%B7%A5%E5%85%B7%5DCSDNE/</url>
      
        <content type="html"><![CDATA[<p><a href="/download/CSDNExporter-master.zip" download="">打包下载本zip</a></p><h2 id="重要说明"><a href="#重要说明" class="headerlink" title="重要说明"></a>重要说明</h2><ul><li>2024-05-22 通知：<strong>估计CSDN加入了反爬虫机制，代码已无法请求CSDN网页，因此本项目已凉~</strong></li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>CSDN 博客导出工具, 用于将 CSDN 博客导出为 Markdown / PDF 格式. 比较赞的地方在于, 它<br>不仅支持一篇博文的导出, 还支持将某个类目下的博文批量导出, 以及将导出的多篇博文汇总为<br>一篇, 以便用于全局搜索, 具体效果可以查看 <a href="https://blog.csdn.net/Eric_1993/article/details/104772437">导出 CSDN 博客至 Markdown 或 PDF 格式 (近乎完美)</a>.</p><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>另外要说明的是:</p><ol start="0"><li><p>安装必要的 Python 库, 如 <code>httpx</code>, <code>requests</code>, <code>BeautifulSoup</code>, 直接运行 <code>pip install -r requirements.txt</code> 即可;</p><ul><li>2024-04-24 更新：<code>BeautifulSoup</code> 升级为 <code>beautifulsoup4</code>，已在 Ubuntu 和 Windows 系统测试过没啥问题;</li></ul></li><li><p>为了解析图片链接, 需要安装 <a href="https://aria2.github.io/">aria2</a>, 并保证能在命令行启动;</p><ul><li>将软件的安装目录加入到环境变量中即可, 加入后最好重启或刷新终端, 如 Bash、Zsh、Terminal、Powershell 等等，如果运行命令 <code>aria2c --verison</code> 不报错，说明成功；</li></ul></li><li><p>为了转换为 PDF, 需要安装 <a href="https://pandoc.org/">Pandoc</a></p><ul><li>有同学反映转换 pdf 时，遇到 pandoc 的报错 <code>pandoc: unrecognized option '--pdf-engine=xelatex'</code>, 因此还需要安装 xelatex, 具体查阅下 pandoc 的安装说明吧。<ul><li>Ubuntu 上可以使用 <code>sudo apt-get install texlive-xetex</code> + <code>sudo apt install latex-cjk-all</code> 安装 texlive 相关的内容 (注意 [LaTeX Error: File `ctex.sty’ not found</li></ul></li></ul></li></ol><p>](<a href="https://tex.stackexchange.com/questions/687540/latex-error-file-ctex-sty-not-found">https://tex.stackexchange.com/questions/687540/latex-error-file-ctex-sty-not-found</a>))<br>        - Pandoc 使用 <code>sudo apt-get install pandoc</code> 安装<br>        - 代码中使用了 ‘Source Code Pro’ 字体，是我个人很喜欢的编程字体，可以参考 <a href="https://askubuntu.com/questions/193072/how-to-use-the-adobe-source-code-pro-font">Source Code Pro Font</a> 中 edwin 的回答，从 <a href="https://fonts.google.com/">Google Font</a> 获取该字体，并按回答中的方法安装到系统中。当然，如果不想使用该字体，只需要将 <code>main.py</code> 中关于 ‘Source Code Pro’ 的两行代码给注释掉即可。</p><p>此外, 正如博客标题 <a href="https://blog.csdn.net/Eric_1993/article/details/104772437">导出 CSDN 博客至 Markdown 或 PDF 格式 (近乎完美)</a> 中说的, “近乎完美”,<br>是因为该博客导出工具还有一些细节没有考虑, 没有需求就没有动力去改代码, 精力有限, 目前该工具让我满意 😂😂😂.</p><h2 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h2><ul><li>Linux系统运行<br>启动脚本为 <code>./run.sh</code>, 使用 <code>chmod +x run.sh</code> 增加其可执行权限;</li><li>Windows系统启动<br>启动脚本为<code>run.bat</code>, 双击打开或者在cmd中运行<code>run.bat</code></li></ul><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><ul><li>2024-04-26: 增加对表格解析的支持</li><li>2024-04-25: 修复 Windows 下使用绝对路径报错的问题</li></ul><h2 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h2><p>因个人原因，仓库疏于维护，非常感谢社区成员的关注与支持，尤其感谢如下成员的付出：</p><p><a href="https://github.com/yaunsine">@yaunsine</a>, <a href="https://github.com/Tim-Saijun">@Tim-Saijun</a>, <a href="https://github.com/66my">@66my</a></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 工具 </tag>
            
            <tag> CSDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[卡通]ExPixel 精致像素纹理包 - 一款精心打造的卡通材质</title>
      <link href="/2024/05/31/%5B%E5%8D%A1%E9%80%9A%5DExPixel%20%E7%B2%BE%E8%87%B4%E5%83%8F%E7%B4%A0%E7%BA%B9%E7%90%86%E5%8C%85%20-%20%E4%B8%80%E6%AC%BE%E7%B2%BE%E5%BF%83%E6%89%93%E9%80%A0%E7%9A%84%E5%8D%A1%E9%80%9A%E6%9D%90%E8%B4%A8/"/>
      <url>/2024/05/31/%5B%E5%8D%A1%E9%80%9A%5DExPixel%20%E7%B2%BE%E8%87%B4%E5%83%8F%E7%B4%A0%E7%BA%B9%E7%90%86%E5%8C%85%20-%20%E4%B8%80%E6%AC%BE%E7%B2%BE%E5%BF%83%E6%89%93%E9%80%A0%E7%9A%84%E5%8D%A1%E9%80%9A%E6%9D%90%E8%B4%A8/</url>
      
        <content type="html"><![CDATA[<p><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/15/033510mygzg4j4t4nd5gtt.jpg"></p><span id="more"></span><p>精致像素 - ExPixel​<br>如果下载链接加入群满员请加其他群：<br>①群：<a href="https://qm.qq.com/q/p8XNqSUqA0">https://qm.qq.com/q/p8XNqSUqA0</a><br>②群：<a href="https://qm.qq.com/q/4sBjKhOjEQ">https://qm.qq.com/q/4sBjKhOjEQ</a><br>③群：暂未开放<br>基岩版获取：<a href="https://afdian.net/a/1145J">https://afdian.net/a/1145J</a><br>B站主页：<a href="https://b23.tv/8nLAqSm">https://b23.tv/8nLAqSm</a></p><p>作者的话：​<br>大家好！我是基拉韦厄~ 可以叫我阿基， 精致像素是一款于2022年3月1日立项，持续更新到现在及未来的一款，手绘像素风，卡通风格，主打色彩精美，细节到位，适合于生存、建筑等的一款材质包！每个贴图都经历反复打磨和多次重绘！目的就是为了质量！非常感谢大家能喜欢这款我用心打造的材质作品，有建议和问题可以加群咨询或B站私信，b站不常看，建议在群里联系我！<br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/15/033516ensuvmmpp4dsdwxe.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/15/033522tzxi6huii6iz3x3r.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/15/033530ngi2i7jg2qf7ij72.jpg"><br><img src="https://www.pixelbbs.cn/data/attachment/forum/202405/15/033539dvglhmgxldmvgggd.jpg"><br>                        <em>下载</em><br>     <a href="https://qm.qq.com/cgi-bin/qm/qr?authKey=DmXbY3zAlBe6pMp1aLl+omnS7zRt+N2+kT5MdIhP37G98FqMA9rJ36/nYs/dyqmc&amp;k=pQ_gsgskgRVtL8bey6GbfeAT57YDa5EB&amp;noverify=0">https://qm.qq.com/cgi-bin/qm/qr?authKey=DmXbY3zAlBe6pMp1aLl%2BomnS7zRt%2BN2%2BkT5MdIhP37G98FqMA9rJ36%2FnYs%2Fdyqmc&amp;k=pQ_gsgskgRVtL8bey6GbfeAT57YDa5EB&amp;noverify=0</a><br>     </p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg=="><br>  <script type="text/javascript"><br>    (function(d, s) {<br>      var j, e = d.getElementsByTagName(s)[0];<br>      if (typeof LivereTower === 'function') { return; }<br>      j = d.createElement(s); j.src = '<a href="https://cdn-city.livere.com/js/embed.dist.js">https://cdn-city.livere.com/js/embed.dist.js</a>'; j.async = true;<br>      e.parentNode.insertBefore(j, e);<br>    })(document, 'script');<br>  </script><p></p></div>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 转载 </tag>
            
            <tag> 分享 </tag>
            
            <tag> 整合包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[本站使用]matery主题</title>
      <link href="/2024/05/31/%5B%E6%9C%AC%E7%AB%99%E4%BD%BF%E7%94%A8%5Dmatery%E4%B8%BB%E9%A2%98/"/>
      <url>/2024/05/31/%5B%E6%9C%AC%E7%AB%99%E4%BD%BF%E7%94%A8%5Dmatery%E4%B8%BB%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><a href="http://hits.dwyl.io/blinkfox/hexo-theme-matery"><img src="http://hits.dwyl.io/blinkfox/hexo-theme-matery.svg" alt="HitCount"></a> <a href="https://gitter.im/hexo-theme-matery/Lobby?utm_source=badge"><img src="https://img.shields.io/gitter/room/blinkfox/hexo-theme-matery.svg" alt="Gitter"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/issues"><img src="https://img.shields.io/github/issues/blinkfox/hexo-theme-matery.svg" alt="GitHub issues"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/LICENSE"><img src="https://img.shields.io/github/license/blinkfox/hexo-theme-matery.svg" alt="GitHub license"></a> <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master"><img src="https://img.shields.io/badge/downloads-master-green.svg" alt="Download"></a> <a href="http://hexo.io/"><img src="https://img.shields.io/badge/hexo-%3E%3D%205.0.0-blue.svg" alt="Hexo Version"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/network"><img src="https://img.shields.io/github/forks/blinkfox/hexo-theme-matery.svg" alt="GitHub forks"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/stargazers"><img src="https://img.shields.io/github/stars/blinkfox/hexo-theme-matery.svg" alt="GitHub stars"></a></p><p><a href="README.md">🇺🇸English Document</a> | <a href="http://blinkfox.com/">国内访问示例 (http://blinkfox.com)</a> | <a href="https://blinkfox.github.io/">Github 部署演示示例 (https://blinkfox.github.io)</a> </p><p>QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=5zMDYHT"><code>926552981</code></a> | QQ 交流群2（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=53q2Ayp"><code>971887688</code></a> | QQ 交流群3（推荐）: <a href="https://qm.qq.com/cgi-bin/qm/qr?k=fC1-kU-_aTn4q-JQq4GsYKr4WcKdgfGa&amp;jump_from=webapi"><code>670694035</code></a></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li>支持中文繁简转换</li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/blinkfox/hexo-theme-matery.git</span><br></pre></td></tr></tbody></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"categories"</span></span><br></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"tags"</span></span><br></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 18:23:38</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"about"</span></span><br></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"about"</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">"about"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"contact"</span></span><br></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">contact</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"contact"</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">"contact"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"friends"</span></span><br></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">friends</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-12-12 21:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"friends"</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">"friends"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"avatar"</span><span class="punctuation">:</span> <span class="string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"码酱"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"introduction"</span><span class="punctuation">:</span> <span class="string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"url"</span><span class="punctuation">:</span> <span class="string">"http://luokangyuan.com/"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"title"</span><span class="punctuation">:</span> <span class="string">"前去学习"</span></span><br><span class="line"><span class="punctuation">}</span><span class="punctuation">,</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"avatar"</span><span class="punctuation">:</span> <span class="string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"闪烁之狐"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"introduction"</span><span class="punctuation">:</span> <span class="string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"url"</span><span class="punctuation">:</span> <span class="string">"https://blinkfox.github.io/"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"title"</span><span class="punctuation">:</span> <span class="string">"前去学习"</span></span><br><span class="line"><span class="punctuation">}</span><span class="punctuation">,</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"avatar"</span><span class="punctuation">:</span> <span class="string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"ja_rome"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"introduction"</span><span class="punctuation">:</span> <span class="string">"平凡的脚步也可以走出伟大的行程"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"url"</span><span class="punctuation">:</span> <span class="string">"https://me.csdn.net/jlh912008548"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"title"</span><span class="punctuation">:</span> <span class="string">"前去学习"</span></span><br><span class="line"><span class="punctuation">}</span><span class="punctuation">]</span></span><br></pre></td></tr></tbody></table></figure><h3 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个。编辑你刚刚新建的页面文件 <code>/source/404.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="number">404</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"404"</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">"404"</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">"Oops～，我崩溃了！找不到你想要的页面 :("</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Index:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Tags:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/tags</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/categories</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-bookmark</span></span><br><span class="line">  <span class="attr">Archives:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/archives</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">About:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/about</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-user-circle</span></span><br><span class="line">  <span class="attr">Friends:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/friends</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-address-book</span></span><br></pre></td></tr></tbody></table></figure><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)     </li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.      </li><li>注意每个二级菜单模块前要加 <code>-</code>.     </li><li>注意缩进格式</li></ol><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Index:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Tags:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/tags</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/categories</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-bookmark</span></span><br><span class="line">  <span class="attr">Archives:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/archives</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">About:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/about</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-user-circle-o</span></span><br><span class="line">  <span class="attr">Friends:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/friends</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-address-book</span></span><br><span class="line">  <span class="attr">Medias:</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-list</span></span><br><span class="line">    <span class="attr">children:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Music</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/music</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Movies</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/movies</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-film</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Books</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/books</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-book</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Galleries</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/galleries</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-image</span></span><br></pre></td></tr></tbody></table></figure><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br></pre></td></tr></tbody></table></figure><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></tbody></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br></pre></td></tr></tbody></table></figure><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></tbody></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink_pinyin:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separator:</span> <span class="string">'-'</span> <span class="comment"># default: '-'</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></tbody></table></figure><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">postInfo:</span></span><br><span class="line">  <span class="attr">date:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">update:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">wordCount:</span> <span class="literal">false</span> <span class="comment"># 设置文章字数统计为 true.</span></span><br><span class="line">  <span class="attr">totalCount:</span> <span class="literal">false</span> <span class="comment"># 设置站点文章总字数统计为 true.</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">false</span> <span class="comment"># 阅读时长.</span></span><br><span class="line">  <span class="attr">readCount:</span> <span class="literal">false</span> <span class="comment"># 阅读次数.</span></span><br></pre></td></tr></tbody></table></figure><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></tbody></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">inject:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">customEmojis:</span></span><br></pre></td></tr></tbody></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></tbody></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">' '</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></tbody></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="添加中文繁简转换"><a href="#添加中文繁简转换" class="headerlink" title="添加中文繁简转换"></a>添加中文繁简转换</h3><p>在主题的 <code>_config.yml</code> 文件中，开启 translate 为 enable。</p><blockquote><p>开启中文繁简转换如下修改。默认不开启。<br>实例演示： <a href="https://blog.17lai.site/">繁简转换</a> 底下 footer 栏</p></blockquote><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">translate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.socialLink.github) { %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%= theme.socialLink.github %&gt;"</span> <span class="attr">class</span>=<span class="string">"tooltipped"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">data-tooltip</span>=<span class="string">"访问我的GitHub"</span> <span class="attr">data-position</span>=<span class="string">"top"</span> <span class="attr">data-delay</span>=<span class="string">"50"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fab fa-github"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&lt;% } %&gt;</span><br></pre></td></tr></tbody></table></figure><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否在首页显示音乐</span></span><br><span class="line"><span class="attr">music:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span>         <span class="comment"># 非吸底模式有效</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">show:</span> <span class="string">听听音乐</span></span><br><span class="line">  <span class="attr">server:</span> <span class="string">netease</span>   <span class="comment"># require music platform: netease, tencent, kugou, xiami, baidu</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">playlist</span>    <span class="comment"># require song, playlist, album, search, artist</span></span><br><span class="line">  <span class="attr">id:</span> <span class="number">503838841</span>     <span class="comment"># require song id / playlist id / album id / search keyword</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">false</span>      <span class="comment"># 开启吸底模式</span></span><br><span class="line">  <span class="attr">autoplay:</span> <span class="literal">false</span>   <span class="comment"># 是否自动播放</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">'#42b983'</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="string">'all'</span>       <span class="comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span></span><br><span class="line">  <span class="attr">order:</span> <span class="string">'random'</span>   <span class="comment"># 音频循环顺序, 可选值: 'list', 'random'</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="string">'auto'</span>   <span class="comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span></span><br><span class="line">  <span class="attr">volume:</span> <span class="number">0.7</span>       <span class="comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span></span><br><span class="line">  <span class="attr">listFolded:</span> <span class="literal">true</span>  <span class="comment"># 列表默认折叠</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h3 id="添加note"><a href="#添加note" class="headerlink" title="添加note"></a>添加note</h3><blockquote><p><a href="https://blog.17lai.site/posts/cf0f47fd/#tag-note">演示</a></p></blockquote><h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% note [class] [no-icon] [summary] %}</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">{% endnote %}</span><br></pre></td></tr></tbody></table></figure><ul><li><code>[class]</code> : <em>Optional parameter.</em> Supported values: default | primary | success | info | warning | danger.</li><li><code>[no-icon]</code> : <em>Optional parameter.</em> Disable icon in note.</li><li><code>[summary]</code> : <em>Optional parameter.</em> Optional summary of the note.</li></ul><p>All parameters are optional.</p><h4 id="example"><a href="#example" class="headerlink" title="example"></a>example</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">{% note %}</span><br><span class="line">#### Header</span><br><span class="line">(without define class style)</span><br><span class="line">{% endnote %}</span><br></pre></td></tr></tbody></table></figure><h3 id="添加button"><a href="#添加button" class="headerlink" title="添加button"></a>添加button</h3><blockquote><p><a href="https://blog.17lai.site/posts/cf0f47fd/#tag-button">演示</a></p></blockquote><h4 id="Usage-1"><a href="#Usage-1" class="headerlink" title="Usage"></a>Usage</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% button url, text, icon [class], [title] %}</span><br></pre></td></tr></tbody></table></figure><p>or</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% btn url, text, icon [class], [title] %}</span><br></pre></td></tr></tbody></table></figure><ul><li><code>url</code> : Absolute or relative path to URL.</li><li><code>text</code> : Button text. Required if no icon specified.</li><li><code>icon</code> : Font Awesome icon name. Required if no text specified.</li><li><code>[class]</code> : <em>Optional parameter.</em> Font Awesome class(es): <code>fa-fw</code> | <code>fa-lg</code> | <code>fa-2x</code> | <code>fa-3x</code> | <code>fa-4x</code> | <code>fa-5x</code></li><li><code>[title]</code> : <em>Optional parameter.</em> Tooltip at mouseover.</li></ul><h4 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% button #, Text %}</span><br></pre></td></tr></tbody></table></figure><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">typora-vue-theme主题介绍</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-07 09:25:00</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">typora-vue-theme主题介绍</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-07 09:25:00</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">赵奇</span></span><br><span class="line"><span class="attr">img:</span> <span class="string">/source/images/xxx.jpg</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">hide:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">cover:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">coverImg:</span> <span class="string">/images/1.jpg</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">summary:</span> <span class="string">这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Markdown</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Typora</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Markdown</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span></span><br><span class="line"><span class="selector-class">.bg-color</span> {</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right, <span class="number">#4cbf30</span> <span class="number">0%</span>, <span class="number">#0f9d58</span> <span class="number">100%</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> rainbow {</span><br><span class="line">   <span class="comment">/* 动态切换背景颜色. */</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> rainbow {</span><br><span class="line">    <span class="comment">/* 动态切换背景颜色. */</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.bg-cover'</span>).<span class="title function_">css</span>(<span class="string">'background-image'</span>, <span class="string">'url(/medias/banner/'</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getDay</span>() + <span class="string">'.jpg)'</span>);</span><br></pre></td></tr></tbody></table></figure><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本变更记录"><a href="#版本变更记录" class="headerlink" title="版本变更记录"></a>版本变更记录</h2><p>参见 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/CHANGELOG.md">CHANGELOG.md</a></p><h2 id="更多部署方式"><a href="#更多部署方式" class="headerlink" title="更多部署方式"></a>更多部署方式</h2><blockquote><p>Jsdelivr 已经被封了，这两个可以加速访问快一点</p></blockquote><h3 id="vercel-部署"><a href="#vercel-部署" class="headerlink" title="vercel 部署"></a><a href="https://blog.17lai.site/posts/5311b619/#vercel-%E9%83%A8%E7%BD%B2">vercel 部署</a></h3><h3 id="cloudflare-Pages-部署"><a href="#cloudflare-Pages-部署" class="headerlink" title="cloudflare Pages 部署"></a><a href="https://blog.17lai.site/posts/5311b619/#cloudflare-Pages-%E9%83%A8%E7%BD%B2">cloudflare Pages 部署</a></h3><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft 1.21：快照24w05a发布！解锁宝库，大量稀有战利品！</title>
      <link href="/2024/05/31/Minecraft%201.21%EF%BC%9A%E5%BF%AB%E7%85%A724w05a%E5%8F%91%E5%B8%83%EF%BC%81%E8%A7%A3%E9%94%81%E5%AE%9D%E5%BA%93%EF%BC%8C%E5%A4%A7%E9%87%8F%E7%A8%80%E6%9C%89%E6%88%98%E5%88%A9%E5%93%81%EF%BC%81/"/>
      <url>/2024/05/31/Minecraft%201.21%EF%BC%9A%E5%BF%AB%E7%85%A724w05a%E5%8F%91%E5%B8%83%EF%BC%81%E8%A7%A3%E9%94%81%E5%AE%9D%E5%BA%93%EF%BC%8C%E5%A4%A7%E9%87%8F%E7%A8%80%E6%9C%89%E6%88%98%E5%88%A9%E5%93%81%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p><img src="https://www.pixelbbs.cn/data/attachment/forum/202402/06/234206sgnp31hgnnrv4p5r.jpg"></p><span id="more"></span><p>提前预热了一周的Minecraft JAVA版快照24w05a，本周终于如约发布，并迎来了最新的特性“宝库”！一种可以给玩家带来大量战利品收入的东西。<br>###1.什么是宝库（Vault）？<br><img src="https://www.pixelbbs.cn/data/attachment/forum/202402/06/234207iibcixue4w11xs41.jpg"><br>宝库（Vault）在《我的世界》试炼大厅中既不是一个房间，也不是一个箱子。而是一种方块，可以用试炼钥匙打开并喷出大量战利品的方块。</p><p>特性一：生成；宝库目前只可以自然的生成在1.21试炼大厅的结构当中。只是将原本部分战利品箱直接替换成了宝库（真懒）。生存模式下玩家暂无法以物品的模式存在于玩家的背包和物品栏当中。</p><p>特性二：激活提示；当一个宝库可以被玩家激活时，玩家只要在接近宝库4格范围内，宝库会开始活动并开始喷出火焰粒子。同时宝库的亮度会增加，部分纹理变成橙色等等。玩家可以在激活的宝库中，看到其中旋转的战利品实体，并战利品是在不断变化的。<br><img src="https://www.pixelbbs.cn/data/attachment/forum/202402/06/234208gqdkhfjbdyb2wyhh.jpg"><br>特性三：解锁宝库；宝库能且只能被玩家手持试炼钥匙来解锁，并且只能对已经激活的宝库使用钥匙。每次解锁宝库，都会消耗掉一把钥匙。</p><p>特性四：已经被解锁的宝库，无法再次被解锁。但不同玩家可以每人都解锁一次同一个宝库。<br><img src="https://www.pixelbbs.cn/data/attachment/forum/202402/06/234209m9rxkl454s23472x.jpg"><br>特性五：同一个宝库记录解锁宝库的玩家数量是有上限的，目前上限为128未。也就是说，如果你在第一个顺位解锁了宝库，那么当第129位玩家解锁玩宝库后，你的名字会被放出来，可以再次解锁一次宝库。</p><p>特性六：宝库可以被挖掘，但目前还没有适用工具可以将宝库挖出成为一件物品。</p><p>##2.宝库的战利品有哪些？<br><img src="https://www.pixelbbs.cn/data/attachment/forum/202402/06/234209btn8tbfcw8zcnnng.jpg"><br>在目前快照24w05a中，宝库的战利品包括了：钻石、绿宝石、鞍、附魔书、钻石马铠、附魔钻石装备，附魔铁质装备等等。其中最稀有的应该还要数“附魔金苹果”，开出附魔金苹果的概率能达到10%。</p><p>就目前而言，宝库还没有专属的独立战利品。和普通的战利品箱子也没有什么特别的地方。但宝库出产稀有的战利品爆率还是非常高的！</p><p>多跑一些试炼大厅，或者是用切换本地用户等特殊方式来刷宝库，一组附魔金苹果指日可待啊！</p><p>##3.狼铠与马铠的未来更新？</p><p><img src="https://www.pixelbbs.cn/data/attachment/forum/202402/06/234210q98g2q2v77skt8e4.jpg"><br>在快照24w05a中，马铠和狼铠都添加了护甲值和盔甲韧性的提示信息。譬如说以钻石马铠为例，在物品界面中就可以看到马铠的护甲值为11，盔甲韧性为2。</p><p>这对于Minecraft来说，算是对宠物盔甲体系进行了一次实用性的升级，在更多盔甲体系的纵向发展中迈出了一大步！</p><h2 id="有没有一种可能，在未来的1-2-1版本中，玩家可以对马铠和狼铠进行更进一步的附魔升级，比如说给狼铠增加火焰抗性、水下呼吸等等？"><a href="#有没有一种可能，在未来的1-2-1版本中，玩家可以对马铠和狼铠进行更进一步的附魔升级，比如说给狼铠增加火焰抗性、水下呼吸等等？" class="headerlink" title="有没有一种可能，在未来的1. 2 1版本中，玩家可以对马铠和狼铠进行更进一步的附魔升级，比如说给狼铠增加火焰抗性、水下呼吸等等？"></a>有没有一种可能，在未来的1. 2 1版本中，玩家可以对马铠和狼铠进行更进一步的附魔升级，比如说给狼铠增加火焰抗性、水下呼吸等等？</h2><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 新闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 转载 </tag>
            
            <tag> 新闻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Github]hexo-theme-Snippet——简洁而不简单</title>
      <link href="/2024/05/31/Snippet%20%E7%AE%80%E6%B4%81%E8%80%8C%E4%B8%8D%E7%AE%80%E5%8D%95/"/>
      <url>/2024/05/31/Snippet%20%E7%AE%80%E6%B4%81%E8%80%8C%E4%B8%8D%E7%AE%80%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p>Snippet 简洁而不简单，也许是一款你寻找已久 hexo 主题。<br><a href="/download/Snippet主题/hexo-theme-snippet-master.zip" download="">打包下载本主题zip</a><br>如果本主题也是你喜欢的菜，请动动手指 <a href="https://github.com/shenliyang/hexo-theme-snippet/stargazers">Star</a> 支持一下</p><p><a href="https://travis-ci.com/shenliyang/hexo-theme-snippet"><img src="https://travis-ci.com/shenliyang/hexo-theme-snippet.svg?branch=develop" alt="Build Status"></a><br><a href="https://github.com/shenliyang/hexo-theme-snippet/blob/master/README.md"><img src="https://img.shields.io/badge/docs-complete-brightgreen" alt="Read the Docs"></a><br><a href="../../commits/master"><img src="https://img.shields.io/maintenance/yes/2030.svg" alt="mnt-image"></a><br><a href="https://codebeat.co/projects/github-com-shenliyang-hexo-theme-snippet-master"><img src="https://codebeat.co/badges/6ef2dcd2-af90-40e0-9628-ac689441f774" alt="codebeat badge"></a><br><a href="https://github.com/shenliyang/hexo-theme-snippet/stargazers"><img src="https://img.shields.io/github/stars/shenliyang/hexo-theme-snippet.svg" alt="GitHub stars"></a><br><a href="https://github.com/shenliyang/hexo-theme-snippet/network"><img src="https://img.shields.io/github/forks/shenliyang/hexo-theme-snippet.svg" alt="GitHub forks"></a><br><a href="http://hexo.io/"><img src="https://img.shields.io/badge/hexo-%3E%3D%203.0-blue.svg" alt="hexo version"></a><br><a href="https://github.com/shenliyang/hexo-theme-snippet/blob/master/LICENSE"><img src="https://img.shields.io/badge/license-MIT-blue.svg" alt="GitHub license"></a></p><p><a href="http://shenliyang.github.io/?rf=gh-demo">主题 Demo 戳这里</a></p><p><img src="https://hexo-theme-snippet-1251680922.cos.ap-beijing.myqcloud.com/img/snippet-screenshots1000.jpg" alt="hexo-theme-snippet" title="Snippet主题"></p><h2 id="主题特点"><a href="#主题特点" class="headerlink" title="主题特点"></a>主题特点</h2><ul><li><input checked="" disabled="" type="checkbox"> 原生 JavaScript 实现，去 jQuery 化</li><li><input checked="" disabled="" type="checkbox"> 样式支持 CSS 预处理器 Less，方便主题自定义</li><li><input checked="" disabled="" type="checkbox"> 文章过期提醒功能</li><li><input checked="" disabled="" type="checkbox"> 文章阅读进度条</li><li><input checked="" disabled="" type="checkbox"> 网站公告功能</li><li><input checked="" disabled="" type="checkbox"> 首页图片懒加载</li><li><input checked="" disabled="" type="checkbox"> 首页文章缩略图自动检索文章内图片，支持自动随机图片</li><li><input checked="" disabled="" type="checkbox"> 主题支持响应式</li><li><input checked="" disabled="" type="checkbox"> 支持 3D 云标签</li><li><input checked="" disabled="" type="checkbox"> 支持文章推送和文章打赏</li><li><input checked="" disabled="" type="checkbox"> 站内本地搜索和谷歌搜索</li><li><input checked="" disabled="" type="checkbox"> 支持多个第三方评论系统</li><li><input checked="" disabled="" type="checkbox"> 支持网站统计和不蒜子访客统计</li><li><input checked="" disabled="" type="checkbox"> 移动端的简洁设计</li><li><input checked="" disabled="" type="checkbox"> 支持代码高亮并支持自定义高亮样式</li><li><input checked="" disabled="" type="checkbox"> 支持 Shell 脚本通过 Travis CI 自动化部署 Hexo 博客</li><li><input checked="" disabled="" type="checkbox"> 支持 Hexo 自动化部署结果发送邮件和实时推送到钉钉</li></ul><h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a><strong>基础篇</strong></h1><blockquote><p>如果你在此之前使用的是 <code>Hexo 2.x</code> 版本，为了避免未知的错误，请备份好数据，或者建立新的博客目录</p></blockquote><blockquote><p>“主题目录” =&gt; <code>themes\hexo-theme-snippet</code>, “Hexo 根目录” =&gt; 项目主目录;<br>“主题配置” =&gt; <code>themes\hexo-theme-snippet\_config.yml</code>, “Hexo 配置” =&gt; 项目主目录下<code>_config.yml</code></p></blockquote><h3 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h3><p>需要<code>Node.js</code> 环境、<code>Git</code> 环境以及 <code>Hexo</code> ,如果你尚未安装或者不了解 <code>Hexo</code>，请参考 <a href="https://hexo.io/zh-cn/docs/index.html">官方教程</a> 进行了解以及安装。如果需要构建工具请自行安装，或使用本主题的 Gulp 方式。</p><h3 id="2-下载主题"><a href="#2-下载主题" class="headerlink" title="2. 下载主题"></a>2. 下载主题</h3><p>有两种方式获取本主题–下载 <code>*.zip</code> 文件和通过 <code>git</code>方式：</p><ol><li><p>下载 <a href="https://github.com/shenliyang/hexo-theme-snippet">Snippet 主题</a> 文件解压后放在 <code>themes</code> 目录下，和博客中的 landscape 为同级目录</p></li><li><p>Git 方式，在 Hexo 根目录执行：</p></li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/shenliyang/hexo-theme-snippet.git themes/hexo-theme-snippet</span><br></pre></td></tr></tbody></table></figure><h3 id="3-安装主题插件"><a href="#3-安装主题插件" class="headerlink" title="3. 安装主题插件"></a>3. 安装主题插件</h3><p>因为 <strong>hexo-theme-snippet</strong> 使用了 <code>ejs</code> 模版引擎 、 <code>Less</code> CSS 预编译语言以及在官方插件的基础上<br>进行功能的开发，以下为必装插件：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-ejs hexo-renderer-less hexo-deployer-git -S</span><br></pre></td></tr></tbody></table></figure><h3 id="4-部署主题"><a href="#4-部署主题" class="headerlink" title="4. 部署主题"></a>4. 部署主题</h3><blockquote><p>如果没有更改过主题源文件,也不需要代码优化可以跳过 1,2,3 步骤</p></blockquote><ol><li>gulp 打包构建，拷贝主题目录下<code>package.json</code>文件到 Hexo 根目录下，然后安装项目的开发依赖。 <a href="http://www.gulpjs.com.cn/docs/getting-started/">Gulp 入门指南</a></li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i   //安装项目依赖</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>在 Hexo 根目录下创建一个名为 gulpfile.js 的文件：</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require(<span class="string">'./themes/hexo-theme-snippet/gulpfile'</span>);</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>运行 gulp：</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp 或者 gulp default   //执行打包任务</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>清空 hexo 静态文件和缓存，并重新生成</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g  //清空缓存并生成静态文件</span><br></pre></td></tr></tbody></table></figure><ol start="5"><li>本地预览，确没有问题再进行发布</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p 4000 或者 hexo s  //启动本地服务默认</span><br></pre></td></tr></tbody></table></figure><ol start="6"><li>当 gulp 执行完成，并提示 <code>please execute： hexo d</code> 时，可以进行发布</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d 或者 gulp deploy  //部署发布</span><br></pre></td></tr></tbody></table></figure><h3 id="5-更新主题"><a href="#5-更新主题" class="headerlink" title="5. 更新主题"></a>5. 更新主题</h3><p>主题可能会不定时优化和更新，更新主题代码：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/hexo-theme-snippet</span><br><span class="line">git pull</span><br></pre></td></tr></tbody></table></figure><h1 id="主题篇"><a href="#主题篇" class="headerlink" title="主题篇"></a><strong>主题篇</strong></h1><h3 id="1-主题配置"><a href="#1-主题配置" class="headerlink" title="1. 主题配置"></a>1. 主题配置</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">## menu -- 导航菜单显示{[@page:名字,@url:地址,@icon:图标]}</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">home</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-home</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## favicon -- 网站图标位置{@favicon}</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## rss --rss文件位置{@rss}</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 各个小工具的设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## widgets -- 6个左边小工具{@widgets:[notification,category,archive,tagcloud,friends]}</span></span><br><span class="line"><span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">search</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">notification</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">social</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">category</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tagcloud</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">friends</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 各个小工具的设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 搜索</span></span><br><span class="line"><span class="attr">jsonContent:</span></span><br><span class="line">  <span class="attr">searchLocal:</span> <span class="literal">true</span> <span class="string">//</span> <span class="string">是否启用本地搜索</span></span><br><span class="line">  <span class="attr">searchGoogle:</span> <span class="literal">true</span> <span class="string">//是否启用谷歌搜索</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">text:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## notification config --网站公告设置,支持 html 和 纯文本</span></span><br><span class="line"><span class="attr">notification:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">            &lt;p&gt;主题已经上线！欢迎下载或更新~ &lt;br/&gt;</span></span><br><span class="line"><span class="string">            主题下载：&lt;a href="https://github.com/shenliyang/hexo-theme-snippet" title="fork me" target="_blank"&gt;Snippet主题&lt;/a&gt; &lt;br/&gt;</span></span><br><span class="line"><span class="string">            &lt;hr/&gt;接受贡献，包括不限于提交问题与需求，修复代码。欢迎Pull Request&lt;br/&gt;支持主题：&lt;a href="https://github.com/shenliyang/hexo-theme-snippet/stargazers"&gt;Star一下&lt;/a&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="comment">## 社交设置{@name:社交工具名字，@icon:社交工具图标，@href:设置工具链接} [参考图标](http://fontawesome.io/icons/)</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Github</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">href:</span> <span class="string">//github.com/shenliyang</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 文章分类设置{@cate_config:{@show_count:是否显示数字，@show_current: 是否高亮当前category}}</span></span><br><span class="line"><span class="attr">cate_config:</span></span><br><span class="line">   <span class="attr">show_count:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">show_current:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 文章归档设置{@arch_config:/*参数参考：https://hexo.io/zh-cn/docs/helpers.html#list-archives*/}</span></span><br><span class="line"><span class="comment">## 推荐组合方式：[{type: 'monthly',format: 'YYYY年MM月'},{type: 'yearly',format: 'YYYY年'}]</span></span><br><span class="line"><span class="attr">arch_config:</span></span><br><span class="line">   <span class="attr">type:</span> <span class="string">'monthly'</span></span><br><span class="line">   <span class="attr">format:</span> <span class="string">'YYYY年MM月'</span></span><br><span class="line">   <span class="attr">show_count:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">order:</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 标签云设置{/*参数参考：http://www.goat1000.com/tagcanvas-options.php */}</span></span><br><span class="line"><span class="attr">tagcloud:</span></span><br><span class="line">  <span class="attr">tag3d:</span> <span class="literal">false</span> <span class="string">//</span> <span class="string">是否启用3D标签云</span></span><br><span class="line">  <span class="attr">textColour:</span> <span class="string">'#444'</span> <span class="string">//</span> <span class="string">字体颜色</span></span><br><span class="line">  <span class="attr">outlineMethod:</span> <span class="string">'block'</span> <span class="string">//</span> <span class="string">选中模式(outline|classic|block|colour|size|none)</span></span><br><span class="line">  <span class="attr">outlineColour:</span> <span class="string">'#FFDAB9'</span> <span class="string">//</span> <span class="string">选中模式的颜色</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">30</span> <span class="string">//</span> <span class="string">动画帧之间的时间间隔，值越大，转动幅度越大</span></span><br><span class="line">  <span class="attr">freezeActive:</span> <span class="literal">true</span> <span class="string">//</span> <span class="string">选中的标签是否继续滚动</span></span><br><span class="line">  <span class="attr">frontSelect:</span> <span class="literal">true</span> <span class="string">//</span> <span class="string">不选标签云后部的标签</span></span><br><span class="line">  <span class="attr">reverse:</span> <span class="literal">true</span> <span class="string">//</span> <span class="string">是否反向触发</span></span><br><span class="line">  <span class="attr">wheelZoom:</span> <span class="literal">false</span> <span class="string">//</span> <span class="string">是否启用鼠标滚轮</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 友链设置{@链接名称：链接地址{@links:[,,,]}}</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Hexo官网:</span> <span class="string">https://hexo.io/zh-cn/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主题自定义个性化配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 网站宣传语{@branding：网站宣传语(不设置显示本地图片)}</span></span><br><span class="line"><span class="attr">branding:</span> <span class="string">从未如此简单有趣</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 设置banner背景图片{@img:自定义图片地址(支持绝对和相对路径),主题默认{"静态背景":"banner.jpg"},{"动态背景":"banner2.jpg"},{"动态星空背景":"banner3.jpg"}}</span></span><br><span class="line"><span class="comment">## 例如：https://hexo-theme-snippet-1251680922.cos.ap-beijing.myqcloud.com/img/banner|2|3.jpg, 或者 './img/banner-img.jpg'(相对本地资源地址)</span></span><br><span class="line"><span class="attr">banner:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">https://hexo-theme-snippet-1251680922.cos.ap-beijing.myqcloud.com/img/banner.jpg</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 设置carousel{@img:图片地址,@url:点击跳转链接(默认值:"javascript:")}</span></span><br><span class="line"><span class="attr">carousel:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">'img/head-img.jpg'</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">'javascript:'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 首页列表底部面板{@homePanel: 是否开启}</span></span><br><span class="line"><span class="attr">homePanel:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 首页文章列表缩略图</span></span><br><span class="line"><span class="comment">### 加载规则: 自定义文章缩略图(在Front-matter中添加的'img'字段) &gt; 文章内的图片 &gt; defaultImgs(随机获取) &gt; 无图模式列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 自定义随机图片</span></span><br><span class="line"><span class="attr">defaultImgs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">http://www.example.jpg</span> <span class="string">//远程图片链接示例</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/img/default-1.jpg</span> <span class="string">//本地图片链接示例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 文章摘要{@摘要显示优先级：自定义摘要 &gt; 自动截取摘要 }</span></span><br><span class="line"><span class="comment">### 自定义摘要范围{@&lt;!--more--&gt;:截取more之前的内容为摘要}</span></span><br><span class="line"><span class="comment">### 自动截取摘要{@excerptLength:自动截取文章前多少个字为摘要，不配置默认：120字}</span></span><br><span class="line"><span class="attr">excerptLength:</span> <span class="number">120</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 是否开启文章目录</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 代码高亮配置{@highlightTheme: 主题名称,(配置暂时不可用，后续开发中…)}</span></span><br><span class="line"></span><br><span class="line"><span class="attr">highlightTheme:</span> <span class="string">default</span> <span class="string">//TODO</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 文章过期提醒功能 {@warning:{days:临界天数(默认300天,设置0关闭功能),text:提醒文字/*%d为过期总天数占位符*/}}</span></span><br><span class="line"><span class="attr">warning:</span></span><br><span class="line">  <span class="attr">days:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">'本文于%d天之前发表，文中内容可能已经过时。'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 文章内声明{@declaration: {enable:是否开启,title:声明标题,tip:提示内容}}</span></span><br><span class="line"><span class="attr">declaration:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">'转载声明'</span></span><br><span class="line">  <span class="attr">tip:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">      商业转载请联系作者获得授权,非商业转载请注明出处 © &lt;a href="" target="_blank"&gt;Snippet&lt;/a&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="comment">## 文章打赏{@reward: {alipay:支付宝打赏,wepay:微信打赏,tip:打赏提示语; 链接都为空,关闭打赏功能}}</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">wepay:</span> <span class="string">'../img/reward-wepay.jpg'</span></span><br><span class="line">  <span class="attr">tip:</span> <span class="string">赞赏是不耍流氓的鼓励</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 主题评论</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## utterances评论: 一款基于 GitHub issues 的评论工具; 首先在 github 上进行安装 utterances，访问 [utterances应用程序](https://github.com/apps/utterances)；然后在主题内配置 [utterances更多配置](https://utteranc.es/)</span></span><br><span class="line"><span class="attr">utterances:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">shenliyang/snippet-comment</span> <span class="string">//</span> <span class="string">github仓库名字,</span> <span class="string">格式为</span> <span class="string">user-name/repo-name</span></span><br><span class="line">  <span class="attr">issueTerm:</span> <span class="string">pathname</span> <span class="string">//</span> <span class="string">标识issue类型</span> <span class="number">1</span><span class="string">.</span> <span class="string">pathname(推荐);</span> <span class="number">2</span><span class="string">.</span> <span class="string">url;</span> <span class="number">3.</span><span class="string">title;</span> <span class="number">3</span><span class="string">.</span> <span class="string">og:title;</span> <span class="number">4</span><span class="string">.</span> <span class="string">issue-number</span> <span class="number">5</span><span class="string">.</span> <span class="string">specific-term;</span></span><br><span class="line">  <span class="attr">issueNumber:</span> <span class="number">123</span> <span class="string">//</span> <span class="string">非必填，当配置</span> <span class="string">issueTerm</span> <span class="string">=</span> <span class="string">"issue-number"</span><span class="string">时，需要配置issue号</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">github-light</span> <span class="string">//</span> <span class="string">主题配置</span> <span class="number">1</span><span class="string">.</span> <span class="string">github-light(推荐);</span> <span class="number">2</span><span class="string">.</span> <span class="string">github-dark;</span> <span class="number">3</span><span class="string">.</span> <span class="string">preferred-color-scheme;</span>&nbsp;<span class="number">4</span><span class="string">.</span> <span class="string">github-dark-orange;</span> <span class="number">5</span><span class="string">.</span> <span class="string">icy-dark;</span> <span class="number">6</span><span class="string">.</span> <span class="string">dark-blue;</span> <span class="number">7</span><span class="string">.</span> <span class="string">photon-dark;</span> <span class="number">8</span><span class="string">.</span> <span class="string">boxy-light</span></span><br><span class="line">  <span class="attr">label:</span> <span class="string">//</span> <span class="string">非必填</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">//</span> <span class="string">使用自定义utteranc脚本加载。</span> <span class="string">非必填，默认："https://utteranc.es/client.js"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### gitment</span></span><br><span class="line"><span class="attr">gitment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">  <span class="attr">client_id:</span></span><br><span class="line">  <span class="attr">client_secret:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">  <span class="attr">perPage:</span></span><br><span class="line">  <span class="attr">maxCommentHeight:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 来必力</span></span><br><span class="line"><span class="attr">livere:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">livere_uid:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 友言评论(服务不稳定，经常无法加载)</span></span><br><span class="line"><span class="attr">uyan:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">uyan_id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Disqus评论(需要翻墙，或者搭建代理)</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="string">snippet</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 畅言评论(需要ICP备案)</span></span><br><span class="line"><span class="attr">changyan:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">appid:</span></span><br><span class="line">  <span class="attr">conf:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Valine评论(leancloud需要实名认证) 参考网站: [valine评论](https://valine.js.org/)</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">appId:</span></span><br><span class="line">  <span class="attr">appKey:</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">说点什么吧</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="string">//</span> <span class="string">邮件通知</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="string">//</span> <span class="string">验证码</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="string">//</span> <span class="string">avatar头像</span></span><br><span class="line">  <span class="attr">meta:</span> <span class="string">nick,mail</span> <span class="string">//</span> <span class="string">输入框内容，可选值nick,mail,link</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Gitalk评论 参考网站: [一个基于Github Issue和Preact开发的评论插件](https://gitalk.github.io/)</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">   <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">   <span class="attr">clientID:</span> <span class="string">""</span> <span class="string">//</span> <span class="string">Github</span> <span class="string">应用ID</span></span><br><span class="line">   <span class="attr">clientSecret:</span> <span class="string">""</span> <span class="string">//</span> <span class="string">Github</span> <span class="string">应用密钥</span></span><br><span class="line">   <span class="attr">repo:</span> <span class="string">shenliyang.github.io</span> <span class="string">//</span> <span class="string">Github仓库地址</span></span><br><span class="line">   <span class="attr">owner:</span> <span class="string">shenliyang</span>  <span class="string">//</span> <span class="string">Github</span> <span class="string">用户名(Github仓库拥有者)</span></span><br><span class="line">   <span class="attr">admin:</span> <span class="string">shenliyang</span> <span class="string">//</span> <span class="string">GitHub</span> <span class="string">repository</span> <span class="string">的所有者和合作者</span> <span class="string">(对这个</span> <span class="string">repository</span> <span class="string">有写权限的用户)可以有一个或多个，如果有多名可使用，例如：admin:</span> <span class="string">admin1,admin2</span> <span class="string">配置</span></span><br><span class="line">   <span class="attr">perPage:</span> <span class="number">10</span> <span class="string">//</span> <span class="string">每次加载的数据大小，最多100</span></span><br><span class="line">   <span class="attr">distractionFreeMode:</span> <span class="literal">true</span> <span class="string">//</span> <span class="string">是否启用无干扰模式，类似Facebook评论框的全屏遮罩效果</span></span><br><span class="line"></span><br><span class="line">   <span class="string">//</span> <span class="string">以下参数主题会默认处理，不需要配置</span></span><br><span class="line">   <span class="string">language</span> <span class="string">//</span> <span class="string">语言类型，默认为站点配置中选项</span></span><br><span class="line">   <span class="string">id</span> <span class="string">//</span> <span class="string">页面的唯一标识,</span> <span class="string">已使用md5对pathname转换生成唯一id处理</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 网站访客统计 [不蒜子统计](http://busuanzi.ibruce.info/)</span></span><br><span class="line"><span class="attr">visit_counter:</span></span><br><span class="line">   <span class="attr">site:</span> <span class="literal">true</span> <span class="string">//</span> <span class="string">总访问量和访问人数统计</span></span><br><span class="line">   <span class="attr">page:</span> <span class="literal">true</span> <span class="string">//</span> <span class="string">文章阅读量统计</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 网站访问统计</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 网盟CNZZ统计 参考网站: [网盟CNZZ](http://www.umeng.com/)</span></span><br><span class="line"><span class="attr">cnzz_anaylytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 百度统计 参考网站: [百度统计](https://tongji.baidu.com/)</span></span><br><span class="line"><span class="attr">baidu_anaylytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 谷歌统计 参考网站：[谷歌统计](https://www.google-analytics.com/)</span></span><br><span class="line"><span class="attr">google_anaylytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 腾讯分析 参考网站：[腾讯分析](http://ta.qq.com/)</span></span><br><span class="line"><span class="attr">tencent_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 百度站点认证</span></span><br><span class="line"><span class="attr">baidu-site-verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 百度自动推送(@baidu_push: 是否启用百度自动推送)  参考网站: [百度站长资源](https://ziyuan.baidu.com/college/courseinfo?id=267&amp;page=2#h2_article_title18)</span></span><br><span class="line"><span class="attr">baidu_push:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## ICON配置 (不配则启用本地Font Icon)</span></span><br><span class="line"><span class="attr">fontAwesome:</span> <span class="string">//cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.min.css</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 网站主题配置</span></span><br><span class="line"><span class="attr">since:</span> <span class="number">2017</span>  <span class="string">//建站时间</span></span><br><span class="line"><span class="attr">beian:</span> <span class="string">'京ICP备04000001号'</span> <span class="string">//网站备案号</span></span><br><span class="line"><span class="attr">robot:</span> <span class="string">'all'</span>  <span class="string">//控制搜索引擎的抓取和索引编制行为，默认为all</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">1.3</span><span class="number">.0</span>  <span class="string">//当前主题版本号</span></span><br></pre></td></tr></tbody></table></figure><h3 id="主题使用技巧及功能扩展"><a href="#主题使用技巧及功能扩展" class="headerlink" title="主题使用技巧及功能扩展"></a>主题使用技巧及功能扩展</h3><ol><li>修改新增文章 Front-matter 模板,修改<code>scaffolds</code>目录下的<code>post.md</code>模板<blockquote><p>模板文件内部不要保留注释部分,关键词后面请使用英文冒号</p></blockquote></li></ol><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> {{ <span class="string">title</span> }} <span class="string">//</span> <span class="string">标题</span></span><br><span class="line"><span class="attr">date:</span> {{ <span class="string">date</span> }}   <span class="string">//</span> <span class="string">时间</span></span><br><span class="line"><span class="attr">categories:</span> [<span class="string">'分类1'</span>,<span class="string">'分类2'</span>] <span class="string">//</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">'标签1'</span>,<span class="string">'标签2'</span>]       <span class="string">//</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span>    <span class="string">//</span> <span class="string">是否开启评论</span></span><br><span class="line"><span class="attr">img:</span>               <span class="string">//</span> <span class="string">自定义缩略图</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>启用站内本地搜索功能</li></ol><p>如果要使用本地站点搜索，必须安装插件 hexo-generator-json-content 来创建本地搜索 json 文件</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-generator-json-content@2.2.0 -S</span><br></pre></td></tr></tbody></table></figure><p>然后修改主题配置_config.yml 文件下<code>jsonContent</code>相关参数。</p><h1 id="提升篇"><a href="#提升篇" class="headerlink" title="提升篇"></a><strong>提升篇</strong></h1><h2 id="1-Travis-CI-介绍"><a href="#1-Travis-CI-介绍" class="headerlink" title="1. Travis CI 介绍"></a>1. Travis CI 介绍</h2><p>CI 即持续集成系统。对个人而言，就是让你的代码在提交到远程(这里是 GitHub)，立即自动编译，自动化测试、自动部署等。</p><p>不需要在担心更换电脑时，还要从新部署环境的问题，只要你能向远程推送文章，其他的事情就都可以交给 Travis CI 处理就 ok 了。</p><h2 id="2-Travis-CI-使用"><a href="#2-Travis-CI-使用" class="headerlink" title="2. Travis CI 使用"></a>2. Travis CI 使用</h2><blockquote><p>默认前提是已经通过 Github 进行授权登录 Travis 网站，并关联了 GitHub 上的仓库和相关配置。</p></blockquote><ol><li><p>拷贝主题下的<code>gulpfile.js</code> <code>travis.yml</code> <code>travis.sh</code> 到项目根目录</p></li><li><p>配置 travis.yml 文件</p></li></ol><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">node_js</span> <span class="comment">#使用Node语言环境</span></span><br><span class="line"><span class="attr">node_js:</span> <span class="string">stable</span> <span class="comment">#安装稳定版Node</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sudo:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#cache 启用缓存，加快构建速度</span></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="attr">directories:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"node_modules"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">notifications:</span> <span class="comment">#启用通知</span></span><br><span class="line">  <span class="attr">email:</span></span><br><span class="line">    <span class="attr">recipients:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">snippet@aliyun.com</span> <span class="comment">#接收构建消息的邮件 不需要可设置为false</span></span><br><span class="line">    <span class="attr">on_success:</span> <span class="string">never</span> <span class="comment">#部署成功时，可设置alway never change</span></span><br><span class="line">    <span class="attr">on_failure:</span> <span class="string">always</span> <span class="comment">#部署失败时，同上</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># S: Build Lifecycle</span></span><br><span class="line"></span><br><span class="line"><span class="attr">before_install:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sudo</span> <span class="string">apt-get</span> <span class="string">install</span> <span class="string">libnotify-bin</span> <span class="comment">#支持linux桌面提醒库</span></span><br><span class="line"></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="comment">#安装依赖</span></span><br><span class="line"></span><br><span class="line"><span class="attr">before_script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">export</span> <span class="string">TZ='Asia/Shanghai'</span> <span class="comment">#设置时区</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">gulp</span> <span class="comment">#全局安装Gulp</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">chmod</span> <span class="string">+x</span> <span class="string">_travis.sh</span> <span class="comment">#授权脚本执行权限</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">g</span> <span class="comment">#清除缓存并生成静态文件</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">gulp</span> <span class="comment">#执行gulp任务</span></span><br><span class="line"></span><br><span class="line"><span class="attr">after_success:</span> <span class="comment">#执行成功时(以后扩展功能使用)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">after_script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">./_travis.sh</span> <span class="comment">#执行部署脚本</span></span><br><span class="line"><span class="comment"># E: Build LifeCycle</span></span><br><span class="line"></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dev</span> <span class="comment">#需要监听部署的分支</span></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">GH_REF:</span> <span class="string">github.com/shenliyang/shenliyang.github.io.git</span> <span class="comment">#更改为自己git地址</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>提交代码到 Github，实现自动部署</li><li>当 <code>.travis.yml </code>配置文件修改完成后，将其提交到远程仓库的 hexo 分支下，此时如果之前的配置一切 ok，我们应该能在 Travis CI 的博客项目主页页面中看到自动构建已经在开始执行了。上面会显示出构建过程中的日志信息及状态等。</li></ol><h2 id="3-主题开发"><a href="#3-主题开发" class="headerlink" title="3. 主题开发"></a>3. 主题开发</h2><p>Gulp 执行启用主题开发模式</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp dev</span><br></pre></td></tr></tbody></table></figure><p>会监听样式 less 或者 JS 文件的变动。然后执行上面的【主题发布】即可。</p><h3 id="运行预览"><a href="#运行预览" class="headerlink" title="运行预览"></a>运行预览</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s -p 4000</span><br></pre></td></tr></tbody></table></figure><p>监听 4000 端口，使用浏览器打开地址<code>http://localhost:4000</code>进行预览。</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a><strong>其他</strong></h1><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>在设计这款主题的时候参考了好多主题和博客的设计和创意，深表感谢！</p><h2 id="鼓励"><a href="#鼓励" class="headerlink" title="鼓励"></a>鼓励</h2><p><strong>如果觉得本主题还不错，您的支持和鼓励才是后续更新最大的动力，== 欢迎 <a href="https://github.com/shenliyang/hexo-theme-snippet/stargazers">Star</a>下 ==</strong></p><p><img src="https://starchart.cc/shenliyang/hexo-theme-snippet.svg" alt="Stargazers over time"></p><h2 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h2><p>主题宗旨：<strong>致力主题简洁轻量，配置方便开箱即用</strong>，该主题项目会持续维护和更新。</p><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2><p>接受各种形式的贡献，包括但不限于提交问题或需求，修复代码。<br>欢迎大家提 Issue 或者 Pull Request。</p><blockquote><p>Hexo 框架追求的是快速、简洁，高效。喜欢绚丽，添加各种功能，折腾的朋友，建议移步至：<a href="https://cn.wordpress.org/">wordpress 官网</a></p></blockquote><h2 id="你不知道的提-Issues-技巧"><a href="#你不知道的提-Issues-技巧" class="headerlink" title="你不知道的提 Issues 技巧"></a>你不知道的提 Issues 技巧</h2><blockquote><p>强烈推荐阅读 <a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way">《提问的智慧》</a>、<a href="https://github.com/seajs/seajs/issues/545">《如何向开源社区提问题》</a> 和 <a href="http://www.chiark.greenend.org.uk/%7Esgtatham/bugs-cn.html">《如何有效地报告 Bug》</a>、<a href="https://zhuanlan.zhihu.com/p/25795393">《如何向开源项目提交无法解答的问题》</a>，更好的问题更容易获得帮助。</p></blockquote><p><b>* 已阅读以上文章，并知晓，可以 </b> <a href="https://github.com/shenliyang/hexo-theme-snippet/issues/new">提 Issues</a> 了。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h4 id="1-搜索功能不能用，content-json-文件找不到？"><a href="#1-搜索功能不能用，content-json-文件找不到？" class="headerlink" title="1. 搜索功能不能用，content.json 文件找不到？"></a>1. 搜索功能不能用，content.json 文件找不到？</h4><p>需要安装 hexo-generator-json-content 插件：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-generator-json-content@2.2.0 -S</span><br></pre></td></tr></tbody></table></figure><h4 id="2-谷歌搜索没有响应？"><a href="#2-谷歌搜索没有响应？" class="headerlink" title="2. 谷歌搜索没有响应？"></a>2. 谷歌搜索没有响应？</h4><p>如果使用谷歌搜索没有响应，确定是否已经科学上网</p><h4 id="3-怎么设置首页文章缩略图自动检索文章内图片？"><a href="#3-怎么设置首页文章缩略图自动检索文章内图片？" class="headerlink" title="3. 怎么设置首页文章缩略图自动检索文章内图片？"></a>3. 怎么设置首页文章缩略图自动检索文章内图片？</h4><p>首页文章缩略图加载规则: 自定义文章缩略图 &gt; 自动检索文章内的图片 &gt; defaultImgs(随机获取) &gt; 无图模式列表</p><p>在<code>Front-matter</code>中：<br>指定 img 变量 -&gt; 为固定缩略图<br>不指定 img 变量 -&gt; 自动检索文章内的图片</p><h4 id="4-在-url-哪里可以访问到本地静态文件吗？"><a href="#4-在-url-哪里可以访问到本地静态文件吗？" class="headerlink" title="4. 在 url 哪里可以访问到本地静态文件吗？"></a>4. 在 url 哪里可以访问到本地静态文件吗？</h4><p>在主题 <code>source</code> 目录下新建文件夹，例如: <code>static</code>文件夹，然后添加静态资源，例如: xxx.pdf 文件， 访问：_<code>http://yoursite.com/static/xxx.pdf</code>_</p><h4 id="5-这个主题有分页功能吗？"><a href="#5-这个主题有分页功能吗？" class="headerlink" title="5. 这个主题有分页功能吗？"></a>5. 这个主题有分页功能吗？</h4><p>主题已经集成分页功能，在 Hexo 配置中修改</p><table><thead><tr><th>参数</th><th align="center">描述</th><th align="center">默认值</th></tr></thead><tbody><tr><td>per_page</td><td align="center">每页显示的文章量 (0 = 关闭分页功能)</td><td align="center">10</td></tr><tr><td>pagination_dir</td><td align="center">分页目录</td><td align="center">page</td></tr></tbody></table><h4 id="6-为什么右侧小工具标题都为英文呢？"><a href="#6-为什么右侧小工具标题都为英文呢？" class="headerlink" title="6. 为什么右侧小工具标题都为英文呢？"></a>6. 为什么右侧小工具标题都为英文呢？</h4><p>可能是您忘记预设网站语言，而启用默认语言了，请先在 Hexo 配置中调整 language 设定</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></tbody></table></figure><h4 id="7-关于-Hexo-标签和分类方法的分歧"><a href="#7-关于-Hexo-标签和分类方法的分歧" class="headerlink" title="7. 关于 Hexo 标签和分类方法的分歧"></a>7. 关于 Hexo 标签和分类方法的分歧</h4><blockquote><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p></blockquote><p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">- Life</span><br></pre></td></tr></tbody></table></figure><p>会使分类 Life 成为 Diary 的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p><p>Hexo 官方文档: <a href="https://hexo.io/zh-cn/docs/front-matter#%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE">分类方法的分歧</a></p><h4 id="8-tags-以及-categories-页面显示不正确，不能访问，显示-404？"><a href="#8-tags-以及-categories-页面显示不正确，不能访问，显示-404？" class="headerlink" title="8. tags 以及 categories 页面显示不正确，不能访问，显示 404？"></a>8. tags 以及 categories 页面显示不正确，不能访问，显示 404？</h4><p>当使用主题访问，域名+/tags 或 域名+ /categories 若访问 404，是正常情况的。因为这些路径本不属于主题或者 Hexo 框架的一部分。而是由用户主动新建页面扩展而来。</p><p>可以新建页面，比如：tags 和 categories，按以下命令格式：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags 和 hexo new page categories</span><br></pre></td></tr></tbody></table></figure><p>当使用主题访问，域名+/tags 或 域名+ /categories 若访问 404，是正常情况的。因为这些路径本不属于主题或者 Hexo 框架的一部分。而是由用户主动新建页面扩展而来。</p><p>可以新建页面，比如：tags 和 categories，按以下命令格式：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags 和 hexo new page categories</span><br></pre></td></tr></tbody></table></figure><blockquote><p>没有找到你需要的问题解决方案，建议阅读<a href="https://github.com/shenliyang/hexo-theme-snippet#%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E6%8F%90Issues%E6%8A%80%E5%B7%A7">《你不知道的提 Issues 技巧》</a> 再提 Issues。</p></blockquote><h2 id="版本更新日志"><a href="#版本更新日志" class="headerlink" title="版本更新日志"></a>版本更新日志</h2><ul><li>增加 Gitalk 评论系统</li><li>增加博客自动化部署结果实时推送到手机钉钉上，第一时间了解部署情况</li></ul><p>自动化部署结果通知示例：</p><p><img src="https://s2.ax1x.com/2019/03/06/kvnejs.jpg" alt="自动化部署结果通知示例"></p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a href="/LICENSE">MIT License</a></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Myserver]率真阿婆主修仙服</title>
      <link href="/2024/05/31/%5BMyserver%5D%E7%8E%87%E7%9C%9F%E9%98%BF%E5%A9%86%E4%B8%BB%E4%BF%AE%E4%BB%99%E6%9C%8D/"/>
      <url>/2024/05/31/%5BMyserver%5D%E7%8E%87%E7%9C%9F%E9%98%BF%E5%A9%86%E4%B8%BB%E4%BF%AE%E4%BB%99%E6%9C%8D/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.pixelbbs.cn/LightPicture/2024/05/57172531612f8f3d.png"></p><span id="more"></span><p>服务器开在网易<br>qq裙:873918956<br>类似仙居，胜于仙居</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 宣传 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Paper 团队：WaterFall 正式停止支持</title>
      <link href="/2024/05/31/t-3176-1-1/"/>
      <url>/2024/05/31/t-3176-1-1/</url>
      
        <content type="html"><![CDATA[<p>你们很多人可能已经注意到，Waterfall 在这些年间并未受到团队的支持与社区的贡献。我们也在 Discord 上注意到有关话题的讨论日渐减少。与此同时，Mojang 正在对游戏的核心引擎作出大更改，使得游戏内部的机制发生了巨大变化。这些改动非常受欢迎，我们也为其推行数年之久，这也意味着我们必须对项目做出一些适当的改变。</p><p>维护 Waterfall 已是心有余而力不足，我们想要将余力放在 Paper 和 Velocity 上。我们也不习惯维护一个久经测试却已步入暮年的项目。</p><p>这就是我们公开宣告 Waterfall 结束支持的原因。</p><p>从今天开始，标红的大横幅将会显示在 Waterfall 的文档页面上。它们会将读者引导至本帖并告知用户所发生的事。</p><p>除此之外，不会有别的改动。所有文档仍然可以阅读，你仍然可以正常下载先前所有版本的 Waterfall。</p><p>会发生变化的是，你会见到更多更零碎的改动。你也不应指望着我们更新到更高的版本，虽然不排除我们会在未来这么干。</p><p>试试我们的</p><p>！前人为 Waterfall 所作贡献均已置入 Velocity，这是一个全新的群组服核心，从头开始，专于性能，优于稳定，而强于安全。你可以在</p><p>中详细阅读如何着手使用 Velocity。</p><p>你可以在</p><p>找到与 Velocity 兼容的插件。</p><p>若你在迁移至 Velocity 时碰到了什么问题，请大胆向我们的</p><p>提出询问，我们很乐意帮你一把！</p><p>除此之外，若对本公告也有疑问的话，也可以加入我们的 Discord 群组询问。</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 新闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 新闻 </tag>
            
            <tag> paper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>插件 - DLevelEventPlus - 一款实用且便捷的GUI菜单世界管理插件</title>
      <link href="/2024/05/31/dleveleventplus-gui.2444/"/>
      <url>/2024/05/31/dleveleventplus-gui.2444/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>DLevelEventPlus -一款实用的世界GUI菜单世界管理插件​</p><p><strong>Github: <a href="https://github.com/glorydark/DLevelEventPlus">点我前往</a><br>插件交流群: <a href="https://jq.qq.com/?_wv=1027&amp;k=VPkouLV4">点我加入群聊</a> (有问题建议群内留言)</strong> ​**English Version Translated on my own (英文版 | 版本非最新)</p><p>DLevelEventPlus Github: Click here Descriptions Welcome you to use this plugin. This plugin is useful to manage your world and is still being developed! Supported Event TNT explode、pvp、whitelist、fall damage、use command、chest open、farm protect…</p><p>cloudburstmc.org<br>** ​</p><h2 id="插件介绍​"><a href="#插件介绍​" class="headerlink" title="插件介绍​"></a>插件介绍​</h2><p>欢迎您使用本插件，本插件的主意是由【果先生】提出的主意，本插件会不断完善哈！<br><strong>支持事件:</strong></p><p>爆炸事件、PVP、世界白名单、掉落伤害、是否可以使用指令、设置特定可打开箱子、设置是否可以用钓鱼竿、设置是否可以用打火石、耕地踩踏保护、展示框保护等配置项，共40+项（具体见配置文件）。</p><p><strong>注意：</strong></p><p>DLevelEventPlus-PNX文件夹为错误生成的文件夹，该问题可能从1.1.9就有了，现已将文件夹名改回DLevelEventPlus，请各位删除（建议先把配置备份一下哦）。</p><h2 id="使用方法​"><a href="#使用方法​" class="headerlink" title="使用方法​"></a>使用方法​</h2><p>各位打开服务器的后台可以看到<br>“plugins”</p><p>这个文件夹。只需要直接将此插件放在<br>“plugins”</p><p>文件夹里面，然后<br>启动/重启服务器</p><p>就可以放心使用了。更多内容可以在后台修改对应的配置文件哦！</p><p>如果您是腐竹且第一次使用本插件，请先<br><strong>在后台根据下方的指令赋予自己世界管理员权限（/dwp admin add 玩家名，注意是执行这个指令）</strong></p><p>，然后在游戏内输入/dwp打开管理界面即可。首次管理请先设置好模板，然后在编辑界面直接选择模板进行微调保存即可。</p><p>更新时请务必删除一下lang.yml</p><p>，避免新增翻译无法显示（您如果有修改的话，建议您备份一下，然后根据交流群内提供的更新方法进行手动更新）</p><h2 id="指令​"><a href="#指令​" class="headerlink" title="指令​"></a>指令​</h2><p>新增世界配置文件 /dwp addworld world【后台】</p><p>新增管理员 /dwp admin add/del player【后台】</p><p>新增操作员 /dwp operatorlist add/del player world【后台】</p><p>新增白名单 /dwp whitelist add/del player world【后台】</p><p>保存配置(只包含世界配置) /dwp save【后台】</p><p>重载世界配置(包含世界配置、语言文件) /dwp reload【后台】</p><p>打开综合管理菜单 /dwp【游戏内】</p><h2 id="权限说明​"><a href="#权限说明​" class="headerlink" title="权限说明​"></a>权限说明​</h2><p>管理员: 可随意编辑和管理所有世界、管理权限、保存/重载配置</p><p>(单世界)操作员: 可随意编辑所在管理世界(必须要先处在自己管理的世界才可管理嗷)</p><p>白名单: 相当于传送通行证，可以传送到某个世界</p><h2 id="截图​"><a href="#截图​" class="headerlink" title="截图​"></a>截图​</h2><h2 id="配置文件​"><a href="#配置文件​" class="headerlink" title="配置文件​"></a>配置文件​</h2><p><strong>BannedUseItems、BannedInteractBlocks、AntiPlaceBlocks、AntiBreakBlocks、CanBreakBlocks、CanPlaceBlocks、DropItemBlocks、DropExpBlocks格式：</strong></p><p>Nukkit/MOTid:meta（如152:0）PNX字符串id（如minecraft:redstone_block）<br>折叠 : 世界/模板配置文件</p><p>YAML：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">#latest default config</span><br><span class="line">World:</span><br><span class="line">  FarmProtect: true</span><br><span class="line">  AllExplodes: true</span><br><span class="line">  TntExplodes: true</span><br><span class="line">  PVP: true</span><br><span class="line">  KeepInventory: true</span><br><span class="line">  KeepXp: true</span><br><span class="line">  AntiVoid: false</span><br><span class="line">  VoidHeight: '0'</span><br><span class="line">  TimeFlow: false</span><br><span class="line">  Weather: ''</span><br><span class="line">Player:</span><br><span class="line">  CanUseFishingHook: true</span><br><span class="line">  AllowInteractFrameBlock: true</span><br><span class="line">  Sneak: true</span><br><span class="line">  Fly: true</span><br><span class="line">  Swim: true</span><br><span class="line">  Glide: true</span><br><span class="line">  Jump: true</span><br><span class="line">  Sprint: true</span><br><span class="line">  Pick: true</span><br><span class="line">  ConsumeItem: true</span><br><span class="line">  DropItem: true</span><br><span class="line">  BedEnter: true</span><br><span class="line">  Move: true</span><br><span class="line">  EatFood: true</span><br><span class="line">  CommandPreprocess: true</span><br><span class="line">  GameModeChange: true</span><br><span class="line">  AntiTeleport: true</span><br><span class="line">  Interact: true</span><br><span class="line">  NoFallDamage: true</span><br><span class="line">  AllowOpenChest: true</span><br><span class="line">  ChestTrustList: []</span><br><span class="line">  BanCommands: []</span><br><span class="line">  HungerChange: true</span><br><span class="line">  BannedUseItems: []</span><br><span class="line">  BannedInteractBlocks: []</span><br><span class="line">Entity:</span><br><span class="line">  Explosion: true</span><br><span class="line">  PortalEnter: true</span><br><span class="line">Block:</span><br><span class="line">  AllowPlaceBlock: true</span><br><span class="line">  AllowBreakBlock: true</span><br><span class="line">  Burn: true</span><br><span class="line">  Ignite: true</span><br><span class="line">  Fall: true</span><br><span class="line">  Grow: true</span><br><span class="line">  Spread: true</span><br><span class="line">  Form: true</span><br><span class="line">  LeavesDecay: true</span><br><span class="line">  LiquidFlow: true</span><br><span class="line">  ItemFrameDropItem: true</span><br><span class="line">  SignChange: true</span><br><span class="line">  BlockRedstone: true</span><br><span class="line">  AntiPlaceBlocks: []</span><br><span class="line">  AntiBreakBlocks: []</span><br><span class="line">  CanBreakBlocks: []</span><br><span class="line">  CanPlaceBlocks: []</span><br><span class="line">  DropItem: true</span><br><span class="line">  DropItemBlocks: []</span><br><span class="line">  DropExp: true</span><br><span class="line">  DropExpBlocks: []</span><br><span class="line">  Update: true</span><br><span class="line">  Fade: true</span><br><span class="line">  PistonChange: true</span><br><span class="line">  FromToEvent: true</span><br><span class="line">GameRule:</span><br><span class="line">  fallDamage: true</span><br><span class="line">  fireDamage: true</span><br><span class="line">  freezeDamage: true</span><br><span class="line">  keepInventory: true</span><br><span class="line">  mobGriefing: false</span><br><span class="line">  pvp: false</span><br><span class="line">  showCoordinates: true</span><br><span class="line">  showDeathMessages: true</span><br><span class="line">  spawnRadius: 0</span><br></pre></td></tr></tbody></table></figure><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> MC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> github </tag>
            
            <tag> 转载 </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csg教程[8.4.1x]</title>
      <link href="/2024/05/31/Csg%E6%95%99%E7%A8%8B%5B8.4.1x%5D/"/>
      <url>/2024/05/31/Csg%E6%95%99%E7%A8%8B%5B8.4.1x%5D/</url>
      
        <content type="html"><![CDATA[<p>CuStom GO教程贴[适用版本V8.4.X]</p><span id="more"></span><p>从零教会你成为一名熟练的CSG配置师</p><p>CuStomeGo最全最新教程贴<br>[施工完成!可喜可贺!]<br>[2020.2.26-2020.4.9 字符统计:6188字符 统计方法:Word文件统计  ]<br>教程前言</p><p>  CuStomGO由国人插件作者制作并在2016年发布到了站内最早的版本V3.0,开始长达4年的开发与扩展目前本体与其6个附属已经达到了40+任务判定,30+条件判定,语句控制等多种配置选项自定义的程度超乎想象,CSG不再是单一功能的插件,超高度的自由度用他与其他的插件连用如MM,公民2,菜单等等连用 可以制作“高端的副本”“全新的小游戏”“完美的PVP”与“自动化的剧情”甚至“插件”大大提高了RPG服务器游玩性与小游戏的丰富度</p><p>  打住,怎么感觉跟在打上个年代的广告一样,自己牛皮好像吹大了….<br>  言归正传本次教程贴是基于CuStomGo与其相关附属的教程插件所开的帖子由于作者本身的教程文件版本更新,有一些教程实在太老了配置已经发生了改变所以我就和作者商量了一下就开始着手更新基于V8.3与其相关附属插件的教程,我会以最简单的方式给各位讲解如何从零到有的完美使用CuStomeGo配置出你想要的那一份“游戏”。</p><p>  PS：以下教程为了方便将会把CuStomeGo简称为CSG</p><p>教程目录</p><p>第一章：CSG的基础概念<br>第二章：了解CSG三大核心<br>第三章：从零开始制作CSG队列<br>第四章：配置更加高端的CSG队列<br>第五章：CSG的扩展功能（6大附属）</p><p>第一章:CSG基础概念与准备<br>在开始之前CSG需要以下几个插件作为前置当然你也可以选择不装只是会麻烦很多事情。这里我已经为大家链接好了直接点击就可以到对应贴内下载</p><blockquote><blockquote><blockquote><p>Vault<br>PlayerPoints<br>MythicMob（你要做小游戏可能就用不上）<br>PlaceholderAPI-2.8.2及以上版本</p></blockquote></blockquote></blockquote><p>当确认你的服务器按照好上面的插件以后,就可以打入CSG了并且你会在CSG的配置文件夹看到下面的5个文件（3个文件夹+2个YML）</p><blockquote><blockquote><blockquote><p>itemtask  （储存各种定义好了的游戏脚本）<br>lobby  （储存你的队列配置）<br>sign  （储存各种定义好了的加入告示牌#目前废案中）<br>Data.yml （玩家数据）<br>Option.yml  （CSG基础配置）</p></blockquote></blockquote></blockquote><p>你如果使用CSG会经常收到这种提示<br>——游戏读取完毕<br>——队列保存完毕<br>#那么什么是游戏？什么是队列呢？<br>简单来说:“饥饿游戏”“起床战争”就叫做游戏，而“饥饿游戏”“起床战争”中的“一号大厅”“二号大厅”就相当于队列。<br>如果比喻成副本的话可以这样说：游戏就相当于第一关这个整体，队列就相当于第一关中的地图或者大厅。<br>而负责这一个版块的就是lobby文件夹,在lobby文件夹以内的文件夹就是游戏文件夹而在游戏文件夹以内的就是队列文件了<br>文件结构：CuStomGo/lobby/游戏/队列.yml</p><p>如果你搞懂了这两个概念,那么恭喜你第一章内容毕业！如果没有搞懂也没有关系,因为不去实际用用真的很难懂,先往下看吧！</p><p>EXP：+10（10/100）<br>第二章：了解CSG的三大元素</p><p>在CSG中有三大配置元素（触发器，Task，TaskController）他们负责运行CSG的各种各样的事件.脚本.设置如果是初学到这里的小伙伴没必要学会怎么使用三大元素只是做一个阅览就够了。当你学到第四章在回来看说不定更好呢。而这些CSG的配置方法和MM的怪物制作其实是一种思维,将你需要的各种各样的东西组合到一起.</p><p>触发器——各种各样脚本逻辑运行。比如击杀了Boss执行什么,玩家死亡执行什么.<br>Task——触发器里面的脚本指令。<br>TaskController——游戏的时候各种执行,比如开始的时候执行什么,结束的时候执行什么</p><p>触发器<br>Trigger:</p><p>  &lt;名字&gt;:        #与MM的每个怪物的识别ID一个道理,每个名字不能一样<br>    Type: &lt;触发器类型&gt;       #触发器的类型,类型大全见下文<br>    Id:       #触发的对象（可以是玩家,怪物,等等）,如果该触发器类型注有标签 [含ID值]则会对对象有要求<br>    - id1<br>    - id2<br>    ……<br>    Task:       #Task<br>    - task1<br>    - task2<br>    ……<br>触发器大全<br>Task<br>Task统一格式:</p><ul><li>&lt;命令&gt;{&lt;参数&gt;}  &lt;目标&gt;[&lt;选择器&gt;=&lt;参数&gt;,&lt;选择器&gt;=&lt;参数&gt;…]<br>TaskController</li></ul><p>标签含义：</p><p>[含触发者]       - 在这个Task中可以使用@p,<striker>等指向触发者的变量。<br>[限非自由加入]   - 这个TaskController仅能在非自由加入队列中使用，否则失效。<br>[含变量]         - 这个TaskController会有一个括号后缀，内含一个变量辅助判定。</striker></p><p>TaskController大全<br>如果你学会了CSG的三大元素,那么你就完全可以自由编写的CSG脚本了~如果第一次看看的一脸懵逼也没有关系.请看下面的实战教程咯<br>EXP +50 （60/100）</p><p>第三章：从零开始制作CSG队列</p><p>这部分将开始是CSG的实战教程,以图文结合的方式给大家展示,那么废话多说,直接开始！</p><p>首先要在customego文件夹的lobby里面个用于储存{游戏}的文件夹这里我把她叫做【副本一】文件夹并且我们在创建一个.yml文件</p><p>注:这里的Default就是副本一的房间<br>打开我们的队列文件开始进行编辑吧（下方有教案,可以自己下载使用）<br>打开文件首先我们先来编辑最基本的内容</p><p>注：<br>[1]是否将这个队列文件设置为初始队列,每一个游戏也就是副本只能设置一个初始队列<br>[3]这个队列的名字,目前没什么用<br>[5][7]人数方面的限制,当满住最小人数的时候游戏就可以开始了,如果你想要做成单人副本就把最大与最小都设置成1就好了<br>[10] 是否自由加入,这个设置成false,如果你设置成true就当与别人正在打副本其他人也能进来打</p><p>相关时间方面设置</p><p>[14]当人数条件满足最少的时候需要等待多久<br>[16]当人数条件满住最多的时候需要等待多久<br>[18]这个游戏一场最长能玩多久<br>注释：如果你想要你的玩家加入就开始,你可以把你的等待时间全部设置为1，这样玩家一加入就可以开始游戏了（不能设置成0）</p><p>相关地点设置</p><p>[22]等待大厅的位置,玩家在什么地方等待游戏开始 格式（x,y,z,世界名）<br>*在V8.5版本过后地图坐标最好就填成（x y z,世界名）坐标中间的，改为空格隔开<br>[24]当游戏打完或者结束了最后把玩家传送到什么地方<br>[26]真正游戏的地方,相当于就是副本所在地（可以配置多个）<br>[29]玩家的区域范围，当跑出去的话会被强行拉回来。如果你的地图确保是完全封闭的其实都可以不用设置这个（可以配置多个）<br>注意V8.50后面的版本所有关于地点的设置都将用空格代替不再用 , 分隔了<br>游戏全局判定（TaskController）</p><p>[35-36]别乱动<br>[38-39]当玩家加入到等待大厅的时候执行什么指令,这里是给全部等待大厅玩家发送一条消息,可以设置多个（包括下面的几条都可以）<br>[40-41]当人满了的时候执行什么指令<br>[42-44]正式开始,执行的指令,这里的[44]是用控制台指令刷新mm怪物<br>[46-47]当结束和失败檫屁股执行什么,如果你是副本一定要记得结束消除本次的怪物，你可以不想要下一批玩家打两个boss吧。这里要注意一点你如果没有使用独立副本的附属的话，两个一样副本距离要大于32个方块距离，不如当A副本结束她会把B副本的怪物清除掉。B副本玩家：我的BOSS呢？？？<br>**这里的taskcontroller理论上你可以写无数个,然后再加无数个指令</p><p>游戏全局判定（Task）</p><p>[52-61] 这里是当你击杀了指定的mm boss不管还有没有小怪都会在60tik（3s）后结束本次游戏<br>*怪物标签可以添加多个,标签对应mm怪物的ID不是displayer（怪物名字）<br>[64-70]就是上面说的区域限制 [29] 问题，如果你没有搞区域就没必要写这个<br>[73-77]这是当队列遇到特殊情况会强制进行的措施，如插件被重载之类的<br>[79-83]这里是当你的游戏时间 [18] 到了后执行的操作<br>**这里的task理论上你可以写无数个,然后再加无数个判定</p><p>玩家的相关设置</p><p>这些都可以加也可以不加,看你自己的决定注释也写的很详细了我就不解释了<br>那么到现在基础的队列教程也就配置完毕了,当然详细的数据得更具你的服务器自己调整了,下方有这次教程写的配置模板,你可以直接下载改改就能直接用了<br>EXP +15 （75/100）<br>第四章：配置更加高端的CSG队列<br>这个位置我打算教各位怎么用CSG来写属于自己的小游戏,个人有什么想学的小游戏或者点子都可以写到下方评论区,我会根据不错的点子或者小游戏来尽量更新</p><p>第五章: CSG的扩展功能（附属插件讲解）<br>CSG拥有超多的附属,每一个附属都能给CSG增加全新的机制,学会使用附属会为你CSG带来不小的帮助<br>CustomGO-Divider<br>CustomGO-DailyJoin</p><p>简绍：CustomGo-DailyJoin是CustomeGo的每日限入附属,字面意思给游戏加上进入的限制次数,不是限制要求<br>使用方法：<br>1.将插件放入plugins后重启即可<br>2.打开生成的文件会有一个叫做Option.yml的文件打开文件就开始配置了,格式如下<br>[队列名]：[每日加入次数]</p><p>解释：<br>这里是配置了3个限制,特别注意DJ是通过队列名来进行限制的奥不是通过游戏进行限制的奥，相当于不同游戏同一个队列名都会受到限制。所以你要做的现在的游戏就用特殊的队列名哦<br>注意:<br>每日限制要通过重启服务器才能完成刷新,所以你要打上每日限制还要做一个游戏重启（这里建议找一个每日自动重启的插件,站内就有）</p><p>CustomGO-Leader</p><p>简绍：CustomeGo-Leader是CustomeGo的队长附属,他会指定第一个加入游戏的玩家是队长,队长拥有立即开始游戏与t出玩家的权限（相当于房主）<br>使用方式：<br>1.放入plugins后重启服务器,Leader不会生成相关的文件夹<br>2.打开你要开启队长设置的队列文件.就是第三章的那个教程的文件<br>3.在里面新的一行加上<br>Leader: true<br>就可以设置这个队列启用队长模式了<br>相关指令：<br>/fwl go   #立即开始游戏<br>/fwl kick 玩家   #踢出一名玩家<br>/fwl change 玩家   #转让队长</p><p>CustomeGo-Tili/JoinPrice<br>简绍：<br>JoinPrice扩展了CustomeGo的限制判定目前有（金币,点券,等级,TIlI的体力）<br>使用方法：<br>JoinPrice在V8.4及以上已经被整合到了CSG本体插件里面了,无需在打附属<br>Tili和其他附属一样放到插件包里面重启就会有专门的文件夹<br>配置方法：<br>打开需要加入现在的队列文件.还是第三章的那个文件</p><p>[Need]在开始游戏前判断玩家是否瞒住了这些条件,不会进行消耗<br>[Consume]在游戏开始后消耗玩家这些东西<br>前者是要求，后者是消耗<br>特别注意Need设置的内容要大于等于Consume的内容,如果小于的话,系统会自动将Consume作为Need进行判断<br>Tili文件夹的config配置：</p><p>这个什么好说的,自己看注释就是了<br>需要注意的就是在V8.4之前的版本,恢复速度是按照ti计算的20ti=1s,V8.4以后就按照秒了<br>然后就是注意的PAPI的版本,如果版本没设置对后台会报未连接的<br>PAPI变量： %fwtili.tili%  玩家当前体力<br>TiTl的相关指令：<br>/addtl &lt;体力&gt;             使你自己获得一定的体力。(需要权限：tili.addtl)<br>/addti &lt;体力&gt; &lt;玩家&gt;  使一个玩家获得一定的体力。(需要权限同上)<br>/addtall &lt;体力&gt;     使所有在线玩家获得一定体力。</p><p>ustomeGo-SPRoom.异步独立副本</p><p>重头戏来了,我最喜欢的一个附属插件,学会使用这个插件能让服务器B格直接上升到另一个层次<br>简绍：<br>CSG-SPR是CSG提供了异步独立系统,他能够为每一个玩家提供独立的副本与地图,0排队,0抢怪,0抢资源。并且采用的是异步生存地图避免了卡服的可能性只要不作死就不会造成服务器卡顿问题</p><p>使用方法：<br>1.首先你先要创建一个正常的游戏与配置（也就是第三章的配置文件）将他加载到服务器里面<br>2.输入/seril &lt;CustomGo游戏名&gt; 就会开始创建相关的独立副本,他会给你提示世界未加载新建一个超平坦地图.这个不用担心这个是正常现象<br>3.将服务器关闭,打开CSG—SPR的文件夹,里面有一个world文件,这个就是独立副本的世界模板,每一次生成独立副本就会复制一次这个模板.<br>将你的副本地图与对应的世界模板进行替换（内部文件全部替换）<br>4.在CSG-SPR中也有一个lobby的文件夹,这个就是独立副本的游戏文件夹,将独立副本的配置打开后将必要的世界名替换成&lt;tag.world&gt;组队的相关地点替换成none（这里可以去参考独立副本的模板文件）<br>&lt;tag.world&gt;就是代指你的独立副本的世界名字<br>5.启动服务器后如果文件正确就会生成一次独立副本文件<br>6.通过指令/fwroom xx setmax &lt;最大副本数&gt; 即可修改同时副本运行的上限（免费版一个副本最多10个,付费不限）</p><p>指令：<br>/seril &lt;CustomGo游戏名&gt;                       导入已有密室副本配置与对应地图，创建独立副本！<br>                                                          （若无对应地图，先自动创建一个超平坦世界作为对应地图）<br>/fwroom xx editworld                              重新修改(或传送到)已经导入为独立副本地图的世界<br>/fwroom xx renewlobby                           重新导入CustomGo配置到独立副本(修改配置后用)<br>/fwroom xx setmax &lt;最大副本数&gt;           设定该独立副本最多允许多少副本同时进行<br>/fwroom list                                           显示独立副本列表<br>/fwroom xx statu                                    查看一个独立副本的状态<br>/fwroom defaultloc                                 设置默认传送点(临时世界被移除时世界内玩家传送到这)</p><p>/fwroom xx join                                     (玩家指令)加入独立副本！<br>/fwroom xx join &lt;玩家名&gt;                      (管理员指令)令一名玩家加入独立副本(免费版缺失)！<br>/fw leave                                              (玩家指令)离开一个独立副本！(没错是CustomGo原指令)<br>请注意：<br>1.独立副本不能通过修改config来进行注册副本,必须通过指令一步一步的来</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[Github]csdn-is---mark-down-master</title>
      <link href="/2024/05/31/csdn%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/05/31/csdn%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p><a href="/download/csdn-is---mark-down-master.zip" download="">打包下载本zip</a></p><h1 id="climbCSDNblogsUtils"><a href="#climbCSDNblogsUtils" class="headerlink" title="climbCSDNblogsUtils"></a>climbCSDNblogsUtils</h1><h2 id="将CSDN文章转化为Markdown文档"><a href="#将CSDN文章转化为Markdown文档" class="headerlink" title="将CSDN文章转化为Markdown文档"></a>将CSDN文章转化为Markdown文档</h2><blockquote><p>很多情况下，我们需要将CSDN中的文章转化为markdown文档，直接复制全文是不可以的，CSDN不支持。</p></blockquote><h2 id="那有什么办法快速得到md文档？"><a href="#那有什么办法快速得到md文档？" class="headerlink" title="那有什么办法快速得到md文档？"></a>那有什么办法快速得到md文档？</h2><p><code>原理</code>:</p><ul><li>由于CSDN不是获取数据不是前后端分离的，所以无法根据接口获取文章的所有数据，它的数据是和页面元素组合在一起的，需要根据页面中的元素标签转化为markdown中的元素标签。</li><li>使用jsoup解析csdn文档</li></ul><p><code>使用</code>:</p><ul><li>直接将CSDN文章的url放入<code>climbDetailByUrl(url)</code>方法的参数即可</li><li>也支持爬取某个作者所有的文章,<code>climb(userName)</code></li></ul><h2 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h2><h3 id="获取单个文章markdown"><a href="#获取单个文章markdown" class="headerlink" title="获取单个文章markdown"></a>获取单个文章markdown</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClimbUtil</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        climbDetailByUrl(<span class="string">"https://blog.csdn.net/qq_45774645/article/details/123489756?spm=1001.2014.3001.5502"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="获取所有的文章markdown"><a href="#获取所有的文章markdown" class="headerlink" title="获取所有的文章markdown"></a>获取所有的文章markdown</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">limbUtil</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">//其中userName指定是博客介绍中的名字</span></span><br><span class="line">        climb(userName);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="项目中待解决的问题"><a href="#项目中待解决的问题" class="headerlink" title="项目中待解决的问题"></a>项目中待解决的问题</h2><p><img src="/img.png" alt="img.png"><br><code>TODO ‘&gt; ’标签中包含代码块，需要处理</code><br><br><code>TODO 代码中格式待处理</code><br><br><code>TODO 增加GUI页面</code><br><br><code>TODO 公式、表格标签的处理</code><br></p><h2 id="欢迎大家提出问题，一起完善这个项目"><a href="#欢迎大家提出问题，一起完善这个项目" class="headerlink" title="欢迎大家提出问题，一起完善这个项目"></a>欢迎大家提出问题，一起完善这个项目</h2><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客优化之Next主题美化</title>
      <link href="/2024/05/31/86661502/"/>
      <url>/2024/05/31/86661502/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>有了前面几篇博客的介绍，我们就可以很容易的搭建并编辑我们的博客了，不过既然是属于自己的博客网站，自然也就想让其更加美观，更有意思，所以呢我下面介绍一下Hexo博客的主题美化操作。</p></blockquote><h3 id="1-Next主题"><a href="#1-Next主题" class="headerlink" title="1. Next主题"></a>1. Next主题</h3><p>Hexo博客支持很多主题风格，其中<a href="https://github.com/theme-next/hexo-theme-next">Next</a>主题是Github上Star最多的主题，其一直在更新维护，支持非常多的外部插件和功能选项。我目前使用的是Next6.0版本，下面我会介绍基于Next6主题的界面美化手法。</p><h4 id="1-1-Next主题的安装配置"><a href="#1-1-Next主题的安装配置" class="headerlink" title="1.1 Next主题的安装配置"></a>1.1 Next主题的安装配置</h4><p>Next主题的安装方式很简单，只需要在博客主目录下执行：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></tbody></table></figure><p>然后设置站点配置文件_config.yml：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></tbody></table></figure><p>即可将我们的Hexo博客主题替换为Next主题。</p><h4 id="1-2-主题简单配置"><a href="#1-2-主题简单配置" class="headerlink" title="1.2 主题简单配置"></a>1.2 主题简单配置</h4><p>Next主题提供很多方便的功能，我们来一一介绍：</p><ul><li><strong>Next主题风格</strong>： Next提供了四中主题风格scheme，可以在主题配置文件blog/themes/next/_config.yml文件中进行选择，分别是Muse、Mist、Pisces、Gemini： <img src="https://blogdata-1258545379.cos.ap-shanghai.myqcloud.com/20190124/1548267375540.png"> <img src="https://blogdata-1258545379.cos.ap-shanghai.myqcloud.com/20190124/1548267403909.png"> <img src="https://blogdata-1258545379.cos.ap-shanghai.myqcloud.com/20190124/1548267428521.png"> <img src="https://blogdata-1258545379.cos.ap-shanghai.myqcloud.com/20190124/1548267447923.png"> 这里我选择的是Gemini主题，也就是最后一种样式；</li><li><strong>Next主题一般配置</strong>：</li></ul><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">override：false</span></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line"><span class="string">enable:true</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></tbody></table></figure><p>以上是Next最常规的配置，而相应的站点配置blog/_config.yml文件的基本配置为：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">见渊の博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">记录生活中的点点滴滴</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">直到这一刻微笑着说话为止，我至少留下了一公升眼泪</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">黄飘</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://huangpiao.tech</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">README.md</span></span><br><span class="line"></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">30</span></span><br><span class="line">  <span class="attr">yearly:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">monthly:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tag_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next6</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">https://github.com/nightmaredimple/nightmaredimple.github.io.git</span></span><br><span class="line">    <span class="attr">coding:</span> <span class="string">https://git.coding.net/nightmaredimple/nightmaredimple.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure><p>以上的效果如下： <img src="https://blogdata-1258545379.cos.ap-shanghai.myqcloud.com/20190124/1548268494890.png"></p><h3 id="2-添加博客自定义图标"><a href="#2-添加博客自定义图标" class="headerlink" title="2.添加博客自定义图标"></a>2.添加博客自定义图标</h3><p>我们博客的默认图标是 <code>H</code>，不过Next支持修改图标，下面是我的图标：</p><p><img src="https://blogdata-1258545379.cos.ap-shanghai.myqcloud.com/20190124/1548268092825.png"></p><p>博客网站的图标可以在<a href="https://www.easyicon.net/">easyicon</a>、<a href="http://www.bitbug.net/">bitbug</a>、<a href="https://www.iconfont.cn/plus/user/detail?uid=41718">iconfont</a>等网站选择和制作，然后选择或者创建相应大小的图标文件，放置在blog/themes/next/sources/images目录下，并在主题配置文件中进行如下配置，只需要设置small和medium两个就可以：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/16x16.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/32x32.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/128x128.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo2.svg</span></span><br></pre></td></tr></tbody></table></figure><h3 id="3-鼠标点击特效"><a href="#3-鼠标点击特效" class="headerlink" title="3. 鼠标点击特效"></a>3. 鼠标点击特效</h3><p>鼠标的点击红心特效如下：</p><p><img src="https://blogdata-1258545379.cos.ap-shanghai.myqcloud.com/20190124/5308475-78e64c0a80bb559e.gif"></p><p>具体步骤如下：</p><p>在 <code>/themes/next/source/js/src</code>下新建文件 clicklove.js ，接着把下面的代码拷贝粘贴到 clicklove.js 文件中：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!<span class="keyword">function</span>(<span class="params">e,t,a</span>){</span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">n</span>(<span class="params"></span>){</span><br><span class="line">   <span class="title function_">c</span>(<span class="string">".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transfor</span></span><br></pre></td></tr></tbody></table></figure><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的世界1.20.4-1.10.2苹果皮 AppleSkin Mod下载</title>
      <link href="/2024/05/31/848/"/>
      <url>/2024/05/31/848/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.minecraftzw.com/tag/%e8%8b%b9%e6%9e%9c">苹果</a>皮 AppleSkin Mod由作者”squeek502”所制作，可以让玩家直观的看到游戏中的<a href="https://www.minecraftzw.com/tag/%e9%a5%a5%e9%a5%bf">饥饿</a>度和饱食度等信息。</p><p>鼠标放在食物上显示获得的饥饿值和饱食度</p><p><img src="https://img1.minecraftzw.com/wp-content/uploads/2019/09/minecraftzw_20190918_1568765993.gif"></p><p>饱食度的消耗显示为后面黑点点的<a href="https://www.minecraftzw.com/tag/%e8%bf%9b%e5%ba%a6">进度</a>条</p><p><img src="https://img1.minecraftzw.com/wp-content/uploads/2019/09/minecraftzw_20190918_1568765993.gif"></p><p>手持食物，获得的饥饿值和饱食度也会显示</p><p><img src="https://img1.minecraftzw.com/wp-content/uploads/2019/09/minecraftzw_20190918_1568765993.gif"></p><p>将饥饿/饱和/耗尽信息添加到调试中</p><p>将饱和和耗尽值同步到客户端</p><p>欢迎您将这个mod添加到您想要的任何modpack中。</p><p>饥饿值与饱食度的显示，这以前是AppleCore的功能，不需要AppleCore作为前置。</p><p><img src="https://img1.minecraftzw.com/wp-content/uploads/2019/09/minecraftzw_20190918_1568765993.gif"></p><ul><li>如果不会安装Mod，请点击查看<a href="http://www.minecraftzw.com/283.html">我的世界Mod安装教程</a>。</li><li>如发现网盘资源被吞，或者网盘资源不存在，请在下方评论中说明，我们将会尽快进行修复。</li></ul><p><img src="https://img1.minecraftzw.com/wp-content/uploads/2019/09/minecraftzw_20190918_1568765993.gif">此处内容已经被作者隐藏，请输入验证码查看内容（仅能PC端输入）验证码：请关注本站微信公众号，回复”提取码”，获取验证码。在微信里搜索”Steam看板娘”或者”steamkanban”或者微信扫描右侧二维码都可以关注本站微信公众号。</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 转载 </tag>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试官：如果不允许线程池丢弃任务，应该选择哪个拒绝策略？</title>
      <link href="/2024/05/31/18222455/"/>
      <url>/2024/05/31/18222455/</url>
      
        <content type="html"><![CDATA[<h3 id="线程池的拒绝策略有哪些？"><a href="#线程池的拒绝策略有哪些？" class="headerlink" title="线程池的拒绝策略有哪些？"></a>线程池的拒绝策略有哪些？</h3><p>如果当前同时运行的线程数量达到最大线程数量并且队列也已经被放满了任务时， <code>ThreadPoolExecutor</code> 定义一些策略:</p><ul><li><code>ThreadPoolExecutor.AbortPolicy</code>：抛出 <code>RejectedExecutionException</code>来拒绝新任务的处理。</li><li><code>ThreadPoolExecutor.CallerRunsPolicy</code>：调用执行自己的线程运行任务，也就是直接在调用 <code>execute</code>方法的线程中运行(<code>run</code>)被拒绝的任务，如果执行程序已关闭，则会丢弃该任务。因此这种策略会降低对于新任务提交速度，影响程序的整体性能。如果你的应用程序可以承受此延迟并且你要求任何一个任务请求都要被执行的话，你可以选择这个策略。</li><li><code>ThreadPoolExecutor.DiscardPolicy</code>：不处理新任务，直接丢弃掉。</li><li><code>ThreadPoolExecutor.DiscardOldestPolicy</code>：此策略将丢弃最早的未处理的任务请求。</li></ul><p>举个例子：Spring 通过 <code>ThreadPoolTaskExecutor</code> 或者我们直接通过 <code>ThreadPoolExecutor</code> 的构造函数创建线程池的时候，当我们不指定 <code>RejectedExecutionHandler</code> 拒绝策略来配置线程池的时候，默认使用的是 <code>AbortPolicy</code>。在这种拒绝策略下，如果队列满了， <code>ThreadPoolExecutor</code> 将抛出 <code>RejectedExecutionException</code> 异常来拒绝新来的任务 ，这代表你将丢失对这个任务的处理。如果不想丢弃任务的话，可以使用 <code>CallerRunsPolicy</code>。 <code>CallerRunsPolicy</code> 和其他的几个策略不同，它既不会抛弃任务，也不会抛出异常，而是将任务回退给调用者，使用调用者的线程来执行任务。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CallerRunsPolicy</span> <span class="keyword">implements</span> <span class="title class_">RejectedExecutionHandler</span> {</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">CallerRunsPolicy</span><span class="params">()</span> { }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rejectedExecution</span><span class="params">(Runnable r, ThreadPoolExecutor e)</span> {</span><br><span class="line">            <span class="keyword">if</span> (!e.isShutdown()) {</span><br><span class="line">                <span class="comment">// 直接主线程执行，而不是线程池中的线程执行</span></span><br><span class="line">                r.run();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><h3 id="如果不允许丢弃任务任务，应该选择哪个拒绝策略？"><a href="#如果不允许丢弃任务任务，应该选择哪个拒绝策略？" class="headerlink" title="如果不允许丢弃任务任务，应该选择哪个拒绝策略？"></a>如果不允许丢弃任务任务，应该选择哪个拒绝策略？</h3><p>根据上面对线程池拒绝策略的介绍，相信大家很容易能够得出答案是： <code>CallerRunsPolicy</code> 。</p><p>这里我们再来结合 <code>CallerRunsPolicy</code> 的源码来看看：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CallerRunsPolicy</span> <span class="keyword">implements</span> <span class="title class_">RejectedExecutionHandler</span> {</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">CallerRunsPolicy</span><span class="params">()</span> { }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rejectedExecution</span><span class="params">(Runnable r, ThreadPoolExecutor e)</span> {</span><br><span class="line">            <span class="comment">//只要当前程序没有关闭，就用执行execute方法的线程执行该任务</span></span><br><span class="line">            <span class="keyword">if</span> (!e.isShutdown()) {</span><br><span class="line"></span><br><span class="line">                r.run();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>从源码可以看出，只要当前程序不关闭就会使用执行 <code>execute</code>方法的线程执行该任务。</p><h3 id="CallerRunsPolicy-拒绝策略有什么风险？如何解决？"><a href="#CallerRunsPolicy-拒绝策略有什么风险？如何解决？" class="headerlink" title="CallerRunsPolicy 拒绝策略有什么风险？如何解决？"></a>CallerRunsPolicy 拒绝策略有什么风险？如何解决？</h3><p>我们上面也提到了：如果想要保证任何一个任务请求都要被执行的话，那选择 <code>CallerRunsPolicy</code> 拒绝策略更合适一些。</p><p>不过，如果走到 <code>CallerRunsPolicy</code>的任务是个非常耗时的任务，且处理提交任务的线程是主线程，可能会导致主线程阻塞，影响程序的正常运行。</p><p>这里简单举一个例子，该线程池限定了最大线程数为 2，阻塞队列大小为 1(这意味着第 4 个任务就会走到拒绝策略)， <code>ThreadUtil</code>为 Hutool 提供的工具类：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadPoolTest</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">log</span> <span class="operator">=</span> LoggerFactory.getLogger(ThreadPoolTest.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 创建一个线程池，核心线程数为1，最大线程数为2</span></span><br><span class="line">        <span class="comment">// 当线程数大于核心线程数时，多余的空闲线程存活的最长时间为60秒，</span></span><br><span class="line">        <span class="comment">// 任务队列为容量为1的ArrayBlockingQueue，饱和策略为CallerRunsPolicy。</span></span><br><span class="line">        <span class="type">ThreadPoolExecutor</span> <span class="variable">threadPoolExecutor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(<span class="number">1</span>,</span><br><span class="line">                <span class="number">2</span>,</span><br><span class="line">                <span class="number">60</span>,</span><br><span class="line">                TimeUnit.SECONDS,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ArrayBlockingQueue</span>&lt;&gt;(<span class="number">1</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.CallerRunsPolicy());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 提交第一个任务，由核心线程执行</span></span><br><span class="line">        threadPoolExecutor.execute(() -&gt; {</span><br><span class="line">            log.info(<span class="string">"核心线程执行第一个任务"</span>);</span><br><span class="line">            ThreadUtil.sleep(<span class="number">1</span>, TimeUnit.MINUTES);</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 提交第二个任务，由于核心线程被占用，任务将进入队列等待</span></span><br><span class="line">        threadPoolExecutor.execute(() -&gt; {</span><br><span class="line">            log.info(<span class="string">"非核心线程处理入队的第二个任务"</span>);</span><br><span class="line">            ThreadUtil.sleep(<span class="number">1</span>, TimeUnit.MINUTES);</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 提交第三个任务，由于核心线程被占用且队列已满，创建非核心线程处理</span></span><br><span class="line">        threadPoolExecutor.execute(() -&gt; {</span><br><span class="line">            log.info(<span class="string">"非核心线程处理第三个任务"</span>);</span><br><span class="line">            ThreadUtil.sleep(<span class="number">1</span>, TimeUnit.MINUTES);</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 提交第四个任务，由于核心线程和非核心线程都被占用，队列也满了，根据CallerRunsPolicy策略，任务将由提交任务的线程（即主线程）来执行</span></span><br><span class="line">        threadPoolExecutor.execute(() -&gt; {</span><br><span class="line">            log.info(<span class="string">"主线程处理第四个任务"</span>);</span><br><span class="line">            ThreadUtil.sleep(<span class="number">2</span>, TimeUnit.MINUTES);</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 提交第五个任务，主线程被第四个任务卡住，该任务必须等到主线程执行完才能提交</span></span><br><span class="line">        threadPoolExecutor.execute(() -&gt; {</span><br><span class="line">            log.info(<span class="string">"核心线程执行第五个任务"</span>);</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭线程池</span></span><br><span class="line">        threadPoolExecutor.shutdown();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">18:19:48.203 INFO  [pool-1-thread-1] c.j.concurrent.ThreadPoolTest - 核心线程执行第一个任务</span><br><span class="line">18:19:48.203 INFO  [pool-1-thread-2] c.j.concurrent.ThreadPoolTest - 非核心线程处理第三个任务</span><br><span class="line">18:19:48.203 INFO  [main] c.j.concurrent.ThreadPoolTest - 主线程处理第四个任务</span><br><span class="line">18:20:48.212 INFO  [pool-1-thread-2] c.j.concurrent.ThreadPoolTest - 非核心线程处理入队的第二个任务</span><br><span class="line">18:21:48.219 INFO  [pool-1-thread-2] c.j.concurrent.ThreadPoolTest - 核心线程执行第五个任务</span><br></pre></td></tr></tbody></table></figure><p>从输出结果可以看出，因为 <code>CallerRunsPolicy</code>这个拒绝策略，导致耗时的任务用了主线程执行，导致线程池阻塞，进而导致后续任务无法及时执行，严重的情况下很可能导致 OOM。</p><p>我们从问题的本质入手，调用者采用 <code>CallerRunsPolicy</code>是希望所有的任务都能够被执行，暂时无法处理的任务又被保存在阻塞队列 <code>BlockingQueue</code>中。这样的话，在内存允许的情况下，我们可以增加阻塞队列 <code>BlockingQueue</code>的大小并调整堆内存以容纳更多的任务，确保任务能够被准确执行。</p><p>为了充分利用 CPU，我们还可以调整线程池的 <code>maximumPoolSize</code> （最大线程数）参数，这样可以提高任务处理速度，避免累计在 <code>BlockingQueue</code>的任务过多导致内存用完。</p><p><img src="https://img2024.cnblogs.com/blog/1843652/202405/1843652-20240530151909600-1603332987.png"></p><p>如果服务器资源以达到可利用的极限，这就意味我们要在设计策略上改变线程池的调度了，我们都知道，导致主线程卡死的本质就是因为我们不希望任何一个任务被丢弃。换个思路，有没有办法既能保证任务不被丢弃且在服务器有余力时及时处理呢？</p><p>这里提供的一种 <strong>任务持久化</strong>的思路，这里所谓的任务持久化，包括但不限于:</p><ol><li>设计一张任务表间任务存储到 MySQL 数据库中。</li><li>Redis 缓存任务。</li><li>将任务提交到消息队列中。</li></ol><p>这里以方案一为例，简单介绍一下实现逻辑：</p><ol><li>实现 <code>RejectedExecutionHandler</code>接口自定义拒绝策略，自定义拒绝策略负责将线程池暂时无法处理（此时阻塞队列已满）的任务入库（保存到 MySQL 中）。注意：线程池暂时无法处理的任务会先被放在阻塞队列中，阻塞队列满了才会触发拒绝策略。</li><li>继承 <code>BlockingQueue</code>实现一个混合式阻塞队列，该队列包含 JDK 自带的 <code>ArrayBlockingQueue</code>。另外，该混合式阻塞队列需要修改取任务处理的逻辑，也就是重写 <code>take()</code>方法，取任务时优先从数据库中读取最早的任务，数据库中无任务时再从 <code>ArrayBlockingQueue</code>中去取任务。</li></ol><p><img src="https://img2024.cnblogs.com/blog/1843652/202405/1843652-20240530151908355-875093300.png"></p><p>整个实现逻辑还是比较简单的，核心在于自定义拒绝策略和阻塞队列。如此一来，一旦我们的线程池中线程以达到满载时，我们就可以通过拒绝策略将最新任务持久化到 MySQL 数据库中，等到线程池有了有余力处理所有任务时，让其优先处理数据库中的任务以避免”饥饿”问题。</p><p>当然，对于这个问题，我们也可以参考其他主流框架的做法，以 Netty 为例，它的拒绝策略则是直接创建一个线程池以外的线程处理这些任务，为了保证任务的实时处理，这种做法可能需要良好的硬件设备且临时创建的线程无法做到准确的监控：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">NewThreadRunsPolicy</span> <span class="keyword">implements</span> <span class="title class_">RejectedExecutionHandler</span> {</span><br><span class="line">    NewThreadRunsPolicy() {</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rejectedExecution</span><span class="params">(Runnable r, ThreadPoolExecutor executor)</span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//创建一个临时线程处理任务</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">Thread</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(r, <span class="string">"Temporary task executor"</span>);</span><br><span class="line">            t.start();</span><br><span class="line">        } <span class="keyword">catch</span> (Throwable e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RejectedExecutionException</span>(</span><br><span class="line">                    <span class="string">"Failed to start a new thread"</span>, e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>ActiveMQ 则是尝试在指定的时效内尽可能的争取将任务入队，以保证最大交付：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">RejectedExecutionHandler</span>() {</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rejectedExecution</span><span class="params">(<span class="keyword">final</span> Runnable r, <span class="keyword">final</span> ThreadPoolExecutor executor)</span> {</span><br><span class="line">                    <span class="keyword">try</span> {</span><br><span class="line">                        <span class="comment">//限时阻塞等待，实现尽可能交付</span></span><br><span class="line">                        executor.getQueue().offer(r, <span class="number">60</span>, TimeUnit.SECONDS);</span><br><span class="line">                    } <span class="keyword">catch</span> (InterruptedException e) {</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RejectedExecutionException</span>(<span class="string">"Interrupted waiting for BrokerService.worker"</span>);</span><br><span class="line">                    }</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RejectedExecutionException</span>(<span class="string">"Timed Out while attempting to enqueue Task."</span>);</span><br><span class="line">                }</span><br><span class="line">            });</span><br></pre></td></tr></tbody></table></figure><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo史上最全搭建教程</title>
      <link href="/2024/05/31/82729029/"/>
      <url>/2024/05/31/82729029/</url>
      
        <content type="html"><![CDATA[<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-CF2m4SwD-1628816637063)(<a href="http://peu31tfv4.bkt.clouddn.com/1.jpg)]">http://peu31tfv4.bkt.clouddn.com/1.jpg)]</a></p><p>花了几天搭建了个网站，先上链接，欢迎来访：<a href="http://fangzh.top/">fangzh的个人博客</a></p><p>现在市面上的博客很多，如CSDN，博客园，简书等平台，可以直接在上面发表，用户交互做的好，写的文章百度也能搜索的到。缺点是比较不自由，会受到平台的各种限制和恶心的广告。</p><p>而自己购买域名和服务器，搭建博客的成本实在是太高了，不光是说这些购买成本，单单是花力气去自己搭这么一个网站，还要定期的维护它，对于我们大多数人来说，实在是没有这样的精力和时间。</p><p>那么就有第三种选择，直接在github page平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，而且hexo作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。</p><h3 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h3><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><p>教程分三个部分，</p><ul><li>第一部分：hexo的初级搭建还有部署到github page上，以及个人域名的绑定。</li><li>第二部分：hexo的基本配置，更换主题，实现多终端工作，以及在coding page部署实现国内外分流</li><li>第三部分：hexo添加各种功能，包括搜索的SEO，阅读量统计，访问量统计和评论系统等。</li></ul><h2 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h2><p>hexo的初级搭建还有部署到github page上，以及个人域名的绑定。</p><h2 id="Hexo简介-1"><a href="#Hexo简介-1" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h2 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h2><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>GitHub创建个人仓库</li><li>生成SSH添加到GitHub</li><li>将hexo部署到GitHub</li><li>设置个人域名</li><li>发布文章</li></ol><h2 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h2><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。Git非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的Git教程写的非常好，大家可以了解一下。<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git教程</a></p><p>windows：到git官网上下载,<a href="https://gitforwindows.org/">Download git</a>,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</p><p>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></tbody></table></figure><p>安装好后，用 <code>git --version</code> 来查看一下版本</p><h2 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2. 安装nodejs"></a>2. 安装nodejs</h2><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。</p><p>windows：<a href="https://nodejs.org/en/download/">nodejs</a>选择LTS版本就行了。</p><p>linux：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></tbody></table></figure><p>安装完后，打开命令行</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></tbody></table></figure><p>检查一下有没有安装成功</p><p>顺便说一下，windows在git安装完后，就可以直接使用git bash来敲命令行了，不用自带的cmd，cmd有点难用。</p><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h2><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后 <code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。</p><p>输入命令</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></tbody></table></figure><p>依旧用 <code>hexo -v</code>查看一下版本</p><p>至此就全部安装完了。</p><p>接下来初始化一下hexo</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></tbody></table></figure><p>这个myblog可以自己取什么名字都行，然后</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog //进入这个myblog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></tbody></table></figure><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>** _config.yml: 博客的配置文件*</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></tbody></table></figure><p>打开hexo的服务，在浏览器输入localhost:4000就可以看到你生成的博客了。</p><p>大概长这样：<br><img src="https://img.pixelbbs.cn/LightPicture/2024/05/2fa613cfa2eb3cb2.jpg"><br>使用ctrl+c可以把服务关掉。</p><h2 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4. GitHub创建个人仓库"></a>4. GitHub创建个人仓库</h2><p>首先，你先要有一个GitHub账户，去注册一个吧。</p><p>注册完登录后，在GitHub.com中看到一个New repository，新建仓库<br><img src="https://img.pixelbbs.cn/LightPicture/2024/05/c907fca977077f65.jpg"></p><p>创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。</p><p><img src="https://img.pixelbbs.cn/LightPicture/2024/05/a79bc1ca9d5db885.jpg"></p><p>点击create repository。</p><h2 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title=";  5. 生成SSH添加到GitHub"></a><a name="5_sshgithub_141">;</a>  5. 生成SSH添加到GitHub</h2><p>回到你的git bash中，</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "yourname"</span><br><span class="line">git config --global user.email "youremail"</span><br></pre></td></tr></tbody></table></figure><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。</p><p>可以用以下两条，检查一下你有没有输对</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></tbody></table></figure><p>然后创建SSH,一路回车</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "youremail"</span><br></pre></td></tr></tbody></table></figure><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。</p><p><img src="https://img.pixelbbs.cn/LightPicture/2024/05/a92ece466d703932.jpg"></p><p>ssh，简单来讲，就是一个秘钥，其中， <code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的， <code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>而后在GitHub的setting中，找到SSH keys的设置选项，点击 <code>New SSH key</code><br>把你的 <code>id_rsa.pub</code>里面的信息复制进去。</p><p><img src="https://img.pixelbbs.cn/LightPicture/2024/05/76909c9dcbec3cd3.jpg"></p><p>在gitbash中，查看是否成功</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></tbody></table></figure><h2 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6. 将hexo部署到GitHub"></a>6. 将hexo部署到GitHub</h2><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为<br>YourgithubName就是你的GitHub账户</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></tbody></table></figure><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure><p>然后</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br> <code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br> <code>hexo deploy</code> 部署文章，可以用 <code>hexo d</code>缩写</p><p>注意deploy时可能要你输入username和password。</p><p>得到下图就说明部署成功了，过一会儿就可以在 <code>http://yourname.github.io</code> 这个网站看到你的博客了！！<br><img src="https://img.pixelbbs.cn/LightPicture/2024/05/fc3466d69b7be31a.jpg"></p><h2 id="7-设置个人域名"><a href="#7-设置个人域名" class="headerlink" title="7. 设置个人域名"></a>7. 设置个人域名</h2><p>现在你的个人网站的地址是 <code>yourname.github.io</code>，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。</p><p>注册一个阿里云账户,在<a href="https://wanwang.aliyun.com/?spm=5176.8142029.digitalization.2.e9396d3e46JCc5">阿里云</a>上买一个域名，我买的是 <code>fangzh.top</code>，各个后缀的价格不太一样，比如最广泛的.com就比较贵，看个人喜好咯。</p><p>你需要先去进行实名认证,然后在域名控制台中，看到你购买的域名。</p><p>点 <strong>解析</strong>进去，添加解析。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/951e65614a195996cff7519f7fafdec1.png" alt="图片失效了"></p><p>其中，192.30.252.153 和 192.30.252.154 是GitHub的服务器地址。<br><strong>注意，解析线路选择默认</strong>，不要像我一样选境外。这个境外是后面来做国内外分流用的,在后面的博客中会讲到。记得现在选择 <strong>默认</strong>！！</p><p><img src="https://img-blog.csdnimg.cn/img_convert/6ae646523b70539689b04866baf844c9.png" alt="图片失效了"></p><p>登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名 <code>fangzh.top</code></p><p><img src="https://img-blog.csdnimg.cn/img_convert/598c53e8b59a6b88ad484024879da694.png" alt="图片失效了"></p><p>然后在你的博客文件source中创建一个名为CNAME文件，不要后缀。写上你的域名。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/170e6d6498ede45ec1950599fa74a260.png" alt="图片失效了"></p><p>最后，在gitbash中，输入</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><p>过不了多久，再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦！</p><p>接下来你就可以正式开始写文章了。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new newpapername</span><br></pre></td></tr></tbody></table></figure><p>然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><p>就可以看到更新了。</p><h2 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h2><p>hexo的基本配置，更换主题，实现多终端工作，以及在coding page部署实现国内外分流。</p><h2 id="1-hexo基本配置"><a href="#1-hexo基本配置" class="headerlink" title="1. hexo基本配置"></a>1. hexo基本配置</h2><p>在文件根目录下的 <code>_config.yml</code>，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方的配置</a>描述。</p><h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><p>参数描述 <code>title</code></p><p>网站标题 <code>subtitle</code></p><p>网站副标题 <code>description</code></p><p>网站描述 <code>author</code></p><p>您的名字 <code>language</code></p><p>网站使用的语言 <code>timezone</code></p><p>网站时区。Hexo 默认使用您电脑的时区。<br><a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a></p><p>。比如说： <code>America/New_York</code> <code>Japan</code></p><p>, 和 <code>UTC</code></p><p>其中， <code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。 <code>author</code>参数用于主题显示文章的作者。</p><h4 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h4><p>参数描述 <code>url</code></p><p>网址 <code>root</code></p><p>网站根目录 <code>permalink</code></p><p>文章的<br><a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a></p><p>格式 <code>permalink_defaults</code></p><p>永久链接中各部分的默认值</p><p>在这里，你需要把 <code>url</code>改成你的网站域名。</p><p>permalink，也就是你生成某个文章时的那个链接格式。</p><p>比如我新建一个文章叫 <code>temp.md</code>，那么这个时候他自动生成的地址就是 <code>http://yoursite.com/2018/09/05/temp</code>。</p><p>以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找 <a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 。</p><p>参数结果 <code>:year/:month/:day/:title/</code></p><p>2013/07/14/hello-world <code>:year-:month-:day-:title.html</code></p><p>2013-07-14-hello-world.html <code>:category/:title</code></p><p>foo/bar/hello-world</p><p>再往下翻，中间这些都默认就好了。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">theme: landscape</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: [branch]</span><br><span class="line"></span><br><span class="line">&lt;/repository&gt;</span><br></pre></td></tr></tbody></table></figure><p><code>theme</code>就是选择什么主题，也就是在 <code>theme</code>这个文件夹下，在官网上有很多个主题，默认给你安装的是 <code>lanscape</code>这个主题。当你需要更换主题时，在官网上下载，把主题的文件放在 <code>theme</code>文件夹下，再修改这个参数就可以了。</p><p>接下来这个 <code>deploy</code>就是网站的部署的， <code>repo</code>就是仓库(<code>Repository</code>)的简写。 <code>branch</code>选择仓库的哪个分支。这个在之前进行github page部署的时候已经修改过了，不再赘述。而这个在后面进行双平台部署的时候会再次用到。</p><h4 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h4><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2013/7/13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><p>下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><p>参数描述 <code>layout</code></p><p>布局 <code>title</code></p><p>标题 <code>date</code></p><p>建立日期 <code>updated</code></p><p>更新日期 <code>comments</code></p><p>开启文章的评论功能 <code>tags</code></p><p>标签（不适用于分页） <code>categories</code></p><p>分类（不适用于分页） <code>permalink</code></p><p>覆盖文章网址</p><p>其中，分类和标签需要区别一下，分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br></pre></td></tr></tbody></table></figure><h4 id="layout（布局）"><a href="#layout（布局）" class="headerlink" title="layout（布局）"></a>layout（布局）</h4><p>当你每一次使用代码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new paper</span><br></pre></td></tr></tbody></table></figure><p>它其实默认使用的是 <code>post</code>这个布局，也就是在 <code>source</code>文件夹下的 <code>_post</code>里面。</p><p>Hexo 有三种默认布局： <code>post</code>、 <code>page</code> 和 <code>draft</code>，它们分别对应不同的路径，而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><p>布局路径 <code>post</code> <code>source/_posts</code> <code>page</code> <code>source</code> <code>draft</code> <code>source/_drafts</code></p><p>而new这个命令其实是：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line">&lt;/title&gt;</span><br></pre></td></tr></tbody></table></figure><p>只不过这个layout默认是post罢了。</p><h5 id="page"><a href="#page" class="headerlink" title="page"></a>page</h5><p>如果你想另起一页，那么可以使用</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page board</span><br></pre></td></tr></tbody></table></figure><p>系统会自动给你在source文件夹下创建一个board文件夹，以及board文件夹中的index.md，这样你访问的board对应的链接就是 <code>http://xxx.xxx/board</code></p><h5 id="draft"><a href="#draft" class="headerlink" title="draft"></a>draft</h5><p>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft newpage</span><br></pre></td></tr></tbody></table></figure><p>这样会在source/_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></tbody></table></figure><p>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到post中，</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish draft newpage</span><br></pre></td></tr></tbody></table></figure><p>就会自动把newpage.md发送到post中。</p><h2 id="2-更换主题"><a href="#2-更换主题" class="headerlink" title="2. 更换主题"></a>2. 更换主题</h2><p>到这一步，如果你觉得默认的 <code>landscape</code>主题不好看，那么可以在官网的主题中，选择你喜欢的一个主题进行修改就可以啦。<a href="https://hexo.io/themes/">点这里</a></p><p><img src="https://img-blog.csdnimg.cn/img_convert/5499f5c70d21f130e51c5568de3549e2.png"></p><p>这里有200多个主题可以选。不过最受欢迎的就是那么几个，比如<a href="https://github.com/theme-next/hexo-theme-next">NexT主题</a>，非常的简洁好看，大多数人都选择这个，关于这个的教程也比较多。不过我选择的是<a href="https://github.com/ppoffice/hexo-theme-hueman">hueman</a>这个主题，好像是从WordPress移植过来的，展示效果如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/243c5e2ca51f4e8b6f5ea3037b2d667a.png"></p><p>不管怎么样，至少是符合我个人的审美。</p><p>直接在github链接上下载下来，然后放到 <code>theme</code>文件夹下就行了，然后再在刚才说的配置文件中把 <code>theme</code>换成那个主题文件夹的名字，它就会自动在 <code>theme</code>文件夹中搜索你配置的主题。</p><p>而后进入 <code>hueman</code>这个文件夹，可以看到里面也有一个配置文件 <code>_config.xml</code>，貌似它默认是 <code>_config.xml.example</code>，把它复制一份，重命名为 <code>_config.xml</code>就可以了。这个配置文件是修改你整个主题的配置文件。</p><h4 id="menu（菜单栏）"><a href="#menu（菜单栏）" class="headerlink" title="menu（菜单栏）"></a>menu（菜单栏）</h4><p>也就是上面菜单栏上的这些东西。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/24081eeae96804090f36d58284a1b13a.png"></p><p>其中，About这个你是找不到网页的，因为你的文章中没有about这个东西。如果你想要的话，可以执行命令</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></tbody></table></figure><p>它就会在根目录下 <code>source</code>文件夹中新建了一个 <code>about</code>文件夹，以及index.md，在index.md中写上你想要写的东西，就可以在网站上展示出来了。</p><p>如果你想要自己再自定义一个菜单栏的选项，那么就</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page yourdiy</span><br></pre></td></tr></tbody></table></figure><p>然后在主题配置文件的menu菜单栏添加一个 <code>Yourdiy : /yourdiy</code>，注意冒号后面要有空格，以及前面的空格要和menu中默认的保持整齐。然后在 <code>languages</code>文件夹中，找到 <code>zh-CN.yml</code>，在index中添加 <code>yourdiy: '&amp;#x4E2D;&amp;#x6587;&amp;#x610F;&amp;#x601D;'</code>就可以显示中文了。</p><h4 id="customize-定制"><a href="#customize-定制" class="headerlink" title="customize(定制)"></a>customize(定制)</h4><p>在这里可以修改你的个人logo，默认是那个hueman，在 <code>source/css/images</code>文件夹中放入自己要的logo，再改一下 <code>url</code>的链接名字就可以了。</p><p><code>favicon</code>是网站中出现的那个小图标的icon，找一张你喜欢的logo，然后转换成ico格式，放在images文件夹下，配置一下路径就行。</p><p><code>social_links</code> ，可以显示你的社交链接，而且是有logo的。</p><p><strong>tips:</strong></p><p>在这里可以添加一个rss功能，也就是那个符号像wifi一样的东西。</p><h4 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h4><p><strong>1. 什么是RSS？</strong></p><p>RSS也就是订阅功能，你可以理解为类似与订阅公众号的功能，来订阅各种博客，杂志等等。</p><p><strong>2. 为什么要用RSS？</strong></p><p>就如同订阅公众号一样，你对某个公众号感兴趣，你总不可能一直时不时搜索这个公众号来看它的文章吧。博客也是一样，如果你喜欢某个博主，或者某个平台的内容，你可以通过RSS订阅它们，然后在RSS阅读器上可以实时推送这些消息。现在网上的垃圾消息太多了，如果你每一天都在看这些消息中度过，漫无目的的浏览，只会让你的时间一点一点的流逝，太不值得了。如果你关注的博主每次都发的消息都是精华，而且不是每一天十几条几十条的轰炸你，那么这个博主就值得你的关注，你就可以通过RSS订阅他。</p><p>在我的理解中，如果你不想每天都被那些没有质量的消息轰炸，只想安安静静的关注几个博主，每天看一些有质量的内容也不用太多，那么RSS订阅值得你的拥有。</p><p><strong>3. 添加RSS功能</strong></p><p>先安装RSS插件</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-generator-feed</span><br></pre></td></tr></tbody></table></figure><p>而后在你整个项目的 <code>_config.yml</code>中找到Extensions，添加：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">#RSS&amp;#x8BA2;&amp;#x9605;</span><br><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br></pre></td></tr></tbody></table></figure><p>这个时候你的RSS链接就是 域名 <code>/atom.xml</code>了。</p><p>所以，在主题配置文件中的这个 <code>social links</code>，开启RSS的页面功能，这样你网站上就有那个像wifi一样符号的RSS logo了，注意空格。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></tbody></table></figure><p><strong>4. 如何关注RSS？</strong></p><p>首先，你需要一个RSS阅读器，在这里我推荐 <code>inoreader</code>，宇宙第一RSS阅读器，而且中文支持的挺好。不过它没有PC端的程序，只有网页版，chrome上有插件。在官网上用google账号或者自己注册账号登录，就可以开始你的关注之旅了。</p><p>每次需要关注某个博主时，就点开他的RSS链接，把链接复制到 <code>inoreader</code>上，就能关注了，当然，如果是比较大众化的很厉害的博主，你直接搜名字也可以的，比如每个人都非常佩服的阮一峰大师，直接在阅读器上搜索 <code>&amp;#x962E;&amp;#x4E00;&amp;#x5CF0;</code>，应该就能出来了。</p><p>我关注的比如，阮一峰的网络日志，月光博客，知乎精选等，都很不错。当然，还有我！！赶快关注我吧！你值得拥有：<a href="http://fangzh.top/atom.xml">http://fangzh.top/atom.xml</a></p><p>在安卓端，inoreader也有下载，不过因为国内google是登录不了的，你需要在inoreader官网上把你的密码修改了，然后就可以用账户名和密码登录了。</p><p>在IOS端，没用过，好像是reader 3可以支持inoreader账户，还有个readon也不错，可以去试试。</p><h4 id="widgets-侧边栏"><a href="#widgets-侧边栏" class="headerlink" title="widgets(侧边栏)"></a>widgets(侧边栏)</h4><p>侧边栏的小标签，如果你想自己增加一个，比如我增加了一个联系方式，那么我把 <code>communication</code>写在上面，在 <code>zh-CN.yml</code>中的 <code>sidebar</code>，添加 <code>communication: '&amp;#x4E2D;&amp;#x6587;'</code>。</p><p>然后在 <code>hueman/layout/widget</code>中添加一个 <code>communicaiton.ejs</code>，填入模板：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (site.<span class="property">posts</span>.<span class="property">length</span>) { %&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"widget-wrap widget-list"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"widget-title"</span>&gt;</span>&lt;%= __('sidebar.communiation') %&gt;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"widget"</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="comment">&lt;!--这里添加你要写的内容--&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;% } %&gt;</span><br></pre></td></tr></tbody></table></figure><h4 id="search-搜索框"><a href="#search-搜索框" class="headerlink" title="search(搜索框)"></a>search(搜索框)</h4><p>默认搜索框是不能够用的，</p><blockquote><p>you need to install <code>hexo-generator-json-content</code> before using Insight Search</p></blockquote><p>它已经告诉你了，如果想要使用，就安装这个插件。</p><h4 id="comment-评论系统"><a href="#comment-评论系统" class="headerlink" title="comment(评论系统)"></a>comment(评论系统)</h4><p>这里的多数都是国外的，基本用不了。这个 <code>valine</code>好像不错，还能统计文章阅读量，可以自己试一试，<a href="https://valine.js.org/quickstart.html#npm">链接</a>。</p><h4 id="miscellaneous-其他"><a href="#miscellaneous-其他" class="headerlink" title="miscellaneous(其他)"></a>miscellaneous(其他)</h4><p>这里我就改了一个 <code>links</code>，可以添加友链。注意空格要对！不然会报错！</p><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>整个主题看起来好像很复杂的样子，但是仔细捋一捋其实也比较流畅，</p><ul><li>languages: 顾名思义</li><li>layout：布局文件，其实后期想要修改自定义网站上的东西，添加各种各样的信息，主要是在这里修改，其中 <code>comment</code>是评论系统， <code>common</code>是常规的布局，最常修改的在这里面，比如修改页面 <code>head</code>和 <code>footer</code>的内容。</li><li>scripts：js脚本，暂时没什么用</li><li>source：里面放了一些css的样式，以及图片</li></ul><h2 id="3-git分支进行多终端工作"><a href="#3-git分支进行多终端工作" class="headerlink" title="3. git分支进行多终端工作"></a>3. git分支进行多终端工作</h2><p>问题来了，如果你现在在自己的笔记本上写的博客，部署在了网站上，那么你在家里用台式机，或者实验室的台式机，发现你电脑里面没有博客的文件，或者要换电脑了，最后不知道怎么移动文件，怎么办？</p><p>在这里我们就可以利用git的分支系统进行多终端工作了，这样每次打开不一样的电脑，只需要进行简单的配置和在github上把文件同步下来，就可以无缝操作了。</p><h4 id="机制"><a href="#机制" class="headerlink" title="机制"></a>机制</h4><p>机制是这样的，由于 <code>hexo d</code>上传部署到github的其实是hexo编译后的文件，是用来生成网页的，不包含源文件。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a043c79e9e69631259014b633a308776.png"></p><p>也就是上传的是在本地目录里自动生成的 <code>.deploy_git</code>里面。</p><p>其他文件 ，包括我们写在source 里面的，和配置文件，主题文件，都没有上传到github</p><p><img src="https://img-blog.csdnimg.cn/img_convert/de6cb5a609ae31f7b871075a65fb9d08.png"></p><p>所以可以利用git的分支管理，将源文件上传到github的另一个分支即可。</p><h4 id="上传分支"><a href="#上传分支" class="headerlink" title="; 上传分支"></a><a name="_645">;</a> 上传分支</h4><p>首先，先在github上新建一个hexo分支，如图：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/9ef237aa346708b1f641902595664ec4.png"></p><p>然后在这个仓库的settings中，选择默认分支为hexo分支（这样每次同步的时候就不用指定分支，比较方便）。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/379e8bad592c693dc06066fcca13b625.png"></p><p>然后在本地的任意目录下，打开git bash，</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:ZJUFangzh/ZJUFangzh.github.io.git</span><br></pre></td></tr></tbody></table></figure><p>将其克隆到本地，因为默认分支已经设成了hexo，所以clone时只clone了hexo。</p><p>接下来在克隆到本地的 <code>ZJUFangzh.github.io</code>中，把除了.git 文件夹外的所有文件都删掉</p><p>把之前我们写的博客源文件全部复制过来，除了 <code>.deploy_git</code>。这里应该说一句，复制过来的源文件应该有一个 <code>.gitignore</code>，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上如下，表示这些类型文件不需要git：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></tbody></table></figure><p>注意，如果你之前克隆过theme中的主题文件，那么应该把主题文件中的 <code>.git</code>文件夹删掉，因为git不能嵌套上传，最好是显示隐藏文件，检查一下有没有，否则上传的时候会出错，导致你的主题文件无法上传，这样你的配置在别的电脑上就用不了了。</p><p>而后</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit –m "add branch"</span><br><span class="line">git push</span><br></pre></td></tr></tbody></table></figure><p>这样就上传完了，可以去你的github上看一看hexo分支有没有上传上去，其中 <code>node_modules</code>、 <code>public</code>、 <code>db.json</code>已经被忽略掉了，没有关系，不需要上传的，因为在别的电脑上需要重新输入命令安装 。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/0039e2039209460ea6e15deb7e47bdaa.png"></p><p>这样就上传完了。</p><h4 id="更换电脑操作"><a href="#更换电脑操作" class="headerlink" title="更换电脑操作"></a>更换电脑操作</h4><p>一样的，跟之前的环境搭建一样，</p><ul><li>安装git</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></tbody></table></figure><ul><li>设置git全局邮箱和用户名</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "yourgithubname"</span><br><span class="line">git config --global user.email "yourgithubemail"</span><br></pre></td></tr></tbody></table></figure><ul><li>设置ssh key</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "youremail"</span><br><span class="line">#&amp;#x751F;&amp;#x6210;&amp;#x540E;&amp;#x586B;&amp;#x5230;github&amp;#x548C;coding&amp;#x4E0A;&amp;#xFF08;&amp;#x6709;coding&amp;#x5E73;&amp;#x53F0;&amp;#x7684;&amp;#x8BDD;&amp;#xFF09;</span><br><span class="line">#&amp;#x9A8C;&amp;#x8BC1;&amp;#x662F;&amp;#x5426;&amp;#x6210;&amp;#x529F;</span><br><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@git.coding.net #(&amp;#x6709;coding&amp;#x5E73;&amp;#x53F0;&amp;#x7684;&amp;#x8BDD;)</span><br></pre></td></tr></tbody></table></figure><ul><li>安装nodejs</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></tbody></table></figure><ul><li>安装hexo</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-cli -g</span><br></pre></td></tr></tbody></table></figure><p>但是已经不需要初始化了，</p><p>直接在任意文件夹下，</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;</span><br></pre></td></tr></tbody></table></figure><p>然后进入克隆到的文件夹：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd xxx.github.io</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure><p>生成，部署：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><p>然后就可以开始写你的新博客了</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new newpage</span><br></pre></td></tr></tbody></table></figure><p><strong>Tips:</strong></p><ol><li>不要忘了，每次写完最好都把源文件上传一下</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit &amp;#x2013;m "xxxx"</span><br><span class="line">git push</span><br></pre></td></tr></tbody></table></figure><ol><li>如果是在已经编辑过的电脑上，已经有clone文件夹了，那么，每次只要和远端同步一下就行了</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></tbody></table></figure><h2 id="4-coding-page上部署实现国内外分流"><a href="#4-coding-page上部署实现国内外分流" class="headerlink" title="4. coding page上部署实现国内外分流"></a>4. coding page上部署实现国内外分流</h2><p>之前我们已经把hexo托管在github了，但是github是国外的，而且百度的爬虫是不能够爬取github的，所以如果你希望你做的博客能够在百度引擎上被收录，而且想要更快的访问，那么可以在国内的coding page做一个托管，这样在国内访问就是coding page，国外就走github page。</p><p><strong>1. 申请coding账户，新建项目</strong></p><p>先申请一个账户，然后创建新的项目，这一步项目名称应该是随意的。</p><p><strong>2. 添加ssh key</strong></p><p>这一步跟github一样。</p><p>添加后，检查一下是不是添加成功</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@git.coding.net</span><br></pre></td></tr></tbody></table></figure><p><strong>3. 修改_config.yml</strong></p><p>hexo官方文档是这样的：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  message: [message]</span><br><span class="line">  repo:</span><br><span class="line">    github: &lt;repository url&gt;,[branch]</span><br><span class="line">    coding: &lt;repository url&gt;,[branch]</span><br><span class="line">&lt;/repository&gt;&lt;/repository&gt;</span><br></pre></td></tr></tbody></table></figure><p>那么，我们只需要：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">    coding: git@git.coding.net:ZJUFangzh/ZJUFangzh.git,master</span><br><span class="line">    github: git@github.com:ZJUFangzh/ZJUFangzh.github.io.git,master</span><br></pre></td></tr></tbody></table></figure><p><strong>4. 部署</strong></p><p>保存一下，直接</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><p>这样就可以在coding的项目上看到你部署的文件了。</p><p><strong>5. 开启coding pages服务，绑定域名</strong></p><p>如图：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/10a1bbb64e8a644bafb91a2cc772e5a3.png"></p><p><strong>6. 阿里云添加解析</strong></p><p><img src="https://img-blog.csdnimg.cn/img_convert/74c4eee3ea9dde8c1cecbaadf05d2f9a.png"></p><p>这个时候就可以把之前github的解析改成境外，把coding的解析设为默认了。</p><p><strong>7. 去除coding page的跳转广告</strong></p><p>coding page的一个比较恶心人的地方就是，你只是银牌会员的话，访问会先跳转到一个广告，再到你自己的域名。那么它也给出了消除的办法。右上角切换到coding的旧版界面，默认新版是不行的。然后再来到 <code>pages&amp;#x670D;&amp;#x52A1;</code>这里。</p><p>这里：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/30b3a764555f9c5b36c5a92c786b8719.png"></p><p>只要你在页面上添加一行文字，写 <code>Hosted by Coding Pages</code>，然后点下面的小勾勾，两个工作日内它就会审核通过了。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Hosted by &lt;a href="https://pages.coding.me" style="font-weight: bold"&gt;Coding Pages&lt;/a&gt;&lt;/p&gt;</span><br></pre></td></tr></tbody></table></figure><p>我的选择是把这一行代码放在主题文件夹 <code>/layout/common/footer.ejs</code>里面，也就是本来在页面中看到的页脚部分。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/cd1a623e7c46deaa5bf02c00f0dc53b5.png"></p><p>当然，为了统一，我又在后面加上了and <strong>Github</strong>哈哈，可以不加。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;span&gt;Hosted by &lt;a href="https://pages.coding.me" style="font-weight: bold"&gt;Coding Pages&lt;/a&gt;&lt;/span&gt; and &lt;span&gt;&lt;a href="https://github.com" style="font-weight: bold"&gt;Github&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;</span><br></pre></td></tr></tbody></table></figure><p>这是最终加上去的代码。</p><h2 id="第三部分"><a href="#第三部分" class="headerlink" title="第三部分"></a>第三部分</h2><p>hexo添加各种功能，包括搜索的SEO，阅读量统计，访问量统计和评论系统等。</p><p>本文参考了: <a href="http://visugar.com/2017/08/01/20170801HexoPlugins/">visugar.com</a>这里面说的很详细了。</p><h2 id="1-SEO优化"><a href="#1-SEO优化" class="headerlink" title="1. SEO优化"></a>1. SEO优化</h2><p>推广是很麻烦的事情，怎么样别人才能知道我们呢，首先需要让搜索引擎收录你的这个网站，别人才能搜索的到。那么这就需要SEO优化了。</p><blockquote><p>SEO是由英文Search Engine Optimization缩写而来， 中文意译为”搜索引擎优化”。SEO是指通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化。</p></blockquote><h4 id="百度seo"><a href="#百度seo" class="headerlink" title="百度seo"></a>百度seo</h4><p>刚建站的时候是没有搜索引擎收录我们的网站的。可以在搜索引擎中输入 <code>site:&lt;域名&gt;&lt;/域名&gt;</code></p><p>来查看一下。</p><p><strong>1. 登录百度站长平台添加网站</strong></p><p>登录<a href="https://ziyuan.baidu.com/linksubmit/index">百度站长平台</a>，在站点管理中添加你自己的网站。</p><p>验证网站有三种方式：文件验证、HTML标签验证、CNAME验证。</p><p>第三种方式最简单，只要将它提供给你的那个xxxxx使用CNAME解析到xxx.baidu.com就可以了。也就是登录你的阿里云，把这个解析填进去就OK了。</p><p><strong>2. 提交链接</strong></p><p>我们需要使用npm自动生成网站的sitemap，然后将生成的sitemap提交到百度和其他搜索引擎</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></tbody></table></figure><p>这时候你需要在你的根目录下 <code>_config.xml</code>中看看url有没有改成你自己的：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d15a2de073246209dee33dfd74fc7505.png"></p><p>重新部署后，就可以在public文件夹下看到生成的sitemap.xml和baidusitemap.xml了。</p><p>然后就可以向百度提交你的站点地图了。</p><p>这里建议使用自动提交。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/e9c830bf284910f23b9c8f8505395a3c.png"></p><p>自动提交又分为三种：主动推送、自动推送、sitemap。</p><p>可以三个一起提交不要紧，我选择的是后两种。</p><ul><li>自动推送：把百度生成的自动推送代码，放在主题文件 <code>/layout/common/head.ejs</code>的适当位置，然后验证一下就可以了。</li><li>sitemap：把两个sitemap地址，提交上去，看到状态正常就OK了。</li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/bb66cfa619e41b4598a0598f3bbdeb4a.png"></p><p><strong>ps:</strong> 百度收录比较慢，慢慢等个十天半个月再去 <code>site:&lt;域名&gt;&lt;/域名&gt;</code>看看有没有被收录。</p><h4 id="google的SEO"><a href="#google的SEO" class="headerlink" title="google的SEO"></a>google的SEO</h4><p>流程一样，google更简单，而且收录更快，进入<a href="https://search.google.com/search-console/sitemaps?resource_id=http://fangzh.top/&amp;hl=zh-CN">google站点地图</a>，提交网站和sitemap.xml，就可以了。</p><p>如果你这个域名在google这里出了问题，那你就提交 yourname.github.io，这个链接，效果是一样的。</p><p>不出意外的话一天内google就能收录你的网站了。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/57a23694869f490d30d4f6fd9dcf7a68.png"></p><p>其他的搜索，如搜狗搜索，360搜索，流程是一样的，这里就不再赘述。</p><h2 id="2-评论系统"><a href="#2-评论系统" class="headerlink" title=";  2. 评论系统"></a><a name="2__980">;</a>  2. 评论系统</h2><p>评论系统有很多，但是很多都是墙外的用不了，之前说过这个valine好像集成在hueman和next主题里面了，但是我还没有研究过，我看的是<a href="http://visugar.com/2017/08/01/20170801HexoPlugins/">visugar</a>这个博主用的来比力评论系统，感觉也还不错。</p><p><a href="https://livere.com/">来比力官网</a>，注册好后，点击管理页面，在 <code>&amp;#x4EE3;&amp;#x7801;&amp;#x7BA1;&amp;#x7406;</code>中找到安装代码：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/4b68111ca1736e5aee54974763fd2ba0.png"></p><p>获取安装代码后，在主题的comment下新建一个文件放入刚刚那段代码，再找到article文件，找到如下代码，若没有则直接在footer后面添加即可。livebe即为刚刚所创文件名称。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- partial('comment livebe') %&gt;</span><br><span class="line">&lt;/%-&gt;</span><br></pre></td></tr></tbody></table></figure><p>然后可以自己设置一些东西：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/341c058799572737832bdfb661b883d5.png"></p><p>还可以设置评论提醒，这样别人评论你的时候就可以及时知道了。</p><h2 id="3-添加百度统计"><a href="#3-添加百度统计" class="headerlink" title="3. 添加百度统计"></a>3. 添加百度统计</h2><p>百度统计可以在后台上看到你网站的访问数，浏览量，浏览链接分布等很重要的信息。所以添加百度统计能更有效的让你掌握你的网站情况。</p><p><a href="https://tongji.baidu.com/">百度统计</a>，注册一下，这里的账号好像和百度账号不是一起的。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/78605ca97255b53fd75d90f8b0fc858d.png"></p><p>照样把代码复制到 <code>head.ejs</code>文件中，然后再进行一下安装检查，半小时左右就可以在百度统计里面看到自己的网站信息了。</p><h2 id="4-文章阅读量统计leanCloud"><a href="#4-文章阅读量统计leanCloud" class="headerlink" title=";  4. 文章阅读量统计leanCloud"></a><a name="4_leancloud_1026">;</a>  4. 文章阅读量统计leanCloud</h2><p><a href="https://leancloud.cn/">leanCloud</a>，进去后注册一下，进入后创建一个应用：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/fda4f72f190ff5910ff790b05641096c.png"></p><p>在 <code>&amp;#x5B58;&amp;#x50A8;</code>中创建Class，命名为Counter,</p><p><img src="https://img-blog.csdnimg.cn/img_convert/16843063bfd1ae6f2e743001bc06067e.png"></p><p>然后在设置页面看到你的 <code>&amp;#x5E94;&amp;#x7528;Key</code>，在主题的配置文件中：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: &amp;#x4F60;&amp;#x7684;id</span><br><span class="line">  app_key: &amp;#x4F60;&amp;#x7684;key</span><br></pre></td></tr></tbody></table></figure><p>在 <code>article.ejs</code>中适当的位置添加如下，这要看你让文章的阅读量统计显示在哪个地方了，</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#x9605;&amp;#x8BFB;&amp;#x6570;&amp;#x91CF;:&amp;#x6B21;</span><br></pre></td></tr></tbody></table></figure><p>然后在 <code>footer.ejs</code>的最后，添加：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src="//cdn1.lncld.net/static/js/2.5.0/av-min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var APP_ID = '你的app id';</span><br><span class="line">    var APP_KEY = '你的app key';</span><br><span class="line">    AV.init({</span><br><span class="line">        appId: APP_ID,</span><br><span class="line">        appKey: APP_KEY</span><br><span class="line">    });</span><br><span class="line">    // 显示次数</span><br><span class="line">    function showTime(Counter) {</span><br><span class="line">        var query = new AV.Query("Counter");</span><br><span class="line">        if($(".leancloud_visitors").length &gt; 0){</span><br><span class="line">            var url = $(".leancloud_visitors").attr('id').trim();</span><br><span class="line">            // where field</span><br><span class="line">            query.equalTo("words", url);</span><br><span class="line">            // count</span><br><span class="line">            query.count().then(function (number) {</span><br><span class="line">                // There are number instances of MyClass where words equals url.</span><br><span class="line"></span><br><span class="line">                $(document.getElementById(url)).text(number?  number : '--');</span><br><span class="line">            }, function (error) {</span><br><span class="line">                // error is an instance of AVError.</span><br><span class="line"></span><br><span class="line">            });</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    // 追加pv</span><br><span class="line">    function addCount(Counter) {</span><br><span class="line">        var url = $(".leancloud_visitors").length &gt; 0 ? $(".leancloud_visitors").attr('id').trim() : 'icafebolger.com';</span><br><span class="line">        var Counter = AV.Object.extend("Counter");</span><br><span class="line">        var query = new Counter;</span><br><span class="line">        query.save({</span><br><span class="line">            words: url</span><br><span class="line">        }).then(function (object) {</span><br><span class="line">        })</span><br><span class="line">    }</span><br><span class="line">    $(function () {</span><br><span class="line">        var Counter = AV.Object.extend("Counter");</span><br><span class="line">        addCount(Counter);</span><br><span class="line">        showTime(Counter);</span><br><span class="line">    });</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>重新部署后就可以了。</p><h2 id="5-引入不蒜子访问量和访问人次统计"><a href="#5-引入不蒜子访问量和访问人次统计" class="headerlink" title="5. 引入不蒜子访问量和访问人次统计"></a>5. 引入不蒜子访问量和访问人次统计</h2><p>不蒜子的添加非常非常方便，<a href="http://busuanzi.ibruce.info/">不蒜子</a></p><p>在 <code>footer.ejs</code>中的合适位置，看你要显示在哪个地方，添加：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--这一段是不蒜子的访问量统计代码--&gt;</span><br><span class="line">&lt;script async src="//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;span id="busuanzi_container_site_pv"&gt;&amp;#x672C;&amp;#x7AD9;&amp;#x603B;&amp;#x8BBF;&amp;#x95EE;&amp;#x91CF;&amp;#x6B21; &amp;#xA0;   &lt;/span&gt;</span><br><span class="line">&lt;span id="busuanzi_container_site_uv"&gt;&amp;#x8BBF;&amp;#x5BA2;&amp;#x6570;&amp;#x4EBA;&amp;#x6B21;&lt;/span&gt;</span><br></pre></td></tr></tbody></table></figure><p>就可以了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>到这里就基本做完了。其实都是参考别的博主的设置的，不一定仅限于hueman主题，其他主题的设置也是大体相同的，所以如果你希望设置别的主题，那么仔细看一下这个主题的代码结构，也能够把上边的功能添加进去。</p><p>多看看别的博主的那些功能，如果有你能找到自己喜欢的功能，那么好好发动搜索技能，很快就能找到怎么做了。加油吧！</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare Pages + Hexo 搭建个人博客</title>
      <link href="/2024/05/31/18142/"/>
      <url>/2024/05/31/18142/</url>
      
        <content type="html"><![CDATA[<h1 id="Cloudflare-Pages-Hexo-搭建个人博客"><a href="#Cloudflare-Pages-Hexo-搭建个人博客" class="headerlink" title="Cloudflare Pages + Hexo 搭建个人博客"></a>Cloudflare Pages + Hexo 搭建个人博客</h1><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>官网：<a href="https://hexo.io/zh-cn/">Hexo</a></p><p>Hexo 是一个基于 Node. js 的静态网站生成器，它可以让你快速、简单地搭建个人博客或静态网站。Hexo 使用 Markdown（或其他类似的标记语言）来书写内容，并通过模板引擎将这些内容转换成静态网页。</p><p>一些主要的特点包括：</p><ol><li><strong>快速搭建</strong>：Hexo 具有快速搭建网站的特点，可以帮助你快速创建个人博客或者静态网站。</li><li><strong>Markdown</strong>：Hexo 支持使用 Markdown 格式来书写内容，使得发布文章变得非常方便。</li><li><strong>主题支持</strong>：Hexo 拥有丰富的主题支持，用户可以根据自己的喜好选择合适的主题来呈现自己的网站内容。</li><li><strong>插件系统</strong>：Hexo 具备丰富的插件系统，可以方便地扩展各种功能，例如 SEO 优化、社交分享、页面统计等。</li><li><strong>静态网站</strong>：Hexo 生成的是静态网页，这意味着网站运行速度较快，且更易于部署和备份。</li></ol><p>总的来说，Hexo 是一个简单、高效的静态网站生成器，适合那些喜欢书写内容、追求效率，并且希望快速搭建个人博客或静态网站的用户使用。</p><h2 id="Cloudflare-Pages"><a href="#Cloudflare-Pages" class="headerlink" title="Cloudflare Pages"></a>Cloudflare Pages</h2><p><strong>Cloudflare Pages</strong> 是一个由 Cloudflare 提供的静态网站部署服务。它允许用户轻松地将静态网站部署到 Cloudflare 的全球内容分发网络（CDN）上。</p><p>相对于 <strong>GitHub Pages</strong>，Cloudflare Pages 的优势主要体现在以下几个方面：</p><ol><li><strong>CDN 覆盖范围</strong>：Cloudflare 在中国大陆拥有合规的 CDN 服务，这意味着您的网站可以通过 Cloudflare 在中国获得更好的访问性能，因为 Cloudflare 在全国各地都拥有较广泛的 CDN 点。</li><li><strong>性能与稳定性</strong>：Cloudflare 的 CDN 架构致力于提供更快的加载速度和更好的可用性，并通过优化网络效率来提高页面交付速度。</li><li><strong>安全性</strong>：Cloudflare 不仅仅提供 CDN，还提供安全防护、SSL 加密等服务，这些服务可以帮助保护您的网站免受 DDoS 攻击等安全威胁。</li><li><strong>全球网络优势</strong>：Cloudflare 在全球拥有大量的数据中心，能够更好地为全球用户提供稳定的访问体验。</li></ol><p>另外，Cloudflare 还提供了一定量的免费存储服务 R2，如果你愿意的话还可以把你的图床部署在这里。</p><h1 id="本地搭建"><a href="#本地搭建" class="headerlink" title="本地搭建"></a>本地搭建</h1><h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><p>在部署 Hexo 之前，首先需要安装 Git 和 Node.js 服务。如果你尚未安装这些服务，你可以通过以下链接下载并安装：</p><ul><li>Git：<a href="https://git-scm.com/downloads">Git - Downloads (git-scm.com)</a></li><li>NodeJs：<a href="https://nodejs.org/en">Node.js (nodejs.org)</a></li></ul><p>这两个软件都提供了一键式安装程序，只需一直点击”下一步”即可完成安装。</p><p>安装完成后，你可以在控制台使用命令 <code>git -v</code> 与 <code>npm -v</code> 分别验证 Git 与 NodeJs 是否安装成功。</p><p>之后你需要拥有 Github 与 Cloudflare 的账号，其中 Cloudflare 可能需要付款方式验证，如果没有 Visa 信用卡的话可以使用 PayPal 进行验证，下面是两者的官网：</p><ul><li><a href="https://github.com/">GitHub</a></li><li><a href="https://dash.cloudflare.com/login">Cloudflare | Web Performance &amp; Security</a></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>*<em>在 Github 中创建一个新项目用于存储 Hexo 博客</em></li></ul><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051751260.png"></p><ul><li>*<em>在本地同步这个项目</em></li></ul><p>在想要同步的目录右键打开控制台</p><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051752842.png"></p><p>获取项目链接</p><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051753097.png"></p><p>使用 <code>git clone &amp;#x201C;&amp;#x9879;&amp;#x76EE;&amp;#x5730;&amp;#x5740;&amp;#x201D;</code> 同步项目到本地</p><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051754170.png"></p><ul><li>*<em>生成 Hexo 项目</em></li></ul><p>保持控制台工作目录依次执行一下命令</p><ol><li>安装 hexo-cli， <code>npm install hexo-cli -g</code></li><li>hexo 初始化， <code>hexo init blog</code>，其中 blog 是你的项目名</li><li>进入项目目录， <code>cd blog</code>，其中 blog 是你的项目名</li><li>项目安装， <code>npm install</code></li><li>启动测试， <code>hexo server</code></li></ol><p>执行完毕后项目文件夹下应该生成很多新文件，类似下图的结构</p><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051803902.png"></p><p>执行 <code>hexo server</code> 后出现一下结果说明项目创建成功，访问 localhost: 4000 即可访问本地博客</p><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051805101.png"></p><h1 id="Hexo-详细用法"><a href="#Hexo-详细用法" class="headerlink" title="Hexo 详细用法"></a>Hexo 详细用法</h1><p>Hexo 文档：<a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li><code>hexo new</code><br>在项目目录中打开控制台输入 <code>hexo new "First post"</code></li></ul><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051810801.png"></p><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051810645.png"></p><p>在项目的 <code>\source\_posts\</code> 目录下就会创建对应文章的 markdown 文章，上面自带部分就是 Hexo 识别文章的核心 Front-matter，它用于标识文章的分类、Tags、标题、创建日期等关键信息，下一章会详细介绍这个部分。</p><ul><li><code>hexo clean</code><br>用于清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</li></ul><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><ul><li><code>hexo generate</code><br>用于生成静态文件，该命令可以简写为 <code>hexo g</code></li><li><code>hexo server</code><br>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。该命令可以简写为 <code>hexo s</code></li><li><code>hexo depoly</code><br><strong>部署网站，构建在 Pages 的服务器中</strong>。该命令可以简写为 <code>hexo d</code></li></ul><h2 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h2><p>参数 描述 默认值 <code>layout</code></p><p>布局<br><a href="https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0"><code>config.default_layout</code></a> <code>title</code></p><p>标题 文章的文件名 <code>date</code></p><p>建立日期 文件建立日期 <code>updated</code></p><p>更新日期 文件更新日期 <code>comments</code></p><p>开启文章的评论功能 <code>true</code> <code>tags</code></p><p>标签（不适用于分页） <code>categories</code></p><p>分类（不适用于分页） <code>permalink</code></p><p>覆盖文章的永久链接，永久链接应该以 <code>/</code> <code>.html</code></p><p>结尾 <code>null</code> <code>excerpt</code></p><p>纯文本的页面摘要。使用<br><a href="https://hexo.io/zh-cn/docs/tag-plugins#%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%92%8C%E6%88%AA%E6%96%AD">该插件</a></p><p>来格式化文本 <code>disableNunjucks</code></p><p>启用时禁用 Nunjucks 标签 <code>{{ }}</code> <code>{% %}</code><a href="https://hexo.io/zh-cn/docs/tag-plugins">标签插件</a></p><p>的渲染功能 false <code>lang</code></p><p>设置语言以覆盖<br><a href="https://hexo.io/zh-cn/docs/internationalization#%E8%B7%AF%E5%BE%84">自动检测</a></p><p>继承自 <code>_config.yml</code> <code>published</code></p><p>文章是否发布 对于 <code>_posts</code></p><p>下的文章为 <code>true</code></p><p>，对于 <code>_draft</code></p><p>下的文章为 <code>false</code></p><h2 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h2><p>Hexo 主题：<a href="https://hexo.io/themes/">Themes | Hexo</a></p><p>在 Hexo 官网你可以找到很多主题，找到你想要的主题点击即可进入对应主题项目的 Github 页面，跟后根据主题给出的引导配置即可完成安装。下面使用 shana 进行介绍。</p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git &lt;span class="hljs-built_in"&gt;clone&lt;/span&gt; https://github.com/ShanaMaid/hexo-theme-shana themes/shana</span><br></pre></td></tr></tbody></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>修改hexo根目录下的 <code>_config.yml</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`language: zh-CN`&lt;br&gt;&lt;br&gt;`theme: shana`</span><br></pre></td></tr></tbody></table></figure><p>同时将 <code>themes/shana/_source/</code>的 <code>tags</code>和 <code>categories</code>文件夹拷贝到hexo根目录下的 <code>source</code>文件夹下</p><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class="hljs-built_in"&gt;cd&lt;/span&gt; themes/shana&lt;br&gt;&lt;br&gt;git pull origin master</span><br></pre></td></tr></tbody></table></figure><p>然后创建对应主题的配置文件即可。</p><h1 id="部署到-Cloudflare"><a href="#部署到-Cloudflare" class="headerlink" title="部署到 Cloudflare"></a>部署到 Cloudflare</h1><ul><li>登录 Cloudflare 进入控制台页面，找到 Workers 和 Pages 并点击创建应用程序，</li></ul><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051826971.png"></p><ul><li>选择 Pages ，然后选择链接到 Git</li></ul><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051825816.png"></p><ul><li>然后选自存储你 Hexo 项目的仓库</li></ul><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051828281.png"></p><ul><li>部署构建项目<br>使用命令： <code>npm install -g hexo; hexo clean; hexo generate</code></li></ul><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051829835.png"></p><ul><li>构建完成后，你就可以使用 cf 生成的 <code>pages.dev</code> 二级域名来访问自己的博客了</li></ul><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051831816.png"></p><ul><li>将博客绑定到自己的域名</li></ul><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051832001.png"></p><p>之后你的域名 DNS 就会多一个你的博客的域名</p><p><img src="https://photo-jager.oss-cn-hangzhou.aliyuncs.com/img/PicGo/202401051834905.png"></p><p><strong>注意：自定义域名需要你拥有一个自己的域名，同时这个域名必须由 Cloudflare 托管</strong></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/348892754">使用 Hexo 和 Cloudflare 搭建你的博客 - 知乎 (zhihu.com)</a></li><li><a href="https://blog.misaka.rest/2023/02/01/hexo-cfpage/">将 Hexo 博客部署至 CloudFlare Pages | MisakaNo の 小破站</a></li><li><a href="https://blog.csdn.net/m0_58606834/article/details/126557292">Cloudflare Pages 搭建hexo_cloudflare pages搭建博客-CSDN博客</a></li><li><a href="https://blog.erma0.cn/2022/07/01/cloudflarepages-bu-shu-hexo/">用Cloudflare Pages部署hexo，白嫖不限量访问的博客 | 二毛のBlog (erma0.cn)</a><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript"> (function(d, s) {   var j, e = d.getElementsByTagName(s)[0];   if (typeof LivereTower === 'function') { return; }   j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;   e.parentNode.insertBefore(j, e); })(document, 'script');  </script></div></li></ol>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
            <tag> 转载 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft-纯净服务器搭建全流程</title>
      <link href="/2024/05/31/105138570/"/>
      <url>/2024/05/31/105138570/</url>
      
        <content type="html"><![CDATA[<h4 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h4><ul><li><a href="#-1">前言</a></li><li><ul><li><a href="#-8">相关介绍</a></li></ul></li><li><a href="#-26">一、服务器的租赁</a></li><li><a href="#-39">二、服务器和联机房间的区别</a></li><li><a href="#-51">三、服务器版本的选择</a></li><li><a href="#-58">四、服务器端的下载</a></li><li><a href="#spigot-70">五、服务端的使用(Spigot端)</a></li><li><a href="#-84">六、服务器的基础配置(非插件配置)</a></li><li><ul><li><a href="#1-serverproperties-86">[1]. server.properties配置</a></li><li><a href="#2-spigotyml-126">[2]. spigot.yml配置</a></li><li><a href="#3-runbat-278">[3]. Run.bat后台</a></li><li><a href="#4-opsjson-310">[4]. ops.json配置</a></li><li><a href="#5-bannedipsjson-327">[5]. banned-ips.json配置</a></li><li><a href="#6-bannedplayersjson-348">[6]. banned-players.json配置</a></li><li><a href="#7-whitelistjson-369">[7]. whitelist.json配置</a></li></ul></li><li><a href="#-383">七、服务器插件的下载渠道</a></li><li><a href="#-391">八、服务器插件的简单使用</a></li><li><a href="#-419">九、服务器插件介绍网站</a></li><li><a href="#-425">十、开启服务器</a></li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p><strong>Minecraft沙盒游戏，它不单单可以让玩家游戏，玩家还能自己创建MC的服务器来供其他的玩家联机。</strong></p></blockquote><blockquote><p>此篇文章主要是介绍一下 <strong>Spigot服务端的使用</strong>，有的新手服主会盲目地花钱购买服务端，然后购买之后又不懂如何操作，然后就花钱找了技术来帮忙，这样算下来的话开个MC服务器的成本会增加许多，与其购买服务端和花钱找技术还不如自己学会如何使用服务端，如果有任何问题的话可以在下方评论。</p></blockquote><blockquote><p>注： <code>&amp;#x56E0;&amp;#x4E3A;MC&amp;#x4E2D;&amp;#x6BCF;&amp;#x4E2A;&amp;#x63D2;&amp;#x4EF6;&amp;#x90FD;&amp;#x5404;&amp;#x6709;&amp;#x7279;&amp;#x8272;&amp;#xFF0C;&amp;#x6B64;&amp;#x5904;&amp;#x4EC5;&amp;#x63D0;&amp;#x4F9B;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&amp;#x6B64;&amp;#x6587;&amp;#x7AE0;&amp;#x662F;&amp;#x9488;&amp;#x5BF9;&amp;#x840C;&amp;#x65B0;&amp;#x670D;&amp;#x4E3B;&amp;#x5199;&amp;#x7684;&amp;#xFF0C;&amp;#x64CD;&amp;#x4F5C;&amp;#x6B65;&amp;#x9AA4;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x6709;&amp;#x4E9B;&amp;#x7E41;&amp;#x7410;&amp;#xFF0C;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E00;&amp;#x4E9B;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7AEF;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#xFF0C;&amp;#x63D2;&amp;#x4EF6;&amp;#x7684;&amp;#x5177;&amp;#x4F53;&amp;#x4F7F;&amp;#x7528;&amp;#x53EF;&amp;#x4EE5;&amp;#x53C2;&amp;#x8003;&amp;#x5176;&amp;#x4ED6;&amp;#x7684;&amp;#x6587;&amp;#x7AE0;&amp;#x3002;</code></p></blockquote><h3 id="相关介绍"><a href="#相关介绍" class="headerlink" title="相关介绍"></a>相关介绍</h3><p><a href="https://www.mcbbs.net/thread-61240-1-1.html"><strong>OP指令大全</strong></a></p><p><a href="https://blog.csdn.net/weixin_34352449/article/details/88705976">在Linux下搭建我的世界(Minecraft)服务器</a></p><p><a href="https://www.cnblogs.com/shiraka/p/14532465.html">linux云服务搭建Minecraft服务器</a></p><p><img src="https://img-blog.csdnimg.cn/20200324102239404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p><strong>Spigot服务端</strong>是我第一种接触的服务端，如果是新手服主的话推荐使用，可以从纯净服开始学习如何 <strong>搭建MC服务器</strong>和搭配好玩的 <strong>服务器插件</strong>，要是 <strong>mod服</strong>的话可以使用 <strong>Spong海绵端</strong>、 <strong>Catserver猫端</strong>等。</p></blockquote><blockquote><p>文章末尾有附带Spigot从 <strong>1.7~1.14.4版本</strong>的 <strong>服务端下载</strong>，如果出现没法获取分享文件的话，可能是我对网盘的内容进行了更新和分享，若网盘进行更新的话也会将新的网盘链接发在此文章下方。</p></blockquote><blockquote><p>注： <code>&amp;#x5176;&amp;#x5B9E;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7AEF;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&amp;#x548C;&amp;#x5728;&amp;#x4F60;&amp;#x7535;&amp;#x8111;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x5939;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&amp;#x76F8;&amp;#x5DEE;&amp;#x65E0;&amp;#x51E0;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x60F3;&amp;#x8981;&amp;#x771F;&amp;#x6B63;&amp;#x4E86;&amp;#x89E3;MC&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x8BDD;&amp;#xFF0C;&amp;#x5EFA;&amp;#x8BAE;&amp;#x4E0D;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x9762;&amp;#x677F;&amp;#x670D;&amp;#x6765;&amp;#x5F00;&amp;#x670D;&amp;#x3002;&amp;#x5F88;&amp;#x591A;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x529F;&amp;#x80FD;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x90FD;&amp;#x662F;&amp;#x5BF9;&amp;#x63D2;&amp;#x4EF6;&amp;#x914D;&amp;#x7F6E;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x8981;&amp;#x60F3;&amp;#x5B66;&amp;#x4E60;&amp;#x7684;&amp;#x8BDD;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x4ED8;&amp;#x51FA;&amp;#x4E9B;&amp;#x65F6;&amp;#x95F4;</code></p></blockquote><h2 id="一、服务器的租赁"><a href="#一、服务器的租赁" class="headerlink" title="; 一、服务器的租赁"></a><a name="_26">;</a> 一、服务器的租赁</h2><blockquote><p>在没有在淘宝租赁服务器的时候，我自己有使用过 <strong>华为云</strong>和 <strong>阿里云</strong>，使用了公网IP后玩家还是没法进行连接（有可能是我配置的问题）<br>有需要的朋友可参考大佬文章<a href="https://www.bilibili.com/read/cv2913966/">华为云ECS开服教程</a></p></blockquote><blockquote><p>然后是使用的 <strong>端口映射软件</strong>，使用过好几个端口映射软件效果都很差、延迟很大，服务器里面只有2个人的时候都能卡爆。<br>有的云还可能会出现赚了服主的钱然后跑路的情况，你在选择租赁服务器的时候最好仔细斟酌一下。</p></blockquote><blockquote><p><strong>如果你想要去租一个服务器的话可以到淘宝中找</strong>，相比直接去租 <strong>华为云</strong>或 <strong>阿里云</strong>那种比较商用的服务器会划算些。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331100637772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p>目前网易我的世界有提供租赁服，你也可以到网易当中租赁，最高的配置是 <strong>40人每月120元</strong>。</p></blockquote><blockquote><p>网易租赁服的话现在只能开纯净服或插件服，而且需要对服务器内容进行变更的话是很难操作的，之前有使用过几个月租赁服，传入文件只能传到 <strong>Plugin文件夹</strong>下，而且不能下载服务器的文件到电脑中。</p></blockquote><h2 id="二、服务器和联机房间的区别"><a href="#二、服务器和联机房间的区别" class="headerlink" title="; 二、服务器和联机房间的区别"></a><a name="_39">;</a> 二、服务器和联机房间的区别</h2><blockquote><p>之前有用过多玩我的世界游戏盒子，在没有关闭之前玩家就能够创建自己的联机房间让其他玩家进行连接，目前网易也有这个功能。</p></blockquote><p>区别联机房间服务器1需要房主一直在线，不然其他玩家没法连接到相应的联机房间服务器只有后台是开启的，就算服主不在线，其他玩家也能够连接2没有后台有后台3玩家数据保存在房主的电脑中玩家的数据保存在服务器中，且能对其具体内容进行变更4主要通过Mod模组对游戏内容进行变更，和单人Mod生存类似通过Mod和插件对游戏进行变更，能够实现对游戏某个功能的具体变更，包括对玩家、怪物、游戏地图、游戏界面等。</p><h2 id="三、服务器版本的选择"><a href="#三、服务器版本的选择" class="headerlink" title="三、服务器版本的选择"></a>三、服务器版本的选择</h2><blockquote><p>目前比较有人玩的服务器版本是[1.7.10]、 [1.12.2]、[1.14.4]，服务器的版本并不是越高版本越好，按理来说 <strong>服务器的版本越高的话，对主机的性能要求越高</strong>，如果你只是想要和朋友一起玩的话可以去选择一个低版本的服务端。</p></blockquote><blockquote><p>服务器版本也对应了玩家的版本，如果服务器中没有加 [<strong>向上兼容版本</strong>]插件或是[<strong>向下兼容版本</strong>]插件的话，玩家使用的客户端只能和服务器端版本相同才能进入服务器。</p></blockquote><blockquote><p>注： <code>&amp;#x5982;&amp;#x679C;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x542B;&amp;#x6709;&amp;#x63D2;&amp;#x4EF6;&amp;#x7684;&amp;#x8BDD;&amp;#x79F0;&amp;#x4F5C;&amp;#x63D2;&amp;#x4EF6;&amp;#x670D;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x505A;&amp;#x5230;&amp;#x771F;&amp;#x6B63;&amp;#x7684;&amp;#x7EAF;&amp;#x51C0;&amp;#x670D;&amp;#x7684;&amp;#x8BDD;&amp;#xFF0C;&amp;#x73A9;&amp;#x5BB6;&amp;#x968F;&amp;#x4FBF;&amp;#x8F93;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x7BA1;&amp;#x7406;&amp;#x5458;&amp;#x7684;id&amp;#x90FD;&amp;#x80FD;&amp;#x76F4;&amp;#x63A5;&amp;#x767B;&amp;#x5F55;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x624D;&amp;#x9700;&amp;#x8981;&amp;#x6DFB;&amp;#x52A0;&amp;#x767B;&amp;#x5F55;&amp;#x63D2;&amp;#x4EF6;&amp;#x7B49;&amp;#x63D2;&amp;#x4EF6;&amp;#x3002; &amp;#x800C;Mod&amp;#x670D;&amp;#x662F;&amp;#x5728;&amp;#x63D2;&amp;#x4EF6;&amp;#x7684;&amp;#x57FA;&amp;#x7840;&amp;#x4E4B;&amp;#x4E0A;&amp;#x6DFB;&amp;#x52A0;&amp;#x4E86;Mod&amp;#xFF0C;&amp;#x672C;&amp;#x8D28;&amp;#x4E0A;Mod&amp;#x670D;&amp;#x548C;&amp;#x63D2;&amp;#x4EF6;&amp;#x670D;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&amp;#x76F8;&amp;#x5DEE;&amp;#x65E0;&amp;#x51E0;&amp;#xFF0C;&amp;#x90FD;&amp;#x5F97;&amp;#x6709;&amp;#x63D2;&amp;#x4EF6;&amp;#x914D;&amp;#x7F6E;&amp;#x53D8;&amp;#x66F4;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;</code></p></blockquote><h2 id="四、服务器端的下载"><a href="#四、服务器端的下载" class="headerlink" title="四、服务器端的下载"></a>四、服务器端的下载</h2><blockquote><p>服务器端的话，你可以到 <strong>淘宝网</strong>或者是去MC技术群找技术定制，不过 <strong>如果你是想要一个纯净插件服的话，文章末尾就有提供下载</strong>。</p></blockquote><blockquote><p>如果你是想要一个 <strong>免费的服务端</strong>的话，建议去 <strong>MCBBS论坛</strong>中寻找，论坛中的大部分的服务器端都是免费的，有一些是需要付 <strong>金粒</strong>的，金粒可以通过在论坛中发言获得，还有一些是需要访问外网去付费下载。<br>建议在MCBBS中注册一个账号，因为很多的帖子会隐藏服务端的下载，这个时候你就需要花费金粒或是提高等级来获取隐藏的内容。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331094538155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200331094500634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p>你可以在筛选框中选择自己需要的版本、服务器端类型等。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331094851893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><h2 id="五、服务端的使用-Spigot端"><a href="#五、服务端的使用-Spigot端" class="headerlink" title="; 五、服务端的使用(Spigot端)"></a><a name="spigot_70">;</a> 五、服务端的使用(Spigot端)</h2><blockquote><p>有时Spigot端是长这样的，文件数很少，说明是还没启动过后台的初始端。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331101316812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p>这时你需要打开eula.txt文件，把eula的值变更为true，然后点击Run.bat文件。<br>这个.bat文件打开后就是你服务器的后台了，.bat的文件名可以自己任意取。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331101500755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p>最后的服务器端大概长这样</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331104750132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p>上图中的文件夹 <strong>Plot</strong>、 <strong>world</strong>、 <strong>world_nether</strong>、 <strong>world_the_end</strong>、 <strong>zy</strong>这几个都是服务器的地图，如果你需要导入地图的话，直接把地图放在这个目录下即可。</p></blockquote><blockquote><p>其中的 <strong>plugins</strong>为插件文件夹， <strong>剩余的配置将在步骤六中介绍</strong>。</p></blockquote><h2 id="六、服务器的基础配置-非插件配置"><a href="#六、服务器的基础配置-非插件配置" class="headerlink" title="六、服务器的基础配置(非插件配置)"></a>六、服务器的基础配置(非插件配置)</h2><blockquote><p>下面有提到的配置了解一下，其他的配置不大需要了解。</p></blockquote><h3 id="1-server-properties配置"><a href="#1-server-properties配置" class="headerlink" title="[1]. server.properties配置"></a>[1]. server.properties配置</h3><blockquote><p>如果你需要在同一个主机开多个服务器的时候，你就需要变更配置中的服务器端口（默认的端口是25565），只要各个服务器的端口是不同的即可。</p></blockquote><p>（ _此配置的注释并非我原创，原帖的链接为_：<a href="https://blog.csdn.net/linjiayang2016/article/details/93885632">Server.properties</a>）</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">generator-settings=</span><br><span class="line">op-permission-level=<span class="number">4</span><span class="meta">#op的权限级别</span></span><br><span class="line">allow-nether=<span class="literal">true</span>#是否允许生成末地</span><br><span class="line">level-name=world#主世界文件夹名称</span><br><span class="line">enable-query=<span class="literal">false</span>#是否开启GameSpy4协议服务器监听器</span><br><span class="line">allow-flight=<span class="literal">true</span>#是否允许飞行</span><br><span class="line">announce-player-achievements=<span class="literal">true</span>#公布玩家成就信息</span><br><span class="line">server-port=<span class="number">25566</span>#服务器端口</span><br><span class="line">level-type=DEFAULT#世界类型</span><br><span class="line">enable-rcon=<span class="literal">false</span>#是否开启rcon监听</span><br><span class="line">force-gamemode=<span class="literal">false</span><span class="meta">#force游戏模式</span></span><br><span class="line">level-seed=#服务器种子</span><br><span class="line">server-ip=<span class="number">192.168</span><span class="number">.19</span><span class="number">.32</span>#服务器指向ip</span><br><span class="line">max-build-height=<span class="number">256</span>#建筑最大高度</span><br><span class="line">spawn-npcs=<span class="literal">false</span>#是否有主城NPC</span><br><span class="line">white-list=<span class="literal">false</span>#是否开启白名单</span><br><span class="line">spawn-animals=<span class="literal">true</span>#是否允许动物生成</span><br><span class="line">hardcore=<span class="literal">false</span>#是否开启极限模式</span><br><span class="line">snooper-enabled=<span class="literal">false</span>#是否给snoop.minecraft.net网站发送服务器数据，推荐关闭</span><br><span class="line">online-mode=<span class="literal">false</span>#是否联网游戏(非正版一定要改<span class="literal">false</span>)</span><br><span class="line">resource-pack=#服务器资源包下载地址</span><br><span class="line">pvp=<span class="literal">true</span>#是否开启pvp</span><br><span class="line">difficulty=<span class="number">3</span>#服务器难度 和平<span class="number">0</span>~<span class="number">3</span>困难(自行调整)</span><br><span class="line">enable-command-block=<span class="literal">true</span>#是否开启命令方块</span><br><span class="line">server-name=Server#服务器名称</span><br><span class="line">gamemode=<span class="number">0</span>#游戏模式</span><br><span class="line">player-idle-timeout=<span class="number">0</span>#服务器最长挂机时间</span><br><span class="line">max-players=<span class="number">20</span>#最大玩家数</span><br><span class="line">spawn-monsters=<span class="literal">true</span>#是否允许生成怪物</span><br><span class="line">generate-structures=<span class="literal">true</span>#是否生成建筑物</span><br><span class="line">view-distance=<span class="number">10</span>#可见距离</span><br><span class="line">motd=Server#服务器标语</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="2-spigot-yml配置"><a href="#2-spigot-yml配置" class="headerlink" title="[2]. spigot.yml配置"></a>[2]. spigot.yml配置</h3><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">config-version: <span class="number">8</span></span><br><span class="line">settings:</span><br><span class="line">  debug: <span class="literal">false</span></span><br><span class="line">  save-user-cache-on-stop-only: <span class="literal">false</span></span><br><span class="line">  sample-count: <span class="number">12</span></span><br><span class="line">  player-shuffle: <span class="number">0</span></span><br><span class="line">  user-cache-size: <span class="number">1000</span></span><br><span class="line">  <span class="type">int</span>-cache-limit: <span class="number">1024</span></span><br><span class="line">  netty-threads: <span class="number">4</span></span><br><span class="line">  attribute:</span><br><span class="line">    maxHealth: ##玩家可拥有的最大血量</span><br><span class="line">      max: <span class="number">2048.0</span></span><br><span class="line">    movementSpeed: ##玩家的最大速度</span><br><span class="line">      max: <span class="number">2048.0</span></span><br><span class="line">    attackDamage: ##玩家最大的攻击</span><br><span class="line">      max: <span class="number">2048.0</span></span><br><span class="line">  global-api-cache: <span class="literal">false</span></span><br><span class="line">  filter-creative-items: <span class="literal">true</span></span><br><span class="line">  ##移动错误的阈值</span><br><span class="line">  moved-wrongly-threshold: <span class="number">0.0625</span></span><br><span class="line">  ##移动速度的阈值</span><br><span class="line">  moved-too-quickly-threshold: <span class="number">100.0</span></span><br><span class="line">  ##是否跨服</span><br><span class="line">  bungeecord: <span class="literal">false</span></span><br><span class="line">  late-bind: <span class="literal">false</span></span><br><span class="line">  timeout-time: <span class="number">60</span></span><br><span class="line">  restart-on-crash: <span class="literal">true</span></span><br><span class="line">  restart-script: ./start.sh</span><br><span class="line">  moved-too-quickly-multiplier: <span class="number">10.0</span></span><br><span class="line">  item-dirty-ticks: <span class="number">20</span></span><br><span class="line">commands:</span><br><span class="line">  tab-complete: <span class="number">0</span></span><br><span class="line">  <span class="built_in">log</span>: <span class="literal">true</span></span><br><span class="line">  spam-exclusions:</span><br><span class="line">  - /skill</span><br><span class="line">  replace-commands:</span><br><span class="line">  - setblock</span><br><span class="line">  - summon</span><br><span class="line">  - testforblock</span><br><span class="line">  - tellraw</span><br><span class="line">  silent-commandblock-console: <span class="literal">false</span></span><br><span class="line">messages:</span><br><span class="line">  ##非白名单用户的提示</span><br><span class="line">  whitelist: You are not whitelisted on this server!</span><br><span class="line"></span><br><span class="line">  ##未知指令的提示</span><br><span class="line">  unknown-command: Unknown command. Type <span class="string">"/help"</span> <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">  ##服务器满人提示</span><br><span class="line">  server-full: The server is full!</span><br><span class="line"></span><br><span class="line">  ##玩家连接失败提示</span><br><span class="line">  outdated-client: Outdated client! Please use {<span class="number">0</span>}</span><br><span class="line">  ##该玩家已在服务器内的提示</span><br><span class="line">  outdated-server: Outdated server! I<span class="number">'</span>m still on {<span class="number">0</span>}</span><br><span class="line">  ##服务器重启提示</span><br><span class="line">  restart: Server is restarting</span><br><span class="line">stats:</span><br><span class="line">  disable-saving: <span class="literal">false</span></span><br><span class="line">  forced-stats: {}</span><br><span class="line">world-settings:##世界的设置</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    verbose: <span class="literal">true</span></span><br><span class="line">    view-distance: <span class="number">10</span></span><br><span class="line">    chunks-per-tick: <span class="number">650</span></span><br><span class="line">    clear-tick-<span class="built_in">list</span>: <span class="literal">false</span></span><br><span class="line">    merge-radius:</span><br><span class="line">      <span class="built_in">exp</span>: <span class="number">3.0</span></span><br><span class="line">      item: <span class="number">2.5</span></span><br><span class="line">    wither-spawn-sound-radius: <span class="number">0</span></span><br><span class="line">    arrow-despawn-rate: <span class="number">1200</span></span><br><span class="line">    item-despawn-rate: <span class="number">6000</span></span><br><span class="line">    enable-zombie-pigmen-portal-spawns: <span class="literal">true</span></span><br><span class="line">    hanging-tick-frequency: <span class="number">100</span></span><br><span class="line">    zombie-aggressive-towards-villager: <span class="literal">true</span></span><br><span class="line">    max-entity-collisions: <span class="number">8</span></span><br><span class="line">    dragon-death-sound-radius: <span class="number">0</span></span><br><span class="line">    seed-village: <span class="number">10387312</span></span><br><span class="line">    seed-feature: <span class="number">14357617</span></span><br><span class="line">    anti-xray:</span><br><span class="line">      enabled: <span class="literal">true</span></span><br><span class="line">      engine-mode: <span class="number">1</span></span><br><span class="line">      hide-blocks:</span><br><span class="line">      - <span class="number">14</span></span><br><span class="line">      - <span class="number">15</span></span><br><span class="line">      - <span class="number">16</span></span><br><span class="line">      - <span class="number">21</span></span><br><span class="line">      - <span class="number">48</span></span><br><span class="line">      - <span class="number">49</span></span><br><span class="line">      - <span class="number">54</span></span><br><span class="line">      - <span class="number">56</span></span><br><span class="line">      - <span class="number">73</span></span><br><span class="line">      - <span class="number">74</span></span><br><span class="line">      - <span class="number">82</span></span><br><span class="line">      - <span class="number">129</span></span><br><span class="line">      - <span class="number">130</span></span><br><span class="line">      replace-blocks:</span><br><span class="line">      - <span class="number">1</span></span><br><span class="line">      - <span class="number">5</span></span><br><span class="line">    hopper-alt-ticking: <span class="literal">false</span></span><br><span class="line">    ticks-per:</span><br><span class="line">      hopper-transfer: <span class="number">8</span></span><br><span class="line">      hopper-check: <span class="number">8</span></span><br><span class="line">    hopper-amount: <span class="number">1</span></span><br><span class="line">    mob-spawn-range: <span class="number">4</span></span><br><span class="line">    nerf-spawner-mobs: <span class="literal">false</span></span><br><span class="line">    growth:</span><br><span class="line">      cactus-modifier: <span class="number">100</span></span><br><span class="line">      cane-modifier: <span class="number">100</span></span><br><span class="line">      melon-modifier: <span class="number">100</span></span><br><span class="line">      mushroom-modifier: <span class="number">100</span></span><br><span class="line">      pumpkin-modifier: <span class="number">100</span></span><br><span class="line">      sapling-modifier: <span class="number">100</span></span><br><span class="line">      wheat-modifier: <span class="number">100</span></span><br><span class="line">      netherwart-modifier: <span class="number">100</span></span><br><span class="line">      vine-modifier: <span class="number">100</span></span><br><span class="line">      cocoa-modifier: <span class="number">100</span></span><br><span class="line">    entity-activation-range:</span><br><span class="line">      animals: <span class="number">32</span></span><br><span class="line">      monsters: <span class="number">32</span></span><br><span class="line">      misc: <span class="number">16</span></span><br><span class="line">    entity-tracking-range:</span><br><span class="line">      players: <span class="number">48</span></span><br><span class="line">      animals: <span class="number">48</span></span><br><span class="line">      monsters: <span class="number">48</span></span><br><span class="line">      misc: <span class="number">32</span></span><br><span class="line">      other: <span class="number">64</span></span><br><span class="line">    random-light-updates: <span class="literal">false</span></span><br><span class="line">    save-structure-info: <span class="literal">true</span></span><br><span class="line">    max-bulk-chunks: <span class="number">10</span></span><br><span class="line">    hunger:</span><br><span class="line">      walk-exhaustion: <span class="number">0.2</span></span><br><span class="line">      sprint-exhaustion: <span class="number">0.8</span></span><br><span class="line">      combat-exhaustion: <span class="number">0.3</span></span><br><span class="line">      regen-exhaustion: <span class="number">3.0</span></span><br><span class="line">    max-tnt-per-tick: <span class="number">100</span></span><br><span class="line">    max-tick-time:</span><br><span class="line">      tile: <span class="number">50</span></span><br><span class="line">      entity: <span class="number">50</span></span><br><span class="line">timings:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  verbose: <span class="literal">true</span></span><br><span class="line">  server-name-privacy: <span class="literal">false</span></span><br><span class="line">  hidden-config-entries:</span><br><span class="line">  - database</span><br><span class="line">  - settings.bungeecord-addresses</span><br><span class="line">  history-interval: <span class="number">300</span></span><br><span class="line">  history-length: <span class="number">3600</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="3-Run-bat后台"><a href="#3-Run-bat后台" class="headerlink" title="[3]. Run.bat后台"></a>[3]. Run.bat后台</h3><blockquote><p>在目录中的.bat后缀的是一个Windows的DOS指令集合，也就是服务器的后台，这个文件的名称可以是任意的。<br>使用 <strong>Notepad++</strong> 可以打开这个文件并进行配置的变更。<br><strong>Xms512M表示服务器分配的最小运行内存为512M</strong><br><strong>Xmx1024M表示服务器分配的最大运行内存为1025M</strong></p></blockquote><blockquote><p><strong>title后面的内容表示打开后台显示的标题</strong></p></blockquote><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">:restart</span><br><span class="line">title Spigot<span class="number">-1.7</span>.x<span class="number">-1.8</span>.x-生存服</span><br><span class="line">@echo off</span><br><span class="line">:MAIN</span><br><span class="line">cls</span><br><span class="line">java -Xms512M -Xmx1024M -jar spigot<span class="number">-1.7</span>.x<span class="number">-1.8</span>.x.jar</span><br><span class="line"><span class="keyword">if</span> exist <span class="string">"plugins\RestartEvolution\restart.mcs"</span> <span class="keyword">goto</span> MAIN</span><br><span class="line"><span class="keyword">if</span> not exist <span class="string">"plugins\RestartEvolution\restart.mcs"</span> <span class="keyword">goto</span> END</span><br><span class="line">:END</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">pause&gt;nul</span><br></pre></td></tr></tbody></table></figure><blockquote><p>服务器的内存不是无限的分配的，需要根据主机的内存大小来自行配置。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331112202222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200331112123933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p>上图的 <code>8G</code>即为主机的运行内存，因为主机需要分配一些运行内存给系统或是其他的程序，所以你在分配服务器的最大运行内存时不能全都分配下去，不然你会发现后台一直崩溃。<br>每添加 <code>1G</code>能够使服务器多容纳 <code>10</code>个玩家，但如果服务端插件和 <code>mod</code>优化不好的话，光增加服务端的内存不会起到大的效果。</p></blockquote><blockquote><p><strong>如果主机的内存够大的话，建议留下3G以上的运行内存。<br> 如果主机的内存较小的话，建议留下1G以上的运行内存。</strong><br>注： <code>1G=1024M</code></p></blockquote><h3 id="4-ops-json配置"><a href="#4-ops-json配置" class="headerlink" title="[4]. ops.json配置"></a>[4]. ops.json配置</h3><blockquote><p>这个配置中是保存服务器的 <strong>op信息</strong>，如果你发现下载下来的服务端这个配置中不是为 <code>[]</code>时，你得把里面的op信息清空，保证服务器没有后门。<br>设置某个玩家为服务器的op，取消某个玩家的op</p></blockquote><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/op 玩家</span><br><span class="line">/deop 玩家</span><br></pre></td></tr></tbody></table></figure><p>参数介绍uuid玩家的特征码，类似于座号nameop的名称levelop拥有的权限等级，数值越大权限越高bypassesPlayerLimit能否在服务器人满的情况进入</p><p><img src="https://img-blog.csdnimg.cn/2020033111285457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><h3 id="5-banned-ips-json配置"><a href="#5-banned-ips-json配置" class="headerlink" title="[5]. banned-ips.json配置"></a>[5]. banned-ips.json配置</h3><blockquote><p>这个配置主要保存的是被封禁玩家的ip信息</p></blockquote><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/banip 玩家的IP地址</span><br><span class="line">/unbanip 玩家的IP地址</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注： <code>&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x6267;&amp;#x884C;&amp;#x6307;&amp;#x4EE4;&amp;#x7684;&amp;#x8BDD;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x659C;&amp;#x6760;/ &amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x73A9;&amp;#x5BB6;&amp;#x91CD;&amp;#x542F;&amp;#x8DEF;&amp;#x7531;&amp;#x5668;&amp;#x4E4B;&amp;#x540E;&amp;#x4ED6;&amp;#x7684;IP&amp;#x5C31;&amp;#x4F1A;&amp;#x88AB;&amp;#x91CD;&amp;#x65B0;&amp;#x5206;&amp;#x914D;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7684;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4E0D;&amp;#x63A8;&amp;#x8350;&amp;#x4F7F;&amp;#x7528;&amp;#x7981;&amp;#x73A9;&amp;#x5BB6;IP&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x9700;&amp;#x8981;&amp;#x6C38;&amp;#x4E45;&amp;#x7981;&amp;#x4E00;&amp;#x4E2A;&amp;#x73A9;&amp;#x5BB6;&amp;#x7684;&amp;#x8BDD;&amp;#x53EF;&amp;#x4EE5;&amp;#x5C06;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;&amp;#x53EA;&amp;#x80FD;&amp;#x6CE8;&amp;#x518C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x4E4B;&amp;#x540E;&amp;#x5C01;&amp;#x7981;&amp;#x73A9;&amp;#x5BB6;&amp;#x7684;id&amp;#x5373;&amp;#x53EF;&amp;#x3002; </code></p></blockquote><p>参数介绍ip被封禁玩家的ip地址created什么时候被封的ipsource执行封禁操作的操作者,console是表示从后台进行封禁expiresip被封禁的时间reason封禁理由</p><p><img src="https://img-blog.csdnimg.cn/20200331113807950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><h3 id="6-banned-players-json配置"><a href="#6-banned-players-json配置" class="headerlink" title="[6]. banned-players.json配置"></a>[6]. banned-players.json配置</h3><blockquote><p>这个配置保存了被封禁玩家id信息<br>封禁玩家和解禁玩家的指令如下:</p></blockquote><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/ban 玩家</span><br><span class="line">/unban 玩家</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注： <code>&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x6267;&amp;#x884C;&amp;#x6307;&amp;#x4EE4;&amp;#x7684;&amp;#x8BDD;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x659C;&amp;#x6760;/</code></p></blockquote><p>参数介绍uuid玩家的特征码，类似于座号name被封禁的玩家名称，即idcreated什么时候被封的idsource执行封禁操作的操作者,console是表示从后台进行封禁expiresip被封禁的时间reason封禁理由</p><p><img src="https://img-blog.csdnimg.cn/20200331114205270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><h3 id="7-whitelist-json配置"><a href="#7-whitelist-json配置" class="headerlink" title="[7]. whitelist.json配置"></a>[7]. whitelist.json配置</h3><blockquote><p>添加白名单用户和删除白名单用户的指令如下：</p></blockquote><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/whitelist add 玩家</span><br><span class="line">/whitelist remove 玩家</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注： <code>&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x6267;&amp;#x884C;&amp;#x6307;&amp;#x4EE4;&amp;#x7684;&amp;#x8BDD;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x659C;&amp;#x6760;/</code></p></blockquote><p>参数介绍uuid玩家的特征码，类似于座号name玩家的名称，即id<br><img src="https://img-blog.csdnimg.cn/2020033111504424.png"></p><h2 id="七、服务器插件的下载渠道"><a href="#七、服务器插件的下载渠道" class="headerlink" title="七、服务器插件的下载渠道"></a>七、服务器插件的下载渠道</h2><blockquote><p>你可以在 <strong>MCBBS论坛</strong>或者是 <strong>我的世界中文分享站</strong>等官方的插件分享区下载，你也可以到MC技术群中找技术花钱去定制，有些插件可能会有后门，你在下载之前最好仔细看看评论和帖子的内容。<br><a href="https://www.mcbbs.net/forum.php">MCBBS论坛</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331133222464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200331133151211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"><br><a href="https://www.secretmine.net/category/yzzy/zhilingheji">我的世界中文分享站</a><br><img src="https://img-blog.csdnimg.cn/20200331133416700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><h2 id="八、服务器插件的简单使用"><a href="#八、服务器插件的简单使用" class="headerlink" title="; 八、服务器插件的简单使用"></a><a name="_391">;</a> 八、服务器插件的简单使用</h2><blockquote><p>服务器中基本所有功能的实现都是依靠的插件，要使用插件的时候将对应的 <strong>.jar文件放入plugins</strong>，然后重启服务器，服务器就会自动生成相应的插件的配置。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331135202930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p><strong>打开plugins，里面的.jar文件就是插件</strong>，而其余的文件夹就是相应插件的配置文件夹。<br>在那些文件夹中会保存有相应插件的配置，如果你要对插件进行变更的话可以打开相应插件的文件夹，然后找到对应的配置进行变更。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331135501838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p>注： <code>&amp;#x63D2;&amp;#x4EF6;&amp;#x7684;&amp;#x547D;&amp;#x540D;&amp;#x53EF;&amp;#x4EE5;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5F71;&amp;#x54CD;&amp;#x5230;&amp;#x63D2;&amp;#x4EF6;&amp;#x529F;&amp;#x80FD;&amp;#x7684;&amp;#x8FD0;&amp;#x884C;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x53D8;&amp;#x66F4;&amp;#x540D;&amp;#x5B57;&amp;#x4EE5;&amp;#x4FBF;&amp;#x4E8E;&amp;#x66F4;&amp;#x597D;&amp;#x5730;&amp;#x4E86;&amp;#x89E3;&amp;#x63D2;&amp;#x4EF6;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#x3002;</code><br>因为不同的插件所生成的配置文件名和配置是不同的，在你需要对插件进行变更时可以先百度一下相应插件的使用方法。</p></blockquote><blockquote><p>在此步骤仅简单介绍一下 <strong>多世界插件</strong>，插件不是一成不变的，插件的作者通常会根据bug和玩家的反馈来推出新的插件版本。<br>注： <code>&amp;#x4F60;&amp;#x4E0D;&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x968F;&amp;#x5927;&amp;#x6D41;&amp;#x53BB;&amp;#x4E0B;&amp;#x8F7D;&amp;#x65B0;&amp;#x7684;&amp;#x63D2;&amp;#x4EF6;&amp;#xFF0C;&amp;#x53EA;&amp;#x8981;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x63D2;&amp;#x4EF6;&amp;#x6CA1;&amp;#x6709;bug&amp;#x6216;&amp;#x63D2;&amp;#x4EF6;&amp;#x4FBF;&amp;#x4E8E;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x8BDD;&amp;#xFF0C;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x7EE7;&amp;#x7EED;&amp;#x4F7F;&amp;#x7528;&amp;#x8BE5;&amp;#x7248;&amp;#x672C;&amp;#x7684;&amp;#x63D2;&amp;#x4EF6;&amp;#x3002;</code></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331140607581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p>每个文件夹内一定会有一个config.yml的配置，里面的参数和选项是由插件作者设计，是一个固定存在的插件。<br>打开这些配置的时候你可以选择使用文本的方式打开，</p></blockquote><blockquote><p>注： <code>&amp;#x6709;&amp;#x4E00;&amp;#x4E9B;&amp;#x63D2;&amp;#x4EF6;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x5230;&amp;#x914D;&amp;#x7F6E;&amp;#xFF0C;&amp;#x53EF;&amp;#x80FD;&amp;#x53EA;&amp;#x4F1A;&amp;#x5B58;&amp;#x5728;.db&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x751A;&amp;#x81F3;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x751F;&amp;#x6210;&amp;#x6587;&amp;#x4EF6;&amp;#x5939;&amp;#x53CA;&amp;#x5176;&amp;#x914D;&amp;#x7F6E;&amp;#x3002;</code></p></blockquote><blockquote><p>打开的config.yml配置如下所示<br>这些参数是一层一层地填写的，你可以看到上图的 <strong>multiverse-configuration</strong>参数下面还有很多个参数，下面的这些就是包含在 <strong>multiverse-configuration</strong>参数下的，如果你需要取消玩家在聊天栏中的聊天前缀的话，可以在 <strong>prefixchat</strong>参数的 <strong>true</strong>改为 <strong>false</strong></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331143556875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><blockquote><p><strong>worlds.yml配置</strong><br>主要存放的是服务器地图的配置，你可以根据所需要变更的内容进行变更。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331144436175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><h2 id="九、服务器插件介绍网站"><a href="#九、服务器插件介绍网站" class="headerlink" title="九、服务器插件介绍网站"></a>九、服务器插件介绍网站</h2><blockquote><p>MC插件有很多，你也不必所有的MC插件都知道如何运用，你可以百度搜某个插件，或者是通过论坛或百科来查找相关插件的使用方式。</p></blockquote><p><a href="http://mineplugin.org/%E9%A6%96%E9%A1%B5">Minecraft插件百科</a><br><a href="https://www.mcbbs.net/forum.php">MCBBS论坛</a><br><img src="https://img-blog.csdnimg.cn/20200327140008497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><h2 id="十、开启服务器"><a href="#十、开启服务器" class="headerlink" title="; 十、开启服务器"></a><a name="_425">;</a> 十、开启服务器</h2><blockquote><p>点击服务端中.bat文件就能打开后台了，开启之前保证服 **务器端的运行内存不会超过主机的80%**，不然容易出现后台崩溃的情况。<br>这里得注意一下，在游戏中输入指令需要使用到 <code>&amp;#x659C;&amp;#x6760;/</code>，而 <strong>后台中你不需要使用斜杠</strong>，打出的每一句话都默认为一个带有斜杠的指令了。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200331134221491.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtYWxsZm94MjMz,size_16,color_FFFFFF,t_70"></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> MC </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10万字208道Java经典面试题总结(附答案)</title>
      <link href="/2024/05/31/119299329/"/>
      <url>/2024/05/31/119299329/</url>
      
        <content type="html"><![CDATA[<blockquote><p>🍅 作者简介：哪吒，CSDN2021博客之星亚军🏆、新星计划导师✌、博客专家💪<br>🍅 哪吒多年工作总结：<a href="https://blog.csdn.net/guorui_java/article/details/120098618" title="Java学习路线总结，搬砖工逆袭Java架构师">Java学习路线总结，搬砖工逆袭Java架构师</a><br>🍅 技术交流：<a href="https://bbs.csdn.net/topics/607729516" title="定期更新Java硬核干货，不定期送书活动">定期更新Java硬核干货，不定期送书活动</a><br>🍅 <strong>关注公众号【哪吒编程】，回复 面试题</strong>，获取《10万字208道Java经典面试题总结(附答案)》 <strong>pdf</strong>，背题更方便，一文在手，面试我有</p></blockquote><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近有很多粉丝问我，有什么方法能够快速提升自己，通过阿里、腾讯、字节跳动、京东等互联网大厂的面试，我觉得短时间提升自己最快的手段就是背面试题，最近总结了Java常用的面试题，分享给大家，希望大家都能圆梦大厂，加油，我命由我不由天。</p><p><img src="https://img-blog.csdnimg.cn/20210801221107554.png"></p><p><strong>目录</strong></p><p><a href="#1%E3%80%81jdk%20%E5%92%8C%20jre%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">1、JDK 和 JRE 有什么区别？</a></p><p><a href="#2%E3%80%81==%20%E5%92%8C%20equals%20%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">2、== 和 equals 的区别是什么？</a></p><p><a href="#3%E3%80%81final%20%E5%9C%A8%20java%20%E4%B8%AD%E6%9C%89%E4%BB%80%E4%B9%88%E4%BD%9C%E7%94%A8%EF%BC%9F">3、final 在 java 中有什么作用？</a></p><p><a href="#4%E3%80%81java%20%E4%B8%AD%E7%9A%84%20mathround(-15)%20%E7%AD%89%E4%BA%8E%E5%A4%9A%E5%B0%91%EF%BC%9F">4、java 中的 Math.round(-1.5) 等于多少？</a></p><p><a href="#5%E3%80%81string%20%E5%B1%9E%E4%BA%8E%E5%9F%BA%E7%A1%80%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%90%97%EF%BC%9F">5、String 属于基础的数据类型吗？</a></p><p><a href="#6%E3%80%81string%20str=%22i%22%E4%B8%8E%20string%20str=new%20string(%E2%80%9Ci%E2%80%9D)%E4%B8%80%E6%A0%B7%E5%90%97%EF%BC%9F">6、String str=”i”与 String str=new String(“i”)一样吗？</a></p><p><a href="#7%E3%80%81%E5%A6%82%E4%BD%95%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC%EF%BC%9F">7、如何将字符串反转？</a></p><p><a href="#8%E3%80%81string%20%E7%B1%BB%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E9%83%BD%E6%9C%89%E9%82%A3%E4%BA%9B%EF%BC%9F">8、String 类的常用方法都有那些？</a></p><p><a href="#9%E3%80%81new%20string(%22a%22)%20+%20new%20string(%22b%22)%20%E4%BC%9A%E5%88%9B%E5%BB%BA%E5%87%A0%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%9F">9、new String(“a”) + new String(“b”) 会创建几个对象？</a></p><p><a href="#10%E3%80%81%E5%A6%82%E4%BD%95%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC%EF%BC%9F">10、如何将字符串反转？</a></p><p><a href="#11%E3%80%81string%20%E7%B1%BB%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E9%83%BD%E6%9C%89%E9%82%A3%E4%BA%9B%EF%BC%9F">11、String 类的常用方法都有那些？</a></p><p><a href="#12%E3%80%81%E6%99%AE%E9%80%9A%E7%B1%BB%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E6%9C%89%E5%93%AA%E4%BA%9B%E5%8C%BA%E5%88%AB%EF%BC%9F">12、普通类和抽象类有哪些区别？</a></p><p><a href="#13%E3%80%81%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">13、接口和抽象类有什么区别？</a></p><p><a href="#14%E3%80%81java%20%E4%B8%AD%20io%20%E6%B5%81%E5%88%86%E4%B8%BA%E5%87%A0%E7%A7%8D%EF%BC%9F">14、java 中 IO 流分为几种？</a></p><p><a href="#15%E3%80%81bio%E3%80%81nio%E3%80%81aio%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">15、BIO、NIO、AIO 有什么区别？</a></p><p><a href="#16%E3%80%81files%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F">16、Files的常用方法都有哪些？</a></p><p><a href="#17%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%8D%E5%B0%84%EF%BC%9F">17、什么是反射？</a></p><p><a href="#18%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20java%20%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%9F%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E9%9C%80%E8%A6%81%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%9F">18、什么是 java 序列化？什么情况下需要序列化？</a></p><p><a href="#19%E3%80%81%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8%E5%85%8B%E9%9A%86%EF%BC%9F%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%B1%A1%E5%85%8B%E9%9A%86%EF%BC%9F%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B5%85%E6%8B%B7%E8%B4%9D%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">19、为什么要使用克隆？如何实现对象克隆？深拷贝和浅拷贝区别是什么？</a></p><p><a href="#20%E3%80%81throw%20%E5%92%8C%20throws%20%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F">20、throw 和 throws 的区别？</a></p><p><a href="#21%E3%80%81final%E3%80%81finally%E3%80%81finalize%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">21、final、finally、finalize 有什么区别？</a></p><p><a href="#22%E3%80%81try-catch-finally%20%E4%B8%AD%EF%BC%8C%E5%A6%82%E6%9E%9C%20catch%20%E4%B8%AD%20return%20%E4%BA%86%EF%BC%8Cfinally%20%E8%BF%98%E4%BC%9A%E6%89%A7%E8%A1%8C%E5%90%97%EF%BC%9F">22、try-catch-finally 中，如果 catch 中 return 了，finally 还会执行吗？</a></p><p><a href="#23%E3%80%81%E5%B8%B8%E8%A7%81%E7%9A%84%E5%BC%82%E5%B8%B8%E7%B1%BB%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F">23、常见的异常类有哪些？</a></p><p><a href="#24%E3%80%81hashcode%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%9C%89%E4%BB%80%E4%B9%88%E4%BD%9C%E7%94%A8%EF%BC%9F">24、hashcode是什么？有什么作用？</a></p><p><a href="#25%E3%80%81java%20%E4%B8%AD%E6%93%8D%E4%BD%9C%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E7%B1%BB%EF%BC%9F%E5%AE%83%E4%BB%AC%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">25、java 中操作字符串都有哪些类？它们之间有什么区别？</a></p><p><a href="#26%E3%80%81java%20%E4%B8%AD%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%EF%BC%9F">26、java 中都有哪些引用类型？</a></p><p><a href="#27%E3%80%81%E5%9C%A8%20java%20%E4%B8%AD%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%85%81%E8%AE%B8%E4%BB%8E%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E4%B8%AD%E8%AE%BF%E9%97%AE%E9%9D%9E%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%EF%BC%9F">27、在 Java 中，为什么不允许从静态方法中访问非静态变量？</a></p><p><a href="#28%E3%80%81%E8%AF%B4%E8%AF%B4java%20bean%E7%9A%84%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83">28、说说Java Bean的命名规范</a></p><p><a href="#29%E3%80%81java%20bean%20%E5%B1%9E%E6%80%A7%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90">29、Java Bean 属性命名规范问题分析</a></p><p><a href="#30%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20java%20%E7%9A%84%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B?">30、什么是 Java 的内存模型?</a></p><p><a href="#31%E3%80%81%E5%9C%A8%20java%20%E4%B8%AD%EF%BC%8C%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E7%94%A8%E9%87%8D%E8%BD%BD%EF%BC%8C%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E7%94%A8%E9%87%8D%E5%86%99%EF%BC%9F">31、在 Java 中，什么时候用重载，什么时候用重写？</a></p><p><a href="#32%E3%80%81%E4%B8%BE%E4%BE%8B%E8%AF%B4%E6%98%8E%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E4%BC%9A%E6%9B%B4%E5%80%BE%E5%90%91%E4%BA%8E%E4%BD%BF%E7%94%A8%E6%8A%BD%E8%B1%A1%E7%B1%BB%E8%80%8C%E4%B8%8D%E6%98%AF%E6%8E%A5%E5%8F%A3%EF%BC%9F">32、举例说明什么情况下会更倾向于使用抽象类而不是接口？</a></p><p><a href="#33%E3%80%81%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%AF%B9%E8%B1%A1%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F">33、实例化对象有哪几种方式</a></p><p><a href="#34%E3%80%81byte%E7%B1%BB%E5%9E%8B127+1%E7%AD%89%E4%BA%8E%E5%A4%9A%E5%B0%91">34、byte类型127+1等于多少</a></p><p><a href="#35%E3%80%81java%20%E5%AE%B9%E5%99%A8%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F">35、Java 容器都有哪些？</a></p><p><a href="#36%E3%80%81collection%20%E5%92%8C%20collections%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">36、Collection 和 Collections 有什么区别？</a></p><p><a href="#37%E3%80%81list%E4%B8%8Eset%E5%8C%BA%E5%88%AB">37、list与Set区别</a></p><p><a href="#main-toc">38、HashMap 和 Hashtable 有什么区别？</a></p><p><a href="#39%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20hashmap%20%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%EF%BC%9F">39、说一下 HashMap 的实现原理？</a></p><p><a href="#40%E3%80%81set%E6%9C%89%E5%93%AA%E4%BA%9B%E5%AE%9E%E7%8E%B0%E7%B1%BB%EF%BC%9F">40、set有哪些实现类？</a></p><p><a href="#41%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20hashset%20%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%EF%BC%9F">41、说一下 HashSet 的实现原理？</a></p><p><a href="#42%E3%80%81arraylist%20%E5%92%8C%20linkedlist%20%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">42、ArrayList 和 LinkedList 的区别是什么？</a></p><p><a href="#43%E3%80%81%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%95%B0%E7%BB%84%E5%92%8C%20list%20%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2%EF%BC%9F">43、如何实现数组和 List 之间的转换？</a></p><p><a href="#44%E3%80%81%E5%9C%A8%20queue%20%E4%B8%AD%20poll()%E5%92%8C%20remove()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">44、在 Queue 中 poll()和 remove()有什么区别？</a></p><p><a href="#45%E3%80%81%E5%93%AA%E4%BA%9B%E9%9B%86%E5%90%88%E7%B1%BB%E6%98%AF%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84">45、哪些集合类是线程安全的</a></p><p><a href="#46%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8%20iterator%20%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">46、迭代器 Iterator 是什么？</a></p><p><a href="#47%E3%80%81iterator%20%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8%EF%BC%9F%E6%9C%89%E4%BB%80%E4%B9%88%E7%89%B9%E7%82%B9%EF%BC%9F">47、Iterator 怎么使用？有什么特点？</a></p><p><a href="#48%E3%80%81iterator%20%E5%92%8C%20listiterator%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">48、Iterator 和 ListIterator 有什么区别？</a></p><p><a href="#49%E3%80%81%E6%80%8E%E4%B9%88%E7%A1%AE%E4%BF%9D%E4%B8%80%E4%B8%AA%E9%9B%86%E5%90%88%E4%B8%8D%E8%83%BD%E8%A2%AB%E4%BF%AE%E6%94%B9%EF%BC%9F">49、怎么确保一个集合不能被修改？</a></p><p><a href="#50%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E6%A0%88%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">50、队列和栈是什么？有什么区别？</a></p><p><a href="#51%E3%80%81java8%E5%BC%80%E5%A7%8Bconcurrenthashmap,%E4%B8%BA%E4%BB%80%E4%B9%88%E8%88%8D%E5%BC%83%E5%88%86%E6%AE%B5%E9%94%81%EF%BC%9F">51、Java8开始ConcurrentHashMap,为什么舍弃分段锁？</a></p><p><a href="#52%E3%80%81concurrenthashmap(jdk18)%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8synchronized%E8%80%8C%E4%B8%8D%E6%98%AF%E5%A6%82reentranlock%E8%BF%99%E6%A0%B7%E7%9A%84%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81%EF%BC%9F">52、ConcurrentHashMap(JDK1.8)为什么要使用synchronized而不是如ReentranLock这样的可重入锁？</a></p><p><a href="#53%E3%80%81concurrenthashmap%E5%92%8Chashtable%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB">53、concurrentHashMap和HashTable有什么区别</a></p><p><a href="#54%E3%80%81hasmmap%E5%92%8Chashset%E7%9A%84%E5%8C%BA%E5%88%AB">54、HasmMap和HashSet的区别</a></p><p><a href="#55%E3%80%81%E8%AF%B7%E8%B0%88%E8%B0%88%20readwritelock%20%E5%92%8C%20stampedlock">55、请谈谈 ReadWriteLock 和 StampedLock</a></p><p><a href="#56%E3%80%81%E7%BA%BF%E7%A8%8B%E7%9A%84run()%E5%92%8Cstart()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">56、线程的run()和start()有什么区别？</a></p><p><a href="#57%E3%80%81%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E8%B0%83%E7%94%A8%20start()%20%E6%96%B9%E6%B3%95%E6%97%B6%E4%BC%9A%E6%89%A7%E8%A1%8C%20run()%20%E6%96%B9%E6%B3%95%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E4%B8%8D%E8%83%BD%E7%9B%B4%E6%8E%A5%E8%B0%83%E7%94%A8%20run()%20%E6%96%B9%E6%B3%95%EF%BC%9F">57、为什么我们调用 start() 方法时会执行 run() 方法，为什么我们不能直接调用 run() 方法？</a></p><p><a href="#58%E3%80%81synchronized%20%E7%94%A8%E8%BF%87%E5%90%97%EF%BC%8C%E5%85%B6%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">58、Synchronized 用过吗，其原理是什么？</a></p><p><a href="#59%E3%80%81jvm%20%E5%AF%B9%20java%20%E7%9A%84%E5%8E%9F%E7%94%9F%E9%94%81%E5%81%9A%E4%BA%86%E5%93%AA%E4%BA%9B%E4%BC%98%E5%8C%96%EF%BC%9F">59、JVM 对 Java 的原生锁做了哪些优化？</a></p><p><a href="#60%E3%80%81%E4%B8%BA%E4%BB%80%E4%B9%88%20wait(),%20notify()%E5%92%8C%20notifyall()%E5%BF%85%E9%A1%BB%E5%9C%A8%E5%90%8C%E6%AD%A5%E6%96%B9%E6%B3%95%E6%88%96%E8%80%85%E5%90%8C%E6%AD%A5%E5%9D%97%E4%B8%AD%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%9F">60、为什么 wait(), notify()和 notifyAll()必须在同步方法或者同步块中被调用？</a></p><p><a href="#61%E3%80%81java%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E9%80%9A%E8%AE%AF%E5%92%8C%E5%8D%8F%E4%BD%9C%EF%BC%9F">61、Java 如何实现多线程之间的通讯和协作？</a></p><p><a href="#62%E3%80%81thread%20%E7%B1%BB%E4%B8%AD%E7%9A%84%20yield%20%E6%96%B9%E6%B3%95%E6%9C%89%E4%BB%80%E4%B9%88%E4%BD%9C%E7%94%A8%EF%BC%9F">62、Thread 类中的 yield 方法有什么作用？</a></p><p><a href="#63%E3%80%81%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B4%20synchronized%20%E6%98%AF%E9%9D%9E%E5%85%AC%E5%B9%B3%E9%94%81%EF%BC%9F">63、为什么说 Synchronized 是非公平锁？</a></p><p><a href="#64%E3%80%81%E8%AF%B7%E8%B0%88%E8%B0%88%20volatile%20%E6%9C%89%E4%BB%80%E4%B9%88%E7%89%B9%E7%82%B9%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AE%83%E8%83%BD%E4%BF%9D%E8%AF%81%E5%8F%98%E9%87%8F%E5%AF%B9%E6%89%80%E6%9C%89%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%8F%AF%E8%A7%81%E6%80%A7%EF%BC%9F">64、请谈谈 volatile 有什么特点，为什么它能保证变量对所有线程的可见性？</a></p><p><a href="#65%E3%80%81%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B4%20synchronized%20%E6%98%AF%E4%B8%80%E4%B8%AA%E6%82%B2%E8%A7%82%E9%94%81%EF%BC%9F%E4%B9%90%E8%A7%82%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E5%8F%88%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E4%BB%80%E4%B9%88%E6%98%AF%20cas%EF%BC%8C%E5%AE%83%E6%9C%89%E4%BB%80%E4%B9%88%E7%89%B9%E6%80%A7%EF%BC%9F">65、为什么说 Synchronized 是一个悲观锁？乐观锁的实现原理又是什么？什么是 CAS，它有什么特性？</a></p><p><a href="#66%E3%80%81%E4%B9%90%E8%A7%82%E9%94%81%E4%B8%80%E5%AE%9A%E5%B0%B1%E6%98%AF%E5%A5%BD%E7%9A%84%E5%90%97%EF%BC%9F">66、乐观锁一定就是好的吗？</a></p><p><a href="#67%E3%80%81%E8%AF%B7%E5%B0%BD%E5%8F%AF%E8%83%BD%E8%AF%A6%E5%B0%BD%E5%9C%B0%E5%AF%B9%E6%AF%94%E4%B8%8B%20synchronized%20%E5%92%8C%20reentrantlock%20%E7%9A%84%E5%BC%82%E5%90%8C%E3%80%82">67、请尽可能详尽地对比下 Synchronized 和 ReentrantLock 的异同。</a></p><p><a href="#68%E3%80%81reentrantlock%20%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%8F%AF%E9%87%8D%E5%85%A5%E6%80%A7%E7%9A%84%EF%BC%9F">68、ReentrantLock 是如何实现可重入性的？</a></p><p><a href="#69%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E9%94%81%E6%B6%88%E9%99%A4%E5%92%8C%E9%94%81%E7%B2%97%E5%8C%96%EF%BC%9F">69、什么是锁消除和锁粗化？</a></p><p><a href="#70%E3%80%81%E8%B7%9F%20synchronized%20%E7%9B%B8%E6%AF%94%EF%BC%8C%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81%20reentrantlock%20%E5%85%B6%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E4%B8%8D%E5%90%8C%EF%BC%9F">70、跟 Synchronized 相比，可重入锁 ReentrantLock 其实现原理有什么不同？</a></p><p><a href="#71%E3%80%81%E9%82%A3%E4%B9%88%E8%AF%B7%E8%B0%88%E8%B0%88%20aqs%20%E6%A1%86%E6%9E%B6%E6%98%AF%E6%80%8E%E4%B9%88%E5%9B%9E%E4%BA%8B%E5%84%BF%EF%BC%9F">71、那么请谈谈 AQS 框架是怎么回事儿？</a></p><p><a href="#72%E3%80%81aqs%20%E5%AF%B9%E8%B5%84%E6%BA%90%E7%9A%84%E5%85%B1%E4%BA%AB%E6%96%B9%E5%BC%8F%EF%BC%9F">72、AQS 对资源的共享方式？</a></p><p><a href="#73%E3%80%81%E5%A6%82%E4%BD%95%E8%AE%A9%20java%20%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%BD%BC%E6%AD%A4%E5%90%8C%E6%AD%A5%EF%BC%9F">73、如何让 Java 的线程彼此同步？</a></p><p><a href="#74%E3%80%81%E4%BD%A0%E4%BA%86%E8%A7%A3%E8%BF%87%E5%93%AA%E4%BA%9B%E5%90%8C%E6%AD%A5%E5%99%A8%EF%BC%9F%E8%AF%B7%E5%88%86%E5%88%AB%E4%BB%8B%E7%BB%8D%E4%B8%8B%E3%80%82">74、你了解过哪些同步器？请分别介绍下。</a></p><p><a href="#75%E3%80%81java%20%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84">75、Java 中的线程池是如何实现的</a></p><p><a href="#76%E3%80%81%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%9A%84%E5%87%A0%E4%B8%AA%E6%A0%B8%E5%BF%83%E6%9E%84%E9%80%A0%E5%8F%82%E6%95%B0">76、创建线程池的几个核心构造参数</a></p><p><a href="#77%E3%80%81%E7%BA%BF%E7%A8%8B%E6%B1%A0%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B%E6%98%AF%E6%80%8E%E4%B9%88%E5%88%9B%E5%BB%BA%E7%9A%84%EF%BC%9F%E6%98%AF%E4%B8%80%E5%BC%80%E5%A7%8B%E5%B0%B1%E9%9A%8F%E7%9D%80%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%9A%84%E5%90%AF%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%A5%BD%E7%9A%84%E5%90%97%EF%BC%9F">77、线程池中的线程是怎么创建的？是一开始就随着线程池的启动创建好的吗？</a></p><p><a href="#78%E3%80%81volatile%20%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8">78、volatile 关键字的作用</a></p><p><a href="#79%E3%80%81%E6%97%A2%E7%84%B6%20volatile%20%E8%83%BD%E5%A4%9F%E4%BF%9D%E8%AF%81%E7%BA%BF%E7%A8%8B%E9%97%B4%E7%9A%84%E5%8F%98%E9%87%8F%E5%8F%AF%E8%A7%81%E6%80%A7%EF%BC%8C%E6%98%AF%E4%B8%8D%E6%98%AF%E5%B0%B1%E6%84%8F%E5%91%B3%E7%9D%80%E5%9F%BA%E4%BA%8E%20volatile%20%E5%8F%98%E9%87%8F%E7%9A%84%E8%BF%90%E7%AE%97%E5%B0%B1%E6%98%AF%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8%E7%9A%84%EF%BC%9F">79、既然 volatile 能够保证线程间的变量可见性，是不是就意味着基于 volatile 变量的运算就是并发安全的？</a></p><p><a href="#80%E3%80%81threadlocal%20%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%EF%BC%9F">80、ThreadLocal 是什么？有哪些使用场景？</a></p><p><a href="#81%E3%80%81%E8%AF%B7%E8%B0%88%E8%B0%88%20threadlocal%20%E6%98%AF%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8%E7%9A%84%EF%BC%9F">81、请谈谈 ThreadLocal 是怎么解决并发安全的？</a></p><p><a href="#82%E3%80%81%E5%BE%88%E5%A4%9A%E4%BA%BA%E9%83%BD%E8%AF%B4%E8%A6%81%E6%85%8E%E7%94%A8%20threadlocal%EF%BC%8C%E8%B0%88%E8%B0%88%E4%BD%A0%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%8C%E4%BD%BF%E7%94%A8%20threadlocal%20%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BA%9B%E4%BB%80%E4%B9%88%EF%BC%9F">82、很多人都说要慎用 ThreadLocal，谈谈你的理解，使用 ThreadLocal 需要注意些什么？</a></p><p><a href="#83%E3%80%81%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BB%A3%E7%A0%81%E4%BC%9A%E9%87%8D%E6%8E%92%E5%BA%8F%EF%BC%9F">83、为什么代码会重排序？</a></p><p><a href="#84%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E8%87%AA%E6%97%8B">84、什么是自旋</a></p><p><a href="#85%E3%80%81%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%AD%20synchronized%20%E9%94%81%E5%8D%87%E7%BA%A7%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">85、多线程中 synchronized 锁升级的原理是什么？</a></p><p><a href="#86%E3%80%81synchronized%20%E5%92%8C%20reentrantlock%20%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">86、synchronized 和 ReentrantLock 区别是什么？</a></p><p><a href="#87%E3%80%81java%20concurrency%20api%20%E4%B8%AD%E7%9A%84%20lock%20%E6%8E%A5%E5%8F%A3(lock%20interface)%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E5%AF%B9%E6%AF%94%E5%90%8C%E6%AD%A5%E5%AE%83%E6%9C%89%E4%BB%80%E4%B9%88%E4%BC%98%E5%8A%BF%EF%BC%9F">87、Java Concurrency API 中的 Lock 接口(Lock interface)是什么？对比同步它有什么优势？</a></p><p><a href="#88%E3%80%81jsp%20%E5%92%8C%20servlet%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">88、jsp 和 servlet 有什么区别？</a></p><p><a href="#89%E3%80%81jsp%20%E6%9C%89%E5%93%AA%E4%BA%9B%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%EF%BC%9F%E4%BD%9C%E7%94%A8%E5%88%86%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">89、jsp 有哪些内置对象？作用分别是什么？</a></p><p><a href="#90%E3%80%81forward%20%E5%92%8C%20redirect%20%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F">90、forward 和 redirect 的区别？</a></p><p><a href="#91%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20jsp%20%E7%9A%84%204%20%E7%A7%8D%E4%BD%9C%E7%94%A8%E5%9F%9F%EF%BC%9F">91、说一下 jsp 的 4 种作用域？</a></p><p><a href="#92%E3%80%81session%20%E5%92%8C%20cookie%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">92、session 和 cookie 有什么区别？</a></p><p><a href="#93%E3%80%81%E5%A6%82%E6%9E%9C%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%A6%81%E6%AD%A2%20cookie%20%E8%83%BD%E5%AE%9E%E7%8E%B0%20session%20%E8%BF%98%E8%83%BD%E7%94%A8%E5%90%97%EF%BC%9F">93、如果客户端禁止 cookie 能实现 session 还能用吗？</a></p><p><a href="#94%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2%EF%BC%9F">94、什么是上下文切换？</a></p><p><a href="#95%E3%80%81cookie%E3%80%81session%E3%80%81token">95、cookie、session、token</a></p><p><a href="#96%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20session%20%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%EF%BC%9F">96、说一下 session 的工作原理？</a></p><p><a href="#97%E3%80%81http%20%E5%93%8D%E5%BA%94%E7%A0%81%20301%20%E5%92%8C%20302%20%E4%BB%A3%E8%A1%A8%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">97、http 响应码 301 和 302 代表的是什么？有什么区别？</a></p><p><a href="#98%E3%80%81%E7%AE%80%E8%BF%B0%20tcp%20%E5%92%8C%20udp%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F">98、简述 tcp 和 udp的区别？</a></p><p><a href="#99%E3%80%81tcp%20%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%EF%BC%8C%E4%B8%A4%E6%AC%A1%E4%B8%8D%E8%A1%8C%E5%90%97%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%EF%BC%9F">99、tcp 为什么要三次握手，两次不行吗？为什么？</a></p><p><a href="#100%E3%80%81osi%20%E7%9A%84%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F">100、OSI 的七层模型都有哪些？</a></p><p><a href="#101%E3%80%81get%20%E5%92%8C%20post%20%E8%AF%B7%E6%B1%82%E6%9C%89%E5%93%AA%E4%BA%9B%E5%8C%BA%E5%88%AB%EF%BC%9F">101、get 和 post 请求有哪些区别？</a></p><p><a href="#102%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20xss%20%E6%94%BB%E5%87%BB%EF%BC%8C%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%EF%BC%9F">102、什么是 XSS 攻击，如何避免？</a></p><p><a href="#103%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20csrf%20%E6%94%BB%E5%87%BB%EF%BC%8C%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%EF%BC%9F">103、什么是 CSRF 攻击，如何避免？</a></p><p><a href="#104%E3%80%81%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E8%B7%A8%E5%9F%9F%EF%BC%9F%E8%AF%B4%E4%B8%80%E4%B8%8B%20jsonp%20%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%EF%BC%9F">104、如何实现跨域？说一下 JSONP 实现原理？</a></p><p><a href="#105%E3%80%81websocket%E5%BA%94%E7%94%A8%E7%9A%84%E6%98%AF%E5%93%AA%E4%B8%AA%E5%8D%8F%E8%AE%AE">105、websocket应用的是哪个协议</a></p><p><a href="#106%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20tcp%20%E7%B2%98%E5%8C%85%E6%98%AF%E6%80%8E%E4%B9%88%E4%BA%A7%E7%94%9F%E7%9A%84%EF%BC%9F">106、说一下 tcp 粘包是怎么产生的？</a></p><p><a href="#107%E3%80%81%E8%AF%B7%E5%88%97%E4%B8%BE%E5%87%BA%E5%9C%A8%20jdk%20%E4%B8%AD%E5%87%A0%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9F">107、请列举出在 JDK 中几个常用的设计模式？</a></p><p><a href="#108%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9F%E4%BD%A0%E6%98%AF%E5%90%A6%E5%9C%A8%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8%E8%BF%87%E4%BB%BB%E4%BD%95%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9F">108、什么是设计模式？你是否在你的代码里面使用过任何设计模式？</a></p><p><a href="#109%E3%80%81java%20%E4%B8%AD%E4%BB%80%E4%B9%88%E5%8F%AB%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9F%E8%AF%B7%E7%94%A8%20java%20%E5%86%99%E5%87%BA%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F">109、Java 中什么叫单例设计模式？请用 Java 写出线程安全的单例模式</a></p><p><a href="#110%E3%80%81%E5%9C%A8%20java%20%E4%B8%AD%EF%BC%8C%E4%BB%80%E4%B9%88%E5%8F%AB%E8%A7%82%E5%AF%9F%E8%80%85%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88observer%20design%20pattern%EF%BC%89%EF%BC%9F">110、在 Java 中，什么叫观察者设计模式（observer design pattern）？</a></p><p><a href="#111%E3%80%81%E4%BD%BF%E7%94%A8%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E6%9C%80%E4%B8%BB%E8%A6%81%E7%9A%84%E5%A5%BD%E5%A4%84%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E5%9C%A8%E5%93%AA%E9%87%8C%E4%BD%BF%E7%94%A8%EF%BC%9F">111、使用工厂模式最主要的好处是什么？在哪里使用？</a></p><p><a href="#112%E3%80%81%E8%AF%B7%E8%A7%A3%E9%87%8A%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F">112、请解释自动装配模式的区别？</a></p><p><a href="#113%E3%80%81%E4%B8%BE%E4%B8%80%E4%B8%AA%E7%94%A8%20java%20%E5%AE%9E%E7%8E%B0%E7%9A%84%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F(decorator%20design%20pattern)%EF%BC%9F%E5%AE%83%E6%98%AF%E4%BD%9C%E7%94%A8%E4%BA%8E%E5%AF%B9%E8%B1%A1%E5%B1%82%E6%AC%A1%E8%BF%98%E6%98%AF%E7%B1%BB%E5%B1%82%E6%AC%A1%EF%BC%9F">113、举一个用 Java 实现的装饰模式(decorator design pattern)？它是作用于对象层次还是类层次？</a></p><p><a href="#114%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20spring%20%E6%A1%86%E6%9E%B6%EF%BC%9Fspring%20%E6%A1%86%E6%9E%B6%E6%9C%89%E5%93%AA%E4%BA%9B%E4%B8%BB%E8%A6%81%E6%A8%A1%E5%9D%97%EF%BC%9F">114、什么是 Spring 框架？Spring 框架有哪些主要模块？</a></p><p><a href="#115%E3%80%81%E4%BD%BF%E7%94%A8%20spring%20%E6%A1%86%E6%9E%B6%E8%83%BD%E5%B8%A6%E6%9D%A5%E5%93%AA%E4%BA%9B%E5%A5%BD%E5%A4%84%EF%BC%9F">115、使用 Spring 框架能带来哪些好处？</a></p><p><a href="#116%E3%80%81spring%20ioc%E3%80%81aop%E4%B8%BE%E4%BE%8B%E8%AF%B4%E6%98%8E">116、Spring IOC、AOP举例说明</a></p><p><a href="#117%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC(ioc)%EF%BC%9F%E4%BB%80%E4%B9%88%E6%98%AF%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%EF%BC%9F">117、什么是控制反转(IOC)？什么是依赖注入？</a></p><p><a href="#118%E3%80%81beanfactory%20%E5%92%8C%20applicationcontext%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">118、BeanFactory 和 ApplicationContext 有什么区别？</a></p><p><a href="#119%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20javaconfig%EF%BC%9F">119、什么是 JavaConfig？</a></p><p><a href="#120%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20orm%20%E6%A1%86%E6%9E%B6%EF%BC%9F">120、什么是 ORM 框架？</a></p><p><a href="#121%E3%80%81spring%20%E6%9C%89%E5%87%A0%E7%A7%8D%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F%EF%BC%9F">121、Spring 有几种配置方式？</a></p><p><a href="#122%E3%80%81%E8%AF%B7%E8%A7%A3%E9%87%8A%20spring%20bean%20%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%9F">122、请解释 Spring Bean 的生命周期？</a></p><p><a href="#123%E3%80%81spring%20bean%20%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9Fspring%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84bean%E5%8F%AF%E4%BB%A5%E5%88%86%E4%B8%BA5%E4%B8%AA%E8%8C%83%E5%9B%B4%EF%BC%9A">123、Spring Bean 的作用域之间有什么区别？Spring容器中的bean可以分为5个范围：</a></p><p><a href="#124%E3%80%81%E5%A6%82%E4%BD%95%E5%9C%A8%20spring%20boot%20%E4%B8%AD%E7%A6%81%E7%94%A8%20actuator%20%E7%AB%AF%E7%82%B9%E5%AE%89%E5%85%A8%E6%80%A7%EF%BC%9F">124、如何在 Spring Boot 中禁用 Actuator 端点安全性？</a></p><p><a href="#125%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20spring%20inner%20beans%EF%BC%9F">125、什么是 Spring inner beans？</a></p><p><a href="#126%E3%80%81spring%20%E6%A1%86%E6%9E%B6%E4%B8%AD%E7%9A%84%E5%8D%95%E4%BE%8B%20beans%20%E6%98%AF%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E4%B9%88%EF%BC%9F">126、Spring 框架中的单例 Beans 是线程安全的么？</a></p><p><a href="#127%E3%80%81%E8%AF%B7%E8%A7%A3%E9%87%8A%20spring%20bean%20%E7%9A%84%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%EF%BC%9F">127、请解释 Spring Bean 的自动装配？</a></p><p><a href="#128%E3%80%81%E5%A6%82%E4%BD%95%E5%BC%80%E5%90%AF%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%EF%BC%9F">128、如何开启基于注解的自动装配？</a></p><p><a href="#129%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20spring%20batch%EF%BC%9F">129、什么是 Spring Batch？</a></p><p><a href="#130%E3%80%81spring%20mvc%20%E5%92%8C%20struts%20%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">130、spring mvc 和 struts 的区别是什么？</a></p><p><a href="#131%E3%80%81%E8%AF%B7%E4%B8%BE%E4%BE%8B%E8%A7%A3%E9%87%8A@required%20%E6%B3%A8%E8%A7%A3%EF%BC%9F">131、请举例解释@Required 注解？</a></p><p><a href="#132%E3%80%81spring%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3">132、Spring常用注解</a></p><p><a href="#133%E3%80%81%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%9D%83%E9%99%90%E9%AA%8C%E8%AF%81%E7%9A%84%EF%BC%8C%E6%9D%83%E9%99%90%E9%AA%8C%E8%AF%81%E9%9C%80%E8%A6%81%E5%87%A0%E5%BC%A0%E8%A1%A8">133、项目中是如何实现权限验证的，权限验证需要几张表</a></p><p><a href="#134%E3%80%81%E8%B0%88%E8%B0%88controller%EF%BC%8C%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E7%9A%84%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98">134、谈谈controller，接口调用的路径问题</a></p><p><a href="#135%E3%80%81%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4">135、如何防止表单重复提交</a></p><p><a href="#136%E3%80%81spring%E4%B8%AD%E9%83%BD%E5%BA%94%E7%94%A8%E4%BA%86%E5%93%AA%E4%BA%9B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">136、Spring中都应用了哪些设计模式</a></p><p><a href="#137%E3%80%81%E8%AF%B7%E4%B8%BE%E4%BE%8B%E8%AF%B4%E6%98%8E%E5%A6%82%E4%BD%95%E5%9C%A8%20spring%20%E4%B8%AD%E6%B3%A8%E5%85%A5%E4%B8%80%E4%B8%AA%20java%20collection%EF%BC%9F">137、请举例说明如何在 Spring 中注入一个 Java Collection？</a></p><p><a href="#138%E3%80%81mybatis%20%E4%B8%AD%20#%7B%7D%E5%92%8C%20$%7B%7D%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">138、mybatis 中 #{}和 ${}的区别是什么？</a></p><p><a href="#139%E3%80%81mybatis%20%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%EF%BC%9F%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">139、mybatis 是否支持延迟加载？延迟加载的原理是什么？</a></p><p><a href="#140%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20mybatis%20%E7%9A%84%E4%B8%80%E7%BA%A7%E7%BC%93%E5%AD%98%E5%92%8C%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%EF%BC%9F">140、说一下 mybatis 的一级缓存和二级缓存？</a></p><p><a href="#141%E3%80%81mybatis%20%E6%9C%89%E5%93%AA%E4%BA%9B%E6%89%A7%E8%A1%8C%E5%99%A8%EF%BC%88executor%EF%BC%89%EF%BC%9F">141、mybatis 有哪些执行器（Executor）？</a></p><p><a href="#142%E3%80%81mybatis%20%E5%92%8C%20hibernate%20%E7%9A%84%E5%8C%BA%E5%88%AB%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F">142、mybatis 和 hibernate 的区别有哪些？</a></p><p><a href="#143%E3%80%81mybatis%E6%9F%A5%E8%AF%A2%E5%A4%9A%E4%B8%AAid%E3%80%81mybatis%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7">143、myBatis查询多个id、myBatis常用属性</a></p><p><a href="#144%E3%80%81mybatis%E4%B8%80%E7%BA%A7%E7%BC%93%E5%AD%98%E3%80%81%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98">144、mybatis一级缓存、二级缓存</a></p><p><a href="#145%E3%80%81mybatis%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2sql%E6%B3%A8%E5%85%A5">145、mybatis如何防止sql注入</a></p><p><a href="#146%E3%80%81hibernate%20%E4%B8%AD%E5%A6%82%E4%BD%95%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%9F%A5%E7%9C%8B%E6%89%93%E5%8D%B0%E7%9A%84%20sql%20%E8%AF%AD%E5%8F%A5%EF%BC%9F">146、hibernate 中如何在控制台查看打印的 sql 语句？</a></p><p><a href="#147%E3%80%81hibernate%20%E6%9C%89%E5%87%A0%E7%A7%8D%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F%EF%BC%9F">147、hibernate 有几种查询方式？</a></p><p><a href="#148%E3%80%81hibernate%20%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%8F%AF%E4%BB%A5%E8%A2%AB%E5%AE%9A%E4%B9%89%E4%B8%BA%20final%20%E5%90%97%EF%BC%9F">148、hibernate 实体类可以被定义为 final 吗？</a></p><p><a href="#149%E3%80%81%E5%9C%A8%20hibernate%20%E4%B8%AD%E4%BD%BF%E7%94%A8%20integer%20%E5%92%8C%20int%20%E5%81%9A%E6%98%A0%E5%B0%84%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">149、在 hibernate 中使用 Integer 和 int 做映射有什么区别？</a></p><p><a href="#150%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20spring%20boot%EF%BC%9Fspring%20boot%20%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E7%82%B9%EF%BC%9F">150、什么是 Spring Boot？Spring Boot 有哪些优点？</a></p><p><a href="#151%E3%80%81spring%20boot%20%E4%B8%AD%E7%9A%84%E7%9B%91%E8%A7%86%E5%99%A8%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">151、Spring Boot 中的监视器是什么？</a></p><p><a href="#152%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20yaml%EF%BC%9F">152、什么是 YAML？</a></p><p><a href="#153%E3%80%81%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20spring%20boot%20%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5%E5%92%8C%E6%8E%92%E5%BA%8F%EF%BC%9F">153、如何使用 Spring Boot 实现分页和排序？</a></p><p><a href="#154%E3%80%81%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20spring%20boot%20%E5%AE%9E%E7%8E%B0%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%EF%BC%9F">154、如何使用 Spring Boot 实现异常处理？</a></p><p><a href="#155%E3%80%81%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95">155、单点登录</a></p><p><a href="#156%E3%80%81spring%20boot%E6%AF%94spring%E5%A4%9A%E5%93%AA%E4%BA%9B%E6%B3%A8%E8%A7%A3">156、Spring Boot比Spring多哪些注解</a></p><p><a href="#157%E3%80%81%E6%89%93%E5%8C%85%E5%92%8C%E9%83%A8%E7%BD%B2">157、打包和部署</a></p><p><a href="#158%E3%80%81spring%20boot%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93">158、Spring Boot如何访问不同的数据库</a></p><p><a href="#159%E3%80%81%E6%9F%A5%E8%AF%A2%E7%BD%91%E7%AB%99%E5%9C%A8%E7%BA%BF%E4%BA%BA%E6%95%B0">159、查询网站在线人数</a></p><p><a href="#160%E3%80%81easyexcel%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0">160、easyExcel如何实现</a></p><p><a href="#161%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%20swagger%EF%BC%9F%E4%BD%A0%E7%94%A8%20spring%20boot%20%E5%AE%9E%E7%8E%B0%E4%BA%86%E5%AE%83%E5%90%97%EF%BC%9F">161、什么是 Swagger？你用 Spring Boot 实现了它吗？</a></p><p><a href="#162%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%89%E8%8C%83%E5%BC%8F%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">162、数据库的三范式是什么？</a></p><p><a href="#163%E3%80%81%E4%B8%80%E5%BC%A0%E8%87%AA%E5%A2%9E%E8%A1%A8%E9%87%8C%E9%9D%A2%E6%80%BB%E5%85%B1%E6%9C%89%207%20%E6%9D%A1%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%88%A0%E9%99%A4%E4%BA%86%E6%9C%80%E5%90%8E%202%20%E6%9D%A1%E6%95%B0%E6%8D%AE%EF%BC%8C%E9%87%8D%E5%90%AF%20mysql%20%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%8C%E5%8F%88%E6%8F%92%E5%85%A5%E4%BA%86%E4%B8%80%E6%9D%A1%E6%95%B0%E6%8D%AE%EF%BC%8C%E6%AD%A4%E6%97%B6%20id%20%E6%98%AF%E5%87%A0%EF%BC%9F">163、一张自增表里面总共有 7 条数据，删除了最后 2 条数据，重启 mysql 数据库，又插入了一条数据，此时 id 是几？</a></p><p><a href="#%E5%8D%81%E4%B9%9D%E3%80%81%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E7%89%88%E6%9C%AC%EF%BC%9F">164、如何获取当前数据库版本？</a></p><p><a href="#165%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20acid%20%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">165、说一下 ACID 是什么？</a></p><p><a href="#166%E3%80%81char%20%E5%92%8C%20varchar%20%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">166、char 和 varchar 的区别是什么？</a></p><p><a href="#167%E3%80%81float%20%E5%92%8C%20double%20%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">167、float 和 double 的区别是什么？</a></p><p><a href="#168%E3%80%81oracle%E5%88%86%E9%A1%B5sql">168、Oracle分页sql</a></p><p><a href="#169%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E4%B8%BB%E9%94%AE%E5%94%AF%E4%B8%80%E6%80%A7">169、数据库如何保证主键唯一性</a></p><p><a href="#170%E3%80%81%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E5%BA%93">170、如何设计数据库</a></p><p><a href="#171%E3%80%81%E6%80%A7%E5%88%AB%E6%98%AF%E5%90%A6%E9%80%82%E5%90%88%E5%81%9A%E7%B4%A2%E5%BC%95">171、性别是否适合做索引</a></p><p><a href="#172%E3%80%81%E5%A6%82%E4%BD%95%E6%9F%A5%E8%AF%A2%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE">172、如何查询重复的数据</a></p><p><a href="#173%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%88%AC%E4%BC%9A%E9%87%87%E5%8F%96%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%EF%BC%9F">173、数据库一般会采取什么样的优化方法？</a></p><p><a href="#174%E3%80%81%E7%B4%A2%E5%BC%95%E6%80%8E%E4%B9%88%E5%AE%9A%E4%B9%89%EF%BC%8C%E5%88%86%E5%93%AA%E5%87%A0%E7%A7%8D">174、索引怎么定义，分哪几种</a></p><p><a href="#175%E3%80%81mysql%20%E7%9A%84%E5%86%85%E8%BF%9E%E6%8E%A5%E3%80%81%E5%B7%A6%E8%BF%9E%E6%8E%A5%E3%80%81%E5%8F%B3%E8%BF%9E%E6%8E%A5%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">175、mysql 的内连接、左连接、右连接有什么区别？</a></p><p><a href="#176%E3%80%81rabbitmq%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F">176、RabbitMQ的使用场景有哪些？</a></p><p><a href="#177%E3%80%81rabbitmq%E6%9C%89%E5%93%AA%E4%BA%9B%E9%87%8D%E8%A6%81%E7%9A%84%E8%A7%92%E8%89%B2%EF%BC%9F%E6%9C%89%E5%93%AA%E4%BA%9B%E9%87%8D%E8%A6%81%E7%9A%84%E7%BB%84%E4%BB%B6%EF%BC%9F">177、RabbitMQ有哪些重要的角色？有哪些重要的组件？</a></p><p><a href="#178%E3%80%81rabbitmq%E4%B8%AD%20vhost%20%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">178、RabbitMQ中 vhost 的作用是什么？</a></p><p><a href="#179%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20jvm%20%E7%9A%84%E4%B8%BB%E8%A6%81%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86%EF%BC%9F%E5%8F%8A%E5%85%B6%E4%BD%9C%E7%94%A8%EF%BC%9F">179、说一下 jvm 的主要组成部分？及其作用？</a></p><p><a href="#180%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20jvm%20%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA%EF%BC%9F">180、说一下 jvm 运行时数据区？</a></p><p><a href="#181%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%EF%BC%8C%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F">181、什么是类加载器，类加载器有哪些？</a></p><p><a href="#182%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%E7%B1%BB%E5%8A%A0%E8%BD%BD%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%EF%BC%9F">182、说一下类加载的执行过程？</a></p><p><a href="#183%E3%80%81jvm%E7%9A%84%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">183、JVM的类加载机制是什么？</a></p><p><a href="#184%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B%EF%BC%9F">184、什么是双亲委派模型？</a></p><p><a href="#185%E3%80%81%E6%80%8E%E4%B9%88%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%A2%AB%E5%9B%9E%E6%94%B6%EF%BC%9F">185、怎么判断对象是否可以被回收？</a></p><p><a href="#186%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20jvm%20%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95%EF%BC%9F">186、说一下 jvm 有哪些垃圾回收算法？</a></p><p><a href="#187%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8B%20jvm%20%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%EF%BC%9F">187、说一下 jvm 有哪些垃圾回收器？</a></p><p><a href="#188%E3%80%81jvm%E6%A0%88%E5%A0%86%E6%A6%82%E5%BF%B5%EF%BC%8C%E4%BD%95%E6%97%B6%E9%94%80%E6%AF%81%E5%AF%B9%E8%B1%A1">188、JVM栈堆概念，何时销毁对象</a></p><p><a href="#189%E3%80%81%E6%96%B0%E7%94%9F%E4%BB%A3%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E5%92%8C%E8%80%81%E7%94%9F%E4%BB%A3%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">189、新生代垃圾回收器和老生代垃圾回收器都有哪些？有什么区别？</a></p><p><a href="#190%E3%80%81%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8B%20cms%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%EF%BC%9F">190、详细介绍一下 CMS 垃圾回收器？</a></p><p><a href="#191%E3%80%81%E7%AE%80%E8%BF%B0%E5%88%86%E4%BB%A3%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9F">191、简述分代垃圾回收器是怎么工作的？</a></p><p><a href="#192%E3%80%81redis%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">192、Redis是什么？</a></p><p><a href="#193%E3%80%81redis%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%EF%BC%9F">193、Redis都有哪些使用场景？</a></p><p><a href="#194%E3%80%81redis%E6%9C%89%E5%93%AA%E4%BA%9B%E5%8A%9F%E8%83%BD%EF%BC%9F">194、Redis有哪些功能？</a></p><p><a href="#195%E3%80%81redis%E6%94%AF%E6%8C%81%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F">195、Redis支持的数据类型有哪些？</a></p><p><a href="#196%E3%80%81redis%E5%8F%96%E5%80%BC%E5%AD%98%E5%80%BC%E9%97%AE%E9%A2%98">196、Redis取值存值问题</a></p><p><a href="#197%E3%80%81redis%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%8D%95%E7%BA%BF%E7%A8%8B%E7%9A%84%EF%BC%9F">197、Redis为什么是单线程的？</a></p><p><a href="#198%E3%80%81redis%E7%9C%9F%E7%9A%84%E6%98%AF%E5%8D%95%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%90%97%EF%BC%9F">198、Redis真的是单线程的吗？</a></p><p><a href="#199%E3%80%81redis%E6%8C%81%E4%B9%85%E5%8C%96%E6%9C%89%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9F">199、Redis持久化有几种方式？</a></p><p><a href="#200%E3%80%81redis%E5%92%8C%20memecache%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F">200、Redis和 memecache 有什么区别？</a></p><p><a href="#201%E3%80%81redis%E6%94%AF%E6%8C%81%E7%9A%84%20java%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F">201、Redis支持的 java 客户端都有哪些？</a></p><p><a href="#202%E3%80%81jedis%20%E5%92%8C%20redisson%20%E6%9C%89%E5%93%AA%E4%BA%9B%E5%8C%BA%E5%88%AB%EF%BC%9F">202、jedis 和 redisson 有哪些区别？</a></p><p><a href="#203%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F%EF%BC%9F%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%EF%BC%9F">203、什么是缓存穿透？怎么解决？</a></p><p><a href="#204%E3%80%81%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E7%BC%93%E5%AD%98%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7%EF%BC%9F">204、怎么保证缓存和数据库数据的一致性？</a></p><p><a href="#205%E3%80%81redis%EF%BC%8C%E4%BB%80%E4%B9%88%E6%98%AF%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F%EF%BC%9F%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%EF%BC%9F">205、Redis，什么是缓存穿透？怎么解决？</a></p><p><a href="#206%E3%80%81redis%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%EF%BC%9F">206、Redis怎么实现分布式锁？</a></p><p><a href="#207%E3%80%81redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%9C%89%E4%BB%80%E4%B9%88%E7%BC%BA%E9%99%B7%EF%BC%9F">207、Redis分布式锁有什么缺陷？</a></p><p><a href="#208%E3%80%81redis%E5%A6%82%E4%BD%95%E5%81%9A%E5%86%85%E5%AD%98%E4%BC%98%E5%8C%96%EF%BC%9F">208、Redis如何做内存优化？</a></p><h3 id="1、JDK-和-JRE-有什么区别？"><a href="#1、JDK-和-JRE-有什么区别？" class="headerlink" title="1、JDK 和 JRE 有什么区别？"></a>1、JDK 和 JRE 有什么区别？</h3><p>JDK（Java Development Kit），Java开发工具包</p><p>JRE（Java Runtime Environment），Java运行环境</p><p>JDK中包含JRE，JDK中有一个名为jre的目录，里面包含两个文件夹bin和lib，bin就是JVM，lib就是JVM工作所需要的类库。</p><h3 id="2、-和-equals-的区别是什么？"><a href="#2、-和-equals-的区别是什么？" class="headerlink" title="2、== 和 equals 的区别是什么？"></a>2、== 和 equals 的区别是什么？</h3><ol><li>对于基本类型，==比较的是值；</li><li>对于引用类型，==比较的是地址；</li><li>equals不能用于基本类型的比较；</li><li>如果没有重写equals，equals就相当于==；</li><li>如果重写了equals方法，equals比较的是对象的内容；</li></ol><h3 id="3、final-在-java-中有什么作用？"><a href="#3、final-在-java-中有什么作用？" class="headerlink" title="3、final 在 java 中有什么作用？"></a>3、final 在 java 中有什么作用？</h3><p>（1）用来修饰一个引用</p><ol><li>如果引用为基本数据类型，则该引用为常量，该值无法修改；</li><li>如果引用为引用数据类型，比如对象、数组，则该对象、数组本身可以修改，但指向该对象或数组的地址的引用不能修改。</li><li>如果引用时类的成员变量，则必须当场赋值，否则编译会报错。</li></ol><p>（2）用来修饰一个方法</p><p>当使用final修饰方法时，这个方法将成为最终方法，无法被子类重写。但是，该方法仍然可以被继承。</p><p>（3）用来修饰类</p><p>当用final修改类时，该类成为最终类，无法被继承。</p><p>比如常用的String类就是最终类。</p><h3 id="4、java-中的-Math-round-1-5-等于多少？"><a href="#4、java-中的-Math-round-1-5-等于多少？" class="headerlink" title="4、java 中的 Math.round(-1.5) 等于多少？"></a>4、java 中的 Math.round(-1.5) 等于多少？</h3><p>Math提供了三个与取整有关的方法：ceil、floor、round</p><p>（1）ceil：向上取整；</p><p>Math.ceil(11.3) = 12;</p><p>Math.ceil(-11.3) = 11;</p><p>（2）floor：向下取整；</p><p>Math.floor(11.3) = 11;</p><p>Math.floor(-11.3) = -12;</p><p>（3）round：四舍五入；</p><p>加0.5然后向下取整。</p><p>Math.round(11.3) = 11;</p><p>Math.round(11.8) = 12;</p><p>Math.round(-11.3) = -11;</p><p>Math.round(-11.8) = -12;</p><h3 id="5、String-属于基础的数据类型吗？"><a href="#5、String-属于基础的数据类型吗？" class="headerlink" title="5、String 属于基础的数据类型吗？"></a>5、String 属于基础的数据类型吗？</h3><p>不属于。</p><p>八种基本数据类型：byte、short、char、int、long、double、float、boolean。</p><h3 id="6、String-str-”i”与-String-str-new-String-“i”-一样吗？"><a href="#6、String-str-”i”与-String-str-new-String-“i”-一样吗？" class="headerlink" title="6、String str=”i”与 String str=new String(“i”)一样吗？"></a>6、String str=”i”与 String str=new String(“i”)一样吗？</h3><p>String str=”i”会将起分配到常量池中，常量池中没有重复的元素，如果常量池中存中i，就将i的地址赋给变量，如果没有就创建一个再赋给变量。</p><p>String str=new String(“i”)会将对象分配到堆中，即使内存一样，还是会重新创建一个新的对象。</p><h3 id="7、如何将字符串反转？"><a href="#7、如何将字符串反转？" class="headerlink" title="7、如何将字符串反转？"></a>7、如何将字符串反转？</h3><p>将对象封装到stringBuilder中，调用reverse方法反转。</p><p><img src="https://img-blog.csdnimg.cn/20210801160716840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><h3 id="8、String-类的常用方法都有那些？"><a href="#8、String-类的常用方法都有那些？" class="headerlink" title="8、String 类的常用方法都有那些？"></a>8、String 类的常用方法都有那些？</h3><p>（1）常见String类的获取功能</p><p>length：获取字符串长度；<br>charAt(int index)：获取指定索引位置的字符；<br>indexOf(int ch)：返回指定字符在此字符串中第一次出现处的索引；<br>substring(int start)：从指定位置开始截取字符串,默认到末尾；<br>substring(int start,int end)：从指定位置开始到指定位置结束截取字符串；</p><p>（2）常见String类的判断功能</p><p>equals(Object obj)： 比较字符串的内容是否相同,区分大小写；<br>contains(String str): 判断字符串中是否包含传递进来的字符串；<br>startsWith(String str): 判断字符串是否以传递进来的字符串开头；<br>endsWith(String str): 判断字符串是否以传递进来的字符串结尾；<br>isEmpty(): 判断字符串的内容是否为空串””；</p><p>（3）常见String类的转换功能</p><p>byte[] getBytes(): 把字符串转换为字节数组；<br>char[] toCharArray(): 把字符串转换为字符数组；<br>String valueOf(char[] chs): 把字符数组转成字符串。valueOf可以将任意类型转为字符串；<br>toLowerCase(): 把字符串转成小写；<br>toUpperCase(): 把字符串转成大写；<br>concat(String str): 把字符串拼接；</p><p>（4）常见String类的其他常用功能</p><p>replace(char old,char new) 将指定字符进行互换<br>replace(String old,String new) 将指定字符串进行互换<br>trim() 去除两端空格<br>int compareTo(String str) 会对照ASCII 码表 从第一个字母进行减法运算 返回的就是这个减法的结果，如果前面几个字母一样会根据两个字符串的长度进行减法运算返回的就是这个减法的结果，如果连个字符串一摸一样 返回的就是0。</p><h3 id="9、new-String-“a”-new-String-“b”-会创建几个对象？"><a href="#9、new-String-“a”-new-String-“b”-会创建几个对象？" class="headerlink" title="9、new String(“a”) + new String(“b”) 会创建几个对象？"></a>9、new String(“a”) + new String(“b”) 会创建几个对象？</h3><p>对象1：new StringBuilder()</p><p>对象2：new String(“a”)</p><p>对象3：常量池中的”a”</p><p>对象4：new String(“b”)</p><p>对象5：常量池中的”b”</p><p>深入剖析：StringBuilder中的toString()：</p><p>对象6：new String(“ab”)</p><p>强调一下，toString()的调用，在字符串常量池中，没有生成”ab”</p><p>附加题</p><blockquote><p>String s1 = new String(“1”) + new String(“1”);//s1变量记录的地址为：new String<br>s1.intern();//在字符串常量池中生成”11”。如何理解：jdk6：创建了一个新的对象”11”，也就有新的地址；jdk7：此时常量池中并没有创建”11”，而是创建了一个指向堆空间中new String(“11”)的地址；<br>String s2 = “11”;<br>System.out.println(s1 == s2);//jdk6:false;jdk7:true</p></blockquote><h3 id="10、如何将字符串反转？"><a href="#10、如何将字符串反转？" class="headerlink" title="10、如何将字符串反转？"></a>10、如何将字符串反转？</h3><p>添加到StringBuilder中，然后调用reverse()。</p><h3 id="11、String-类的常用方法都有那些？"><a href="#11、String-类的常用方法都有那些？" class="headerlink" title="11、String 类的常用方法都有那些？"></a>11、String 类的常用方法都有那些？</h3><p>equals、length、contains、replace、split、hashcode、indexof、substring、trim、toUpperCase、toLowerCase、isEmpty等等。</p><h3 id="12、普通类和抽象类有哪些区别？"><a href="#12、普通类和抽象类有哪些区别？" class="headerlink" title="12、普通类和抽象类有哪些区别？"></a>12、普通类和抽象类有哪些区别？</h3><p>抽象类不能被实例化；<br>抽象类可以有抽象方法，只需申明，无须实现；<br>有抽象方法的类一定是抽象类；<br>抽象类的子类必须实现抽象类中的所有抽象方法，否则子类仍然是抽象类；<br>抽象方法不能声明为静态、不能被static、final修饰。</p><h3 id="13、接口和抽象类有什么区别？"><a href="#13、接口和抽象类有什么区别？" class="headerlink" title="13、接口和抽象类有什么区别？"></a>13、接口和抽象类有什么区别？</h3><p>（1）接口</p><p>接口使用interface修饰；<br>接口不能实例化；<br>类可以实现多个接口；</p><p>①java8之前，接口中的方法都是抽象方法，省略了public abstract。②java8之后；接口中可以定义静态方法，静态方法必须有方法体，普通方法没有方法体，需要被实现；</p><p>（2）抽象类</p><p>抽象类使用abstract修饰；<br>抽象类不能被实例化；<br>抽象类只能单继承；<br>抽象类中可以包含抽象方法和非抽象方法，非抽象方法需要有方法体；<br>如果一个类继承了抽象类，①如果实现了所有的抽象方法，子类可以不是抽象类；②如果没有实现所有的抽象方法，子类仍然是抽象类。</p><h3 id="14、java-中-IO-流分为几种？"><a href="#14、java-中-IO-流分为几种？" class="headerlink" title="14、java 中 IO 流分为几种？"></a>14、java 中 IO 流分为几种？</h3><p>（1）按流划分，可以分为输入流和输出流；</p><p>（2）按单位划分，可以分为字节流和字符流；</p><p>字节流：inputStream、outputStream；</p><p>字符流：reader、writer；</p><h3 id="15、BIO、NIO、AIO-有什么区别？"><a href="#15、BIO、NIO、AIO-有什么区别？" class="headerlink" title="15、BIO、NIO、AIO 有什么区别？"></a>15、BIO、NIO、AIO 有什么区别？</h3><p>（1）同步阻塞BIO</p><p>一个连接一个线程。</p><p>JDK1.4之前，建立网络连接的时候采用BIO模式，先在启动服务端socket，然后启动客户端socket，对服务端通信，客户端发送请求后，先判断服务端是否有线程响应，如果没有则会一直等待或者遭到拒绝请求，如果有的话会等待请求结束后才继续执行。</p><p>（2）同步非阻塞NIO</p><p>NIO主要是想解决BIO的大并发问题，BIO是每一个请求分配一个线程，当请求过多时，每个线程占用一定的内存空间，服务器瘫痪了。</p><p>JDK1.4开始支持NIO，适用于连接数目多且连接比较短的架构，比如聊天服务器，并发局限于应用中。</p><p>一个请求一个线程。</p><p>（3）异步非阻塞AIO</p><p>一个有效请求一个线程。</p><p>JDK1.7开始支持AIO，适用于连接数目多且连接比较长的结构，比如相册服务器，充分调用OS参与并发操作。</p><h3 id="16、Files的常用方法都有哪些？"><a href="#16、Files的常用方法都有哪些？" class="headerlink" title="16、Files的常用方法都有哪些？"></a>16、Files的常用方法都有哪些？</h3><p>exist<br>createFile<br>createDirectory<br>write<br>read<br>copy<br>size<br>delete<br>move</p><h3 id="17、什么是反射？"><a href="#17、什么是反射？" class="headerlink" title="17、什么是反射？"></a>17、什么是反射？</h3><p>所谓反射，是java在运行时进行自我观察的能力，通过class、constructor、field、method四个方法获取一个类的各个组成部分。</p><p>在Java运行时环境中，对任意一个类，可以知道类有哪些属性和方法。这种动态获取类的信息以及动态调用对象的方法的功能来自于反射机制。</p><h3 id="18、什么是-java-序列化？什么情况下需要序列化？"><a href="#18、什么是-java-序列化？什么情况下需要序列化？" class="headerlink" title="18、什么是 java 序列化？什么情况下需要序列化？"></a>18、什么是 java 序列化？什么情况下需要序列化？</h3><p>序列化就是一种用来处理对象流的机制。将对象的内容流化，将流化后的对象传输于网络之间。</p><p>序列化是通过实现serializable接口，该接口没有需要实现的方法，implement Serializable只是为了标注该对象是可被序列化的，使用一个输出流（FileOutputStream）来构造一个ObjectOutputStream对象，接着使用ObjectOutputStream对象的writeObejct（Object object）方法就可以将参数的obj对象到磁盘，需要恢复的时候使用输入流。</p><p>序列化是将对象转换为容易传输的格式的过程。</p><p>例如，可以序列化一个对象，然后通过HTTP通过Internet在客户端和服务器之间传输该对象。在另一端，反序列化将从流中心构造成对象。</p><p>一般程序在运行时，产生对象，这些对象随着程序的停止而消失，但我们想将某些对象保存下来，这时，我们就可以通过序列化将对象保存在磁盘，需要使用的时候通过反序列化获取到。</p><p>对象序列化的最主要目的就是传递和保存对象，保存对象的完整性和可传递性。</p><p>譬如通过网络传输或者把一个对象保存成本地一个文件的时候，需要使用序列化。</p><h3 id="19、为什么要使用克隆？如何实现对象克隆？深拷贝和浅拷贝区别是什么？"><a href="#19、为什么要使用克隆？如何实现对象克隆？深拷贝和浅拷贝区别是什么？" class="headerlink" title="19、为什么要使用克隆？如何实现对象克隆？深拷贝和浅拷贝区别是什么？"></a>19、为什么要使用克隆？如何实现对象克隆？深拷贝和浅拷贝区别是什么？</h3><p>（1）什么要使用克隆？</p><p>想对一个对象进行复制，又想保留原有的对象进行接下来的操作，这个时候就需要克隆了。</p><p>（2）如何实现对象克隆？</p><p>实现Cloneable接口，重写clone方法；<br>实现Serializable接口，通过对象的序列化和反序列化实现克隆，可以实现真正的深克隆。<br>BeanUtils，apache和Spring都提供了bean工具，只是这都是浅克隆。</p><p>（3）深拷贝和浅拷贝区别是什么？</p><p>浅拷贝：仅仅克隆基本类型变量，不克隆引用类型变量；<br>深克隆：既克隆基本类型变量，又克隆引用类型变量；</p><p>（4）代码实例</p><p><img src="https://img-blog.csdnimg.cn/20210801160905498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20210801160958218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><h3 id="20、throw-和-throws-的区别？"><a href="#20、throw-和-throws-的区别？" class="headerlink" title="20、throw 和 throws 的区别？"></a>20、throw 和 throws 的区别？</h3><p>（1）throw</p><p>作用在方法内，表示抛出具体异常，由方法体内的语句处理；<br>一定抛出了异常；</p><p>（2）throws</p><p>作用在方法的声明上，表示抛出异常，由调用者来进行异常处理；<br>可能出现异常，不一定会发生异常；</p><h3 id="21、final、finally、finalize-有什么区别？"><a href="#21、final、finally、finalize-有什么区别？" class="headerlink" title="21、final、finally、finalize 有什么区别？"></a>21、final、finally、finalize 有什么区别？</h3><p>final可以修饰类，变量，方法，修饰的类不能被继承，修饰的变量不能重新赋值，修饰的方法不能被重写</p><p>finally用于抛异常，finally代码块内语句无论是否发生异常，都会在执行finally，常用于一些流的关闭。</p><p>finalize方法用于垃圾回收。</p><p>一般情况下不需要我们实现finalize，当对象被回收的时候需要释放一些资源，比如socket链接，在对象初始化时创建，整个生命周期内有效，那么需要实现finalize方法，关闭这个链接。</p><p>但是当调用finalize方法后，并不意味着gc会立即回收该对象，所以有可能真正调用的时候，对象又不需要回收了，然后到了真正要回收的时候，因为之前调用过一次，这次又不会调用了，产生问题。所以，不推荐使用finalize方法。</p><h3 id="22、try-catch-finally-中，如果-catch-中-return-了，finally-还会执行吗？"><a href="#22、try-catch-finally-中，如果-catch-中-return-了，finally-还会执行吗？" class="headerlink" title="22、try-catch-finally 中，如果 catch 中 return 了，finally 还会执行吗？"></a>22、try-catch-finally 中，如果 catch 中 return 了，finally 还会执行吗？</h3><p><img src="https://img-blog.csdnimg.cn/20210801161038947.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><h3 id="23、常见的异常类有哪些？"><a href="#23、常见的异常类有哪些？" class="headerlink" title="23、常见的异常类有哪些？"></a>23、常见的异常类有哪些？</h3><ol><li>NullPointerException：空指针异常；</li><li>SQLException：数据库相关的异常；</li><li>IndexOutOfBoundsException：数组下角标越界异常；</li><li>FileNotFoundException：打开文件失败时抛出；</li><li>IOException：当发生某种IO异常时抛出；</li><li>ClassCastException：当试图将对象强制转换为不是实例的子类时，抛出此异常；</li><li>NoSuchMethodException：无法找到某一方法时，抛出；</li><li>ArrayStoreException：试图将错误类型的对象存储到一个对象数组时抛出的异常；</li><li>NumberFormatException：当试图将字符串转换成数字时，失败了，抛出；</li><li>IllegalArgumentException 抛出的异常表明向方法传递了一个不合法或不正确的参数。</li><li>ArithmeticException当出现异常的运算条件时，抛出此异常。例如，一个整数”除以零”时，抛出此类的一个实例。</li></ol><h3 id="24、hashcode是什么？有什么作用？"><a href="#24、hashcode是什么？有什么作用？" class="headerlink" title="24、hashcode是什么？有什么作用？"></a>24、hashcode是什么？有什么作用？</h3><p>Java中Object有一个方法：</p><p>public native int hashcode();</p><p>（1）hashcode()方法的作用</p><p>hashcode()方法主要配合基于散列的集合一起使用，比如HashSet、HashMap、HashTable。</p><p>当集合需要添加新的对象时，先调用这个对象的hashcode()方法，得到对应的hashcode值，实际上hashmap中会有一个table保存已经存进去的对象的hashcode值，如果table中没有改hashcode值，则直接存入，如果有，就调用equals方法与新元素进行比较，相同就不存了，不同就存入。</p><p>（2）equals和hashcode的关系</p><p>如果equals为true，hashcode一定相等；</p><p>如果equals为false，hashcode不一定不相等；</p><p>如果hashcode值相等，equals不一定相等；</p><p>如果hashcode值不等，equals一定不等；</p><p>（3）重写equals方法时，一定要重写hashcode方法</p><p>（4）百度百科</p><blockquote><p>hashcode方法返回该对象的哈希码值。支持该方法是为哈希表提供一些优点，例如，java.util.Hashtable 提供的哈希表。<br>hashCode 的常规协定是：<br>在 Java 应用程序执行期间，在同一对象上多次调用 hashCode 方法时，必须一致地返回相同的整数，前提是对象上 equals 比较中所用的信息没有被修改。从某一应用程序的一次执行到同一应用程序的另一次执行，该整数无需保持一致。<br>如果根据 equals(Object) 方法，两个对象是相等的，那么在两个对象中的每个对象上调用 hashCode 方法都必须生成相同的整数结果。<br>以下情况不 是必需的：如果根据 equals(java.lang.Object) 方法，两个对象不相等，那么在两个对象中的任一对象上调用 hashCode 方法必定会生成不同的整数结果。但是，程序员应该知道，为不相等的对象生成不同整数结果可以提高哈希表的性能。<br>实际上，由 Object 类定义的 hashCode 方法确实会针对不同的对象返回不同的整数。（这一般是通过将该对象的内部地址转换成一个整数来实现的，但是 JavaTM 编程语言不需要这种实现技巧。）<br>当equals方法被重写时，通常有必要重写 hashCode 方法，以维护 hashCode 方法的常规协定，该协定声明相等对象必须具有相等的哈希码。</p></blockquote><p>（5）小白解释</p><blockquote><p>1.hashcode是用来查找的，如果你学过数据结构就应该知道，在查找和排序这一章有<br>例如内存中有这样的位置<br>0 1 2 3 4 5 6 7<br>而我有个类，这个类有个字段叫ID,我要把这个类存放在以上8个位置之一，如果不用hashcode而任意存放，那么当查找时就需要到这八个位置里挨个去找，或者用二分法一类的算法。<br>但如果用hashcode那就会使效率提高很多。<br>我们这个类中有个字段叫ID,那么我们就定义我们的hashcode为ID％8，然后把我们的类存放在取得得余数那个位置。比如我们的ID为9，9除8的余数为1，那么我们就把该类存在1这个位置，如果ID是13，求得的余数是5，那么我们就把该类放在5这个位置。这样，以后在查找该类时就可以通过ID除 8求余数直接找到存放的位置了。<br>2.但是如果两个类有相同的hashcode怎么办那（我们假设上面的类的ID不是唯一的），例如9除以8和17除以8的余数都是1，那么这是不是合法的，回答是：可以这样。那么如何判断呢？在这个时候就需要定义 equals了。<br>也就是说，我们先通过 hashcode来判断两个类是否存放某个桶里，但这个桶里可能有很多类，那么我们就需要再通过 equals 来在这个桶里找到我们要的类。<br>那么。重写了equals()，为什么还要重写hashCode()呢？<br>想想，你要在一个桶里找东西，你必须先要找到这个桶啊，你不通过重写hashcode()来找到桶，光重写equals()有什么用啊。</p></blockquote><h3 id="25、java-中操作字符串都有哪些类？它们之间有什么区别？"><a href="#25、java-中操作字符串都有哪些类？它们之间有什么区别？" class="headerlink" title="25、java 中操作字符串都有哪些类？它们之间有什么区别？"></a>25、java 中操作字符串都有哪些类？它们之间有什么区别？</h3><p>（1）String</p><p>String是不可变对象，每次对String类型的改变时都会生成一个新的对象。</p><p>（2）StringBuilder</p><p>线程不安全，效率高，多用于单线程。</p><p>（3）StringBuffer</p><p>线程安全，由于加锁的原因，效率不如StringBuilder，多用于多线程。</p><p>不频繁的字符串操作使用String，操作频繁的情况不建议使用String。</p><p>StringBuilder &gt; StringBuffer &gt; String。</p><h3 id="26、java-中都有哪些引用类型？"><a href="#26、java-中都有哪些引用类型？" class="headerlink" title="26、java 中都有哪些引用类型？"></a>26、java 中都有哪些引用类型？</h3><p>（1）强引用</p><p>Java中默认声明的就是强引用，比如：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">obj = <span class="literal">null</span>;</span><br></pre></td></tr></tbody></table></figure><p>只要强引用存在，垃圾回收器将永远不会回收被引用的对象。如果想被回收，可以将对象置为null；</p><p>（2）软引用（SoftReference）</p><p>在内存足够的时候，软引用不会被回收，只有在内存不足时，系统才会回收软引用对象，如果回收了软引用对象之后仍然没有足够的内存，才会跑出内存溢出异常。</p><p>byte[] buff = new byte[1024 * 1024];<br>SoftReference</p><p>（3）弱引用（WeakReference）</p><p>进行垃圾回收时，弱引用就会被回收。</p><p>（4）虚引用（PhantomReference）</p><p>（5）引用队列（ReferenceQueue）</p><p>引用队列可以与软引用、弱引用、虚引用一起配合使用。</p><p>当垃圾回收器准备回收一个对象时，如果发现它还有引用，就会在回收对象之前，把这个引用加入到引用队列中。</p><p>程序可以通过判断引用队列中是否加入了引用，来判断被引用的对象是否将要被垃圾回收，这样可以在对象被回收之前采取一些必要的措施。</p><h3 id="27、在-Java-中，为什么不允许从静态方法中访问非静态变量？"><a href="#27、在-Java-中，为什么不允许从静态方法中访问非静态变量？" class="headerlink" title="27、在 Java 中，为什么不允许从静态方法中访问非静态变量？"></a>27、在 Java 中，为什么不允许从静态方法中访问非静态变量？</h3><ol><li>静态变量属于类本身，在类加载的时候就会分配内存，可以通过类名直接访问；</li><li>非静态变量属于类的对象，只有在类的对象产生时，才会分配内存，通过类的实例去访问；</li><li>静态方法也属于类本身，但是此时没有类的实例，内存中没有非静态变量，所以无法调用。</li></ol><h3 id="28、说说Java-Bean的命名规范"><a href="#28、说说Java-Bean的命名规范" class="headerlink" title="28、说说Java Bean的命名规范"></a>28、说说Java Bean的命名规范</h3><ol><li>JavaBean 类必须是一个公共类，并将其访问属性设置为 public</li><li>JavaBean 类必须有一个空的构造函数：类中必须有一个不带参数的公用构造器，此构造器也应该通过调用各个特性的设置方法来设置特性的缺省值。</li><li>一个javaBean类不应有公共实例变量，类变量都为private</li><li>持有值应该通过一组存取方法（getXxx 和 setXxx）来访问：对于每个特性，应该有一个带匹配公用 getter 和 setter 方法的专用实例变量。</li></ol><p>属性为布尔类型，可以使用 isXxx() 方法代替 getXxx() 方法。</p><p>通常属性名是要和 包名、类名、方法名、字段名、常量名作出区别的:</p><p>首先:必须用英文，不要用汉语拼音</p><p>（1）包(package)</p><p>用于将完成不同功能的类分门别类，放在不同的目录(包)下，包的命名规则：将公司域名反转作为包名。比如<a href="http://www.sohu.com/">www.sohu.com</a> 对于包名：每个字母都需要小写。比如：com.sohu.test;该包下的Test类的全名是：com.sohu.Test.Java 。</p><p>如果定义类的时候没有使用package,那么java就认为我们所定义的类位于默认包里面(default package)。</p><p>（2）类</p><p>首字母大写，如果一个类由多个单词构成，那么每个单词的首字母都大写，而且中间不使用任何的连接符。尽量使用英文。如ConnectionFactory</p><p>（3）方法</p><p>首单词全部小写，如果一个方法由多个单词构成，那么从第二个单词开始首字母大写，不使用连接符。addPerson</p><p>（4）字段</p><p>与方法相同。如ageOfPerson</p><p>（5）常量</p><p>所有单词的字母都是大写，如果有多个单词，那么使用下划线链接即可。</p><p>如：public static final int AGE_OF_PERSON = 20; //通常加上static</p><h3 id="29、Java-Bean-属性命名规范问题分析"><a href="#29、Java-Bean-属性命名规范问题分析" class="headerlink" title="29、Java Bean 属性命名规范问题分析"></a>29、Java Bean 属性命名规范问题分析</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> {</span><br><span class="line"><span class="keyword">private</span> String busName;</span><br><span class="line"><span class="keyword">private</span> String pCount;</span><br><span class="line"><span class="keyword">private</span> Boolean isRunning;</span><br><span class="line"><span class="comment">//正确的命名方式，驼峰式的</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getBusName</span><span class="params">()</span> {</span><br><span class="line"><span class="keyword">return</span> busName;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBusName</span><span class="params">(String busName)</span> {</span><br><span class="line"><span class="built_in">this</span>.busName = busName;</span><br><span class="line">}</span><br><span class="line">    <span class="comment">//这是什么？</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getpCount</span><span class="params">()</span> {</span><br><span class="line"><span class="keyword">return</span> pCount;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setpCount</span><span class="params">(String pCount)</span> {</span><br><span class="line"><span class="built_in">this</span>.pCount = pCount;</span><br><span class="line">}</span><br><span class="line">    <span class="comment">//这个也是不允许的</span></span><br><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">getIsRunning</span><span class="params">()</span> {</span><br><span class="line"><span class="keyword">return</span> isRunning;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIsRunning</span><span class="params">(Boolean isRunning)</span> {</span><br><span class="line"><span class="built_in">this</span>.isRunning = isRunning;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol><li>javabean属性命名尽量使用常规的驼峰式命名规则</li><li>属性名第一个单词尽量避免使用一个字母：如eBook， eMail。</li><li>boolean属性名避免使用 “is” 开头的名称</li><li>随着jdk， eclipse， spring 等软件版本的不断提高， 底版本的出现的问题可能在高版本中解决了， 低版本原来正常的代码可能在高版本环境下不再支持。</li></ol><h3 id="30、什么是-Java-的内存模型"><a href="#30、什么是-Java-的内存模型" class="headerlink" title="30、什么是 Java 的内存模型?"></a>30、什么是 Java 的内存模型?</h3><p>在了解什么是 Java 内存模型之前，先了解一下为什么要提出 Java 内存模型。</p><p>之前提到过并发编程有三大问题</p><p>CPU 缓存，在多核 CPU 的情况下，带来了可见性问题<br>操作系统对当前执行线程的切换，带来了原子性问题<br>译器指令重排优化，带来了有序性问题<br>为了解决并发编程的三大问题，提出了 JSR-133，新的 Java 内存模型，JDK 5 开始使用。</p><p>简单总结下</p><p>Java 内存模型是 JVM 的一种规范<br>定义了共享内存在多线程程序中读写操作行为的规范<br>屏蔽了各种硬件和操作系统的访问差异，保证了 Java 程序在各种平台下对内存的访问效果一致<br>解决并发问题采用的方式：限制处理器优化和使用内存屏障<br>增强了三个同步原语（synchronized、volatile、final）的内存语义<br>定义了 happens-before 规则</p><h3 id="31、在-Java-中，什么时候用重载，什么时候用重写？"><a href="#31、在-Java-中，什么时候用重载，什么时候用重写？" class="headerlink" title="31、在 Java 中，什么时候用重载，什么时候用重写？"></a>31、在 Java 中，什么时候用重载，什么时候用重写？</h3><p>（1）重载是多态的集中体现，在类中，要以统一的方式处理不同类型数据的时候，可以用重载。</p><p>（2）重写的使用是建立在继承关系上的，子类在继承父类的基础上，增加新的功能，可以用重写。</p><p>（3）简单总结：</p><p>重载是多样性，重写是增强剂；<br>目的是提高程序的多样性和健壮性，以适配不同场景使用时，使用重载进行扩展；<br>目的是在不修改原方法及源代码的基础上对方法进行扩展或增强时，使用重写；</p><p>生活例子：</p><blockquote><p>你想吃一碗面，我给你提供了拉面，炒面，刀削面，担担面供你选择，这是重载；<br>你想吃一碗面，我不但给你端来了面，还给你加了青菜，加了鸡蛋，这个是重写；</p></blockquote><p>设计模式：</p><blockquote><p>cglib实现动态代理，核心原理用的就是方法的重写；</p></blockquote><p>详细解答：</p><blockquote><p>Java的重载(overload) 最重要的应用场景就是构造器的重载，构造器重载后，提供多种形参形式的构造器，可以应对不同的业务需求，加强程序的健壮性和可扩展性，比如我们最近学习的Spring源码中的ClassPathXmlApplicationContext，它的构造函数使用重载一共提供了10个构造函数，这样就为业务的选择提供了多选择性。在应用到方法中时，主要是为了增强方法的健壮性和可扩展性，比如我们在开发中常用的各种工具类，比如我目前工作中的短信工具类SMSUtil, 发短信的方法就会使用重载，针对不同业务场景下的不同形参，提供短信发送方法，这样提高了工具类的扩展性和健壮性。<br>总结：重载必须要修改方法(构造器)的形参列表，可以修改方法的返回值类型，也可以修改方法的异常信息即访问权限；使用范围是在同一个类中，目的是对方法(构造器)进行功能扩展，以应对多业务场景的不同使用需求。提高程序的健壮性和扩展性。<br>java的重写(override) 只要用于子类对父类方法的扩展或修改，但是在我们开发中，为了避免程序混乱，重写一般都是为了方法的扩展，比如在cglib方式实现的动态代理中，代理类就是继承了目标类，对目标类的方法进行重写，同时在方法前后进行切面织入。</p></blockquote><p>总结：方法重写时，参数列表，返回值得类型是一定不能修改的，异常可以减少或者删除，但是不能抛出新的异常或者更广的异常，方法的访问权限可以降低限制，但是不能做更严格的限制。</p><p>（4）在里氏替换原则中，子类对父类的方法尽量不要重写和重载。（我们可以采用final的手段强制来遵循）</p><h3 id="32、举例说明什么情况下会更倾向于使用抽象类而不是接口？"><a href="#32、举例说明什么情况下会更倾向于使用抽象类而不是接口？" class="headerlink" title="32、举例说明什么情况下会更倾向于使用抽象类而不是接口？"></a>32、举例说明什么情况下会更倾向于使用抽象类而不是接口？</h3><p>接口和抽象类都遵循”面向接口而不是实现编码”设计原则，它可以增加代码的灵活性，可以适应不断变化的需求。下面有几个点可以帮助你回答这个问题：在 Java 中，你只能继承一个类，但可以实现多个接口。所以一旦你继承了一个类，你就失去了继承其他类的机会了。</p><p>接口通常被用来表示附属描述或行为如： Runnable 、 Clonable 、 Serializable 等等，因此当你使用抽象类来表示行为时，你的类就不能同时是 Runnable 和 Clonable( 注：这里的意思是指如果把 Runnable 等实现为抽象类的情况 ) ，因为在 Java 中你不能继承两个类，但当你使用接口时，你的类就可以同时拥有多个不同的行为。</p><p>在一些对时间要求比较高的应用中，倾向于使用抽象类，它会比接口稍快一点。如果希望把一系列行为都规范在类继承层次内，并且可以更好地在同一个地方进行编码，那么抽象类是一个更好的选择。有时，接口和抽象类可以一起使用，接口中定义函数，而在抽象类中定义默认的实现。</p><h3 id="33、实例化对象有哪几种方式"><a href="#33、实例化对象有哪几种方式" class="headerlink" title="33、实例化对象有哪几种方式"></a>33、实例化对象有哪几种方式</h3><ul><li>new</li><li>clone()</li><li>通过反射机制创建</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用 Class.forName方法获取类，在调用类的newinstance（）方法</span></span><br><span class="line"><span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">"com.dao.User"</span>);</span><br><span class="line"><span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> (User)cls.newInstance();</span><br></pre></td></tr></tbody></table></figure><ul><li>序列化反序列化</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将一个对象实例化后，进行序列化，再反序列化，也可以获得一个对象（远程通信的场景下使用）</span></span><br><span class="line"><span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span> (<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">"D:/data.txt"</span>));</span><br><span class="line"><span class="comment">//序列化对象</span></span><br><span class="line">out.writeObject(user1);</span><br><span class="line">out.close();</span><br><span class="line"><span class="comment">//反序列化对象</span></span><br><span class="line"><span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">"D:/data.txt"</span>));</span><br><span class="line"><span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> (User) in.readObject();</span><br><span class="line">System.out.println(<span class="string">"反序列化user："</span> + user2);</span><br><span class="line">in.close();</span><br></pre></td></tr></tbody></table></figure><h3 id="34、byte类型127-1等于多少"><a href="#34、byte类型127-1等于多少" class="headerlink" title="34、byte类型127+1等于多少"></a>34、byte类型127+1等于多少</h3><p>byte的范围是-128~127。</p><p>字节长度为8位，最左边的是符号位，而127的二进制为01111111，所以执行+1操作时，01111111变为10000000。</p><p>大家知道，计算机中存储负数，存的是补码的兴衰。左边第一位为符号位。</p><p>那么负数的补码转换成十进制如下：</p><p>一个数如果为正，则它的原码、反码、补码相同；一个正数的补码，将其转化为十进制，可以直接转换。</p><p>已知一个负数的补码，将其转换为十进制数，步骤如下：</p><ol><li>先对各位取反；</li><li>将其转换为十进制数；</li><li>加上负号，再减去1；</li></ol><p>例如10000000，最高位是1，是负数，①对各位取反得01111111，转换为十进制就是127，加上负号得-127，再减去1得-128；</p><h3 id="35、Java-容器都有哪些？"><a href="#35、Java-容器都有哪些？" class="headerlink" title="35、Java 容器都有哪些？"></a>35、Java 容器都有哪些？</h3><p>（1）Collection</p><p>① set</p><p>HashSet、TreeSet</p><p>② list</p><p>ArrayList、LinkedList、Vector</p><p>（2）Map</p><p>HashMap、HashTable、TreeMap</p><h3 id="36、Collection-和-Collections-有什么区别？"><a href="#36、Collection-和-Collections-有什么区别？" class="headerlink" title="36、Collection 和 Collections 有什么区别？"></a>36、Collection 和 Collections 有什么区别？</h3><p>（1）Collection是最基本的集合接口，Collection派生了两个子接口list和set，分别定义了两种不同的存储方式。</p><p>（2）Collections是一个包装类，它包含各种有关集合操作的静态方法（对集合的搜索、排序、线程安全化等）。</p><p>此类不能实例化，就像一个工具类，服务于Collection框架。</p><h3 id="37、list与Set区别"><a href="#37、list与Set区别" class="headerlink" title="37、list与Set区别"></a>37、list与Set区别</h3><p>（1）List简介</p><p>实际上有两种List：一种是基本的ArrayList,其优点在于随机访问元素，另一种是LinkedList,它并不是为快速随机访问设计的，而是快速的插入或删除。<br>ArrayList：由数组实现的List。允许对元素进行快速随机访问，但是向List中间插入与移除元素的速度很慢。<br>LinkedList ：对顺序访问进行了优化，向List中间插入与删除的开销并不大。随机访问则相对较慢。<br>还具有下列方 法：addFirst(), addLast(), getFirst(), getLast(), removeFirst() 和 removeLast(), 这些方法 (没有在任何接口或基类中定义过)使得LinkedList可以当作堆栈、队列和双向队列使用。</p><p>（2）Set简介</p><p>Set具有与Collection完全一样的接口，因此没有任何额外的功能。实际上Set就是Collection,只是行为不同。这是继承与多态思想的典型应用：表现不同的行为。Set不保存重复的元素(至于如何判断元素相同则较为负责)</p><p>Set : 存入Set的每个元素都必须是唯一的，因为Set不保存重复元素。加入Set的元素必须定义equals()方法以确保对象的唯一性。Set与Collection有完全一样的接口。Set接口不保证维护元素的次序。<br>HashSet：为快速查找设计的Set。存入HashSet的对象必须定义hashCode()。<br>TreeSet： 保存次序的Set, 底层为树结构。使用它可以从Set中提取有序的序列。</p><p>（3）list与Set区别</p><p>① List,Set都是继承自Collection接口</p><p>② List特点：元素有放入顺序，元素可重复 ，Set特点：元素无放入顺序，元素不可重复，重复元素会覆盖掉，（元素虽然无放入顺序，但是元素在set中的位置是有该元素的HashCode决定的，其位置其实是固定的，加入Set 的Object必须定义equals()方法 ，另外list支持for循环，也就是通过下标来遍历，也可以用迭代器，但是set只能用迭代，因为他无序，无法用下标来取得想要的值。）</p><p>③ Set和List对比：</p><p>Set：检索元素效率低下，删除和插入效率高，插入和删除不会引起元素位置改变。<br>List：和数组类似，List可以动态增长，查找元素效率高，插入删除元素效率低，因为会引起其他元素位置改变。</p><h3 id="38、HashMap-和-Hashtable-有什么区别？"><a href="#38、HashMap-和-Hashtable-有什么区别？" class="headerlink" title="38、HashMap 和 Hashtable 有什么区别？"></a>38、HashMap 和 Hashtable 有什么区别？</h3><ol><li>HashMap是线程不安全的，HashTable是线程安全的；</li><li>HashMap中允许键和值为null，HashTable不允许；</li><li>HashMap的默认容器是16，为2倍扩容，HashTable默认是11，为2倍+1扩容；</li></ol><h3 id="39、说一下-HashMap-的实现原理？"><a href="#39、说一下-HashMap-的实现原理？" class="headerlink" title="39、说一下 HashMap 的实现原理？"></a>39、说一下 HashMap 的实现原理？</h3><p>（1）简介</p><p>HashMap基于map接口，元素以键值对方式存储，允许有null值，HashMap是线程不安全的。</p><p>（2）基本属性</p><p>初始化大小，默认16，2倍扩容；<br>负载因子0.75；<br>初始化的默认数组；<br>size<br>threshold。判断是否需要调整hashmap容量</p><p>（3）HashMap的存储结构</p><p>JDK1.7中采用数组+链表的存储形式。</p><p>HashMap采取Entry数组来存储key-value，每一个键值对组成了一个Entry实体，Entry类时机上是一个单向的链表结构，它具有next指针，指向下一个Entry实体，以此来解决Hash冲突的问题。</p><p>HashMap实现一个内部类Entry，重要的属性有hash、key、value、next。</p><p><img src="https://img-blog.csdnimg.cn/20210801163033687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p>JDK1.8中采用数据+链表+红黑树的存储形式。当链表长度超过阈值（8）时，将链表转换为红黑树。在性能上进一步得到提升。</p><p><img src="https://img-blog.csdnimg.cn/2021080116310757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><h3 id="40、set有哪些实现类？"><a href="#40、set有哪些实现类？" class="headerlink" title="40、set有哪些实现类？"></a>40、set有哪些实现类？</h3><p>（1）HashSet</p><p>HashSet是set接口的实现类，set下面最主要的实现类就是HashSet（也就是用的最多的），此外还有LinkedHashSet和TreeSet。<br>HashSet是无序的、不可重复的。通过对象的hashCode和equals方法保证对象的唯一性。<br>HashSet内部的存储结构是哈希表，是线程不安全的。</p><p>（2）TreeSet</p><p>TreeSet对元素进行排序的方式：</p><p>元素自身具备比较功能，需要实现Comparable接口，并覆盖compareTo方法。<br>元素自身不具备比较功能，需要实现Comparator接口，并覆盖compare方法。</p><p>（3）LinkedHashSet</p><p>LinkedHashSet是一种有序的Set集合，即其元素的存入和输出的顺序是相同的。</p><h3 id="41、说一下-HashSet-的实现原理？"><a href="#41、说一下-HashSet-的实现原理？" class="headerlink" title="41、说一下 HashSet 的实现原理？"></a>41、说一下 HashSet 的实现原理？</h3><p>HashSet实际上是一个HashMap实例，数据存储结构都是数组+链表。</p><p>HashSet是基于HashMap实现的，HashSet中的元素都存放在HashMap的key上面，而value都是一个统一的对象PRESENT。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Object</span> <span class="variable">PRESENT</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br></pre></td></tr></tbody></table></figure><p>HashSet中add方法调用的是底层HashMap中的put方法，put方法要判断插入值是否存在，而HashSet的add方法，首先判断元素是否存在，如果存在则插入，如果不存在则不插入，这样就保证了HashSet中不存在重复值。</p><p>通过对象的hashCode和equals方法保证对象的唯一性。</p><p>ArrayList是动态数组的数据结构实现，查找和遍历的效率较高；</p><p>LinkedList 是双向链表的数据结构，增加和删除的效率较高；</p><h3 id="43、如何实现数组和-List-之间的转换？"><a href="#43、如何实现数组和-List-之间的转换？" class="headerlink" title="43、如何实现数组和 List 之间的转换？"></a>43、如何实现数组和 List 之间的转换？</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">String[] arr = {<span class="string">"zs"</span>,<span class="string">"ls"</span>,<span class="string">"ww"</span>};</span><br><span class="line"><span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> Arrays.asList(arr);</span><br><span class="line">System.out.println(list);</span><br><span class="line"></span><br><span class="line"><span class="type">ArrayList</span> <span class="variable">list1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">list1.add(<span class="string">"张三"</span>);</span><br><span class="line">list1.add(<span class="string">"李四"</span>);</span><br><span class="line">list1.add(<span class="string">"王五"</span>);</span><br><span class="line">String[] arr1 = list1.toArray(<span class="keyword">new</span> <span class="title class_">String</span>[list1.size()]);</span><br><span class="line">System.out.println(arr1);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++){</span><br><span class="line">    System.out.println(arr1[i]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="44、在-Queue-中-poll-和-remove-有什么区别？"><a href="#44、在-Queue-中-poll-和-remove-有什么区别？" class="headerlink" title="44、在 Queue 中 poll()和 remove()有什么区别？"></a>44、在 Queue 中 poll()和 remove()有什么区别？</h3><p>（1）offer()和add()区别：</p><p>增加新项时，如果队列满了，add会抛出异常，offer返回false。</p><p>（2）poll()和remove()区别：</p><p>poll()和remove()都是从队列中删除第一个元素，remove抛出异常，poll返回null。</p><p>（3）peek()和element（）区别：</p><p>peek()和element（）用于查询队列头部元素，为空时element抛出异常，peek返回null。</p><h3 id="45、哪些集合类是线程安全的"><a href="#45、哪些集合类是线程安全的" class="headerlink" title="45、哪些集合类是线程安全的"></a>45、哪些集合类是线程安全的</h3><p>Vector：就比Arraylist多了个同步化机制（线程安全）。<br>Stack：栈，也是线程安全的，继承于Vector。<br>Hashtable：就比Hashmap多了个线程安全。<br>ConcurrentHashMap:是一种高效但是线程安全的集合。</p><h3 id="46、迭代器-Iterator-是什么？"><a href="#46、迭代器-Iterator-是什么？" class="headerlink" title="46、迭代器 Iterator 是什么？"></a>46、迭代器 Iterator 是什么？</h3><p>为了方便的处理集合中的元素,Java中出现了一个对象,该对象提供了一些方法专门处理集合中的元素.例如删除和获取集合中的元素.该对象就叫做迭代器(Iterator)。</p><h3 id="47、Iterator-怎么使用？有什么特点？"><a href="#47、Iterator-怎么使用？有什么特点？" class="headerlink" title="47、Iterator 怎么使用？有什么特点？"></a>47、Iterator 怎么使用？有什么特点？</h3><p>Iterator 接口源码中的方法：</p><ol><li>java.lang.Iterable 接口被 java.util.Collection 接口继承，java.util.Collection 接口的 iterator() 方法返回一个 Iterator 对象</li><li>next() 方法获得集合中的下一个元素</li><li>hasNext() 检查集合中是否还有元素</li><li>remove() 方法将迭代器新返回的元素删除</li></ol><h3 id="48、Iterator-和-ListIterator-有什么区别？"><a href="#48、Iterator-和-ListIterator-有什么区别？" class="headerlink" title="48、Iterator 和 ListIterator 有什么区别？"></a>48、Iterator 和 ListIterator 有什么区别？</h3><p>（1）ListIterator 继承 Iterator</p><p>（2）ListIterator 比 Iterator多方法</p><ol><li>add(E e) 将指定的元素插入列表，插入位置为迭代器当前位置之前</li><li>set(E e) 迭代器返回的最后一个元素替换参数e</li><li>hasPrevious() 迭代器当前位置，反向遍历集合是否含有元素</li><li>previous() 迭代器当前位置，反向遍历集合，下一个元素</li><li>previousIndex() 迭代器当前位置，反向遍历集合，返回下一个元素的下标</li><li>nextIndex() 迭代器当前位置，返回下一个元素的下标</li></ol><p>（3）使用范围不同，Iterator可以迭代所有集合；ListIterator 只能用于List及其子类</p><ol><li>ListIterator 有 add 方法，可以向 List 中添加对象；Iterator 不能</li><li>ListIterator 有 hasPrevious() 和 previous() 方法，可以实现逆向遍历；Iterator不可以</li><li>ListIterator 有 nextIndex() 和previousIndex() 方法，可定位当前索引的位置；Iterator不可以</li><li>ListIterator 有 set()方法，可以实现对 List 的修改；Iterator 仅能遍历，不能修改。</li></ol><h3 id="49、怎么确保一个集合不能被修改？"><a href="#49、怎么确保一个集合不能被修改？" class="headerlink" title="49、怎么确保一个集合不能被修改？"></a>49、怎么确保一个集合不能被修改？</h3><p>我们很容易想到用final关键字进行修饰，我们都知道</p><p>final关键字可以修饰类，方法，成员变量，final修饰的类不能被继承，final修饰的方法不能被重写，final修饰的成员变量必须初始化值，如果这个成员变量是基本数据类型，表示这个变量的值是不可改变的，如果说这个成员变量是引用类型，则表示这个引用的地址值是不能改变的，但是这个引用所指向的对象里面的内容还是可以改变的。</p><p>那么，我们怎么确保一个集合不能被修改？首先我们要清楚，集合（map,set,list…）都是引用类型，所以我们如果用final修饰的话，集合里面的内容还是可以修改的。</p><p>我们可以做一个实验：</p><p>可以看到：我们用final关键字定义了一个map集合，这时候我们往集合里面传值，第一个键值对1,1；我们再修改后，可以把键为1的值改为100，说明我们是可以修改map集合的值的。</p><p>那我们应该怎么做才能确保集合不被修改呢？<br>我们可以采用Collections包下的unmodifiableMap方法，通过这个方法返回的map,是不可以修改的。他会报 java.lang.UnsupportedOperationException错。</p><p>同理：Collections包也提供了对list和set集合的方法。</p><p>Collections.unmodifiableList(List)<br>Collections.unmodifiableSet(Set)</p><p><img src="https://img-blog.csdnimg.cn/2021080116342771.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><h3 id="50、队列和栈是什么？有什么区别？"><a href="#50、队列和栈是什么？有什么区别？" class="headerlink" title="50、队列和栈是什么？有什么区别？"></a>50、队列和栈是什么？有什么区别？</h3><p>（1）队列先进先出，栈先进后出。</p><p>（2）遍历数据速度不同。</p><p>栈只能从头部取数据 也就最先放入的需要遍历整个栈最后才能取出来，而且在遍历数据的时候还得为数据开辟临时空间，保持数据在遍历前的一致性；</p><p>队列则不同，他基于地址指针进行遍历，而且可以从头或尾部开始遍历，但不能同时遍历，无需开辟临时空间，因为在遍历的过程中不影像数据结构，速度要快的多。</p><h3 id="51、Java8开始ConcurrentHashMap-为什么舍弃分段锁？"><a href="#51、Java8开始ConcurrentHashMap-为什么舍弃分段锁？" class="headerlink" title="51、Java8开始ConcurrentHashMap,为什么舍弃分段锁？"></a>51、Java8开始ConcurrentHashMap,为什么舍弃分段锁？</h3><p>ConcurrentHashMap的原理是引用了内部的 Segment ( ReentrantLock ) 分段锁，保证在操作不同段 map 的时候， 可以并发执行， 操作同段 map 的时候，进行锁的竞争和等待。从而达到线程安全， 且效率大于 synchronized。</p><p>但是在 Java 8 之后， JDK 却弃用了这个策略，重新使用了 synchronized+CAS。</p><p>弃用原因</p><p>通过 JDK 的源码和官方文档看来， 他们认为的弃用分段锁的原因由以下几点：</p><p>加入多个分段锁浪费内存空间。<br>生产环境中， map 在放入时竞争同一个锁的概率非常小，分段锁反而会造成更新等操作的长时间等待。<br>为了提高 GC 的效率<br>新的同步方案</p><p>既然弃用了分段锁， 那么一定由新的线程安全方案， 我们来看看源码是怎么解决线程安全的呢？（源码保留了segment 代码， 但并没有使用）。</p><h3 id="52、ConcurrentHashMap-JDK1-8-为什么要使用synchronized而不是如ReentranLock这样的可重入锁？"><a href="#52、ConcurrentHashMap-JDK1-8-为什么要使用synchronized而不是如ReentranLock这样的可重入锁？" class="headerlink" title="52、ConcurrentHashMap(JDK1.8)为什么要使用synchronized而不是如ReentranLock这样的可重入锁？"></a>52、ConcurrentHashMap(JDK1.8)为什么要使用synchronized而不是如ReentranLock这样的可重入锁？</h3><p>我想从下面几个角度讨论这个问题：</p><p>（1）锁的粒度</p><p>首先锁的粒度并没有变粗，甚至变得更细了。每当扩容一次，ConcurrentHashMap的并发度就扩大一倍。</p><p>（2）Hash冲突</p><p>JDK1.7中，ConcurrentHashMap从过二次hash的方式（Segment -&gt; HashEntry）能够快速的找到查找的元素。在1.8中通过链表加红黑树的形式弥补了put、get时的性能差距。<br>JDK1.8中，在ConcurrentHashmap进行扩容时，其他线程可以通过检测数组中的节点决定是否对这条链表（红黑树）进行扩容，减小了扩容的粒度，提高了扩容的效率。</p><p>下面是我对面试中的那个问题的一下看法。</p><p>为什么是synchronized，而不是ReentranLock</p><p>（1）减少内存开销</p><p>假设使用可重入锁来获得同步支持，那么每个节点都需要通过继承AQS来获得同步支持。但并不是每个节点都需要获得同步支持的，只有链表的头节点（红黑树的根节点）需要同步，这无疑带来了巨大内存浪费。</p><p>（2）获得JVM的支持</p><p>可重入锁毕竟是API这个级别的，后续的性能优化空间很小。<br>synchronized则是JVM直接支持的，JVM能够在运行时作出相应的优化措施：锁粗化、锁消除、锁自旋等等。这就使得synchronized能够随着JDK版本的升级而不改动代码的前提下获得性能上的提升。</p><h3 id="53、concurrentHashMap和HashTable有什么区别"><a href="#53、concurrentHashMap和HashTable有什么区别" class="headerlink" title="53、concurrentHashMap和HashTable有什么区别"></a>53、concurrentHashMap和HashTable有什么区别</h3><p>concurrentHashMap融合了hashmap和hashtable的优势，hashmap是不同步的，但是单线程情况下效率高，hashtable是同步的同步情况下保证程序执行的正确性。</p><p>但hashtable每次同步执行的时候都要锁住整个结构，如下图：</p><p><img src="https://img-blog.csdnimg.cn/20210801163535297.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p>concurrentHashMap锁的方式是细粒度的。concurrentHashMap将hash分为16个桶（默认值），诸如get、put、remove等常用操作只锁住当前需要用到的桶。</p><p>concurrentHashMap的读取并发，因为读取的大多数时候都没有锁定，所以读取操作几乎是完全的并发操作，只是在求size时才需要锁定整个hash。</p><p>而且在迭代时，concurrentHashMap使用了不同于传统集合的快速失败迭代器的另一种迭代方式，弱一致迭代器。在这种方式中，当iterator被创建后集合再发生改变就不会抛出ConcurrentModificationException，取而代之的是在改变时new新的数据而不是影响原来的数据，iterator完成后再讲头指针替代为新的数据，这样iterator时使用的是原来的数据。</p><h3 id="54、HasmMap和HashSet的区别"><a href="#54、HasmMap和HashSet的区别" class="headerlink" title="54、HasmMap和HashSet的区别"></a>54、HasmMap和HashSet的区别</h3><p>（1）先了解一下HashCode</p><p>Java中的集合有两类，一类是List，一类是Set。</p><p>List：元素有序，可以重复；</p><p>Set：元素无序，不可重复；</p><p>要想保证元素的不重复，拿什么来判断呢？这就是Object.equals方法了。如果元素有很多，增加一个元素，就要判断n次吗？</p><p>显然不现实，于是，Java采用了哈希表的原理。哈希算法也称为散列算法，是将数据依特定算法直接指定到一根地址上，初学者可以简单的理解为，HashCode方法返回的就是对象存储的物理位置（实际上并不是）。</p><p>这样一来，当集合添加新的元素时，先调用这个元素的hashcode()方法，就一下子能定位到他应该放置的物理位置上。如果这个位置上没有元素，他就可以直接存储在这个位置上，不用再进行任何比较了。如果这个位置上有元素，就调用它的equals方法与新元素进行比较，想同的话就不存了，不相同就散列其它的地址。所以这里存在一个冲突解决的问题。这样一来实际上调用equals方法的次数就大大降低了，几乎只需要一两次。</p><p>简而言之，在集合查找时，hashcode能大大降低对象比较次数，提高查找效率。</p><p>Java对象的equals方法和hashCode方法时这样规定的：</p><p>相等的对象就必须具有相等的hashcode。</p><ol><li>如果两个对象的hashcode相同，他们并不一定相同。</li><li>如果两个对象的hashcode相同，他们并不一定相同。</li></ol><p>如果两个Java对象A和B，A和B不相等，但是A和B的哈希码相等，将A和B都存入HashMap时会发生哈希冲突，也就是A和B存放在HashMap内部数组的位置索引相同，这时HashMap会在该位置建立一个链接表，将A和B串起来放在该位置，显然，该情况不违反HashMap的使用规则，是允许的。当然，哈希冲突越少越好，尽量采用好的哈希算法避免哈希冲突。</p><p>equals()相等的两个对象，hashcode()一定相等；equals()不相等的两个对象，却并不能证明他们的hashcode()不相等。</p><p>（2）HashMap和HashSet的区别</p><p><img src="https://img-blog.csdnimg.cn/20210801163631659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20210801163653626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><h3 id="55、请谈谈-ReadWriteLock-和-StampedLock"><a href="#55、请谈谈-ReadWriteLock-和-StampedLock" class="headerlink" title="55、请谈谈 ReadWriteLock 和 StampedLock"></a>55、请谈谈 ReadWriteLock 和 StampedLock</h3><p>ReadWriteLock包括两种子锁</p><p>（1）ReadWriteLock</p><p>ReadWriteLock 可以实现多个读锁同时进行，但是读与写和写于写互斥，只能有一个写锁线程在进行。</p><p>（2）StampedLock</p><p>StampedLock是Jdk在1.8提供的一种读写锁，相比较ReentrantReadWriteLock性能更好，因为ReentrantReadWriteLock在读写之间是互斥的，使用的是一种悲观策略，在读线程特别多的情况下，会造成写线程处于饥饿状态，虽然可以在初始化的时候设置为true指定为公平，但是吞吐量又下去了，而StampedLock是提供了一种乐观策略，更好的实现读写分离，并且吞吐量不会下降。</p><p>StampedLock包括三种锁：</p><p>（1）写锁writeLock：</p><p>writeLock是一个独占锁写锁，当一个线程获得该锁后，其他请求读锁或者写锁的线程阻塞， 获取成功后，会返回一个stamp（凭据）变量来表示该锁的版本，在释放锁时调用unlockWrite方法传递stamp参数。提供了非阻塞式获取锁tryWriteLock。</p><p>（2）悲观读锁readLock：</p><p>readLock是一个共享读锁，在没有线程获取写锁情况下，多个线程可以获取该锁。如果有写锁获取，那么其他线程请求读锁会被阻塞。悲观读锁会认为其他线程可能要对自己操作的数据进行修改，所以需要先对数据进行加锁，这是在读少写多的情况下考虑的。请求该锁成功后会返回一个stamp值，在释放锁时调用unlockRead方法传递stamp参数。提供了非阻塞式获取锁方法tryWriteLock。</p><p>（3）乐观读锁tryOptimisticRead：</p><p>tryOptimisticRead相对比悲观读锁，在操作数据前并没有通过CAS设置锁的状态，如果没有线程获取写锁，则返回一个非0的stamp变量，获取该stamp后在操作数据前还需要调用validate方法来判断期间是否有线程获取了写锁，如果是返回值为0则有线程获取写锁，如果不是0则可以使用stamp变量的锁来操作数据。由于tryOptimisticRead并没有修改锁状态，所以不需要释放锁。这是读多写少的情况下考虑的，不涉及CAS操作，所以效率较高，在保证数据一致性上需要复制一份要操作的变量到方法栈中，并且在操作数据时可能其他写线程已经修改了数据，而我们操作的是方法栈里面的数据，也就是一个快照，所以最多返回的不是最新的数据，但是一致性得到了保证。</p><h3 id="56、线程的run-和start-有什么区别？"><a href="#56、线程的run-和start-有什么区别？" class="headerlink" title="56、线程的run()和start()有什么区别？"></a>56、线程的run()和start()有什么区别？</h3><p>每个线程都是通过某个特定Thread对象所对应的方法run()来完成其操作的，run()方法称为线程体。通过调用Thread类的start()方法来启动一个线程。</p><p>start() 方法用于启动线程，run() 方法用于执行线程的运行时代码。run() 可以重复调用，而 start() 只能调用一次。</p><p>start()方法来启动一个线程，真正实现了多线程运行。调用start()方法无需等待run方法体代码执行完毕，可以直接继续执行其他的代码； 此时线程是处于就绪状态，并没有运行。 然后通过此Thread类调用方法run()来完成其运行状态， run()方法运行结束， 此线程终止。然后CPU再调度其它线程。</p><p>run()方法是在本线程里的，只是线程里的一个函数，而不是多线程的。 如果直接调用run()，其实就相当于是调用了一个普通函数而已，直接待用run()方法必须等待run()方法执行完毕才能执行下面的代码，所以执行路径还是只有一条，根本就没有线程的特征，所以在多线程执行时要使用start()方法而不是run()方法。</p><h3 id="57、为什么我们调用-start-方法时会执行-run-方法，为什么我们不能直接调用-run-方法？"><a href="#57、为什么我们调用-start-方法时会执行-run-方法，为什么我们不能直接调用-run-方法？" class="headerlink" title="57、为什么我们调用 start() 方法时会执行 run() 方法，为什么我们不能直接调用 run() 方法？"></a>57、为什么我们调用 start() 方法时会执行 run() 方法，为什么我们不能直接调用 run() 方法？</h3><p>这是另一个非常经典的 java 多线程面试问题，而且在面试中会经常被问到。很简单，但是很多人都会答不上来！</p><p>new 一个 Thread，线程进入了新建状态。调用 start() 方法，会启动一个线程并使线程进入了就绪状态，当分配到时间片后就可以开始运行了。 start() 会执行线程的相应准备工作，然后自动执行 run() 方法的内容，这是真正的多线程工作。</p><p>而直接执行 run() 方法，会把 run 方法当成一个 main 线程下的普通方法去执行，并不会在某个线程中执行它，所以这并不是多线程工作。</p><p>总结： 调用 start 方法方可启动线程并使线程进入就绪状态，而 run 方法只是 thread 的一个普通方法调用，还是在主线程里执行。</p><h3 id="58、Synchronized-用过吗，其原理是什么？"><a href="#58、Synchronized-用过吗，其原理是什么？" class="headerlink" title="58、Synchronized 用过吗，其原理是什么？"></a>58、Synchronized 用过吗，其原理是什么？</h3><p>（1）可重入性</p><p>synchronized的锁对象中有一个计数器（recursions变量）会记录线程获得几次锁；</p><ol><li>可重入的好处：</li><li>可以避免死锁；</li><li>可以让我们更好的封装代码；</li></ol><p>synchronized是可重入锁，每部锁对象会有一个计数器记录线程获取几次锁，在执行完同步代码块时，计数器的数量会-1，直到计数器的数量为0，就释放这个锁。</p><p>（2）不可中断性</p><ol><li>一个线程获得锁后，另一个线程想要获得锁，必须处于阻塞或等待状态，如果第一个线程不释放锁，第二个线程会一直阻塞或等待，不可被中断；</li><li>synchronized 属于不可被中断；</li><li>Lock lock方法是不可中断的；</li><li>Lock tryLock方法是可中断的；</li></ol><h3 id="59、JVM-对-Java-的原生锁做了哪些优化？"><a href="#59、JVM-对-Java-的原生锁做了哪些优化？" class="headerlink" title="59、JVM 对 Java 的原生锁做了哪些优化？"></a>59、JVM 对 Java 的原生锁做了哪些优化？</h3><p>（1）自旋锁</p><p>在线程进行阻塞的时候，先让线程自旋等待一段时间，可能这段时间其它线程已经解锁，这时就无需让线程再进行阻塞操作了。</p><p>自旋默认次数是10次。</p><p>（2）自适应自旋锁</p><p>自旋锁的升级，自旋的次数不再固定，由前一次自旋次数和锁的拥有者的状态决定。</p><p>（3）锁消除</p><p>在动态编译同步代码块的时候，JIT编译器借助逃逸分析技术来判断锁对象是否只被一个线程访问，而没有其他线程，这时就可以取消锁了。</p><p>4、锁粗化</p><p>当JIT编译器发现一系列的操作都对同一个对象反复加锁解锁，甚至加锁操作出现在循环中，此时会将加锁同步的范围粗化到整个操作系列的外部。</p><p>锁粒度：不要锁住一些无关的代码。</p><p>锁粗化：可以一次性执行完的不要多次加锁执行。</p><h3 id="60、为什么-wait-notify-和-notifyAll-必须在同步方法或者同步块中被调用？"><a href="#60、为什么-wait-notify-和-notifyAll-必须在同步方法或者同步块中被调用？" class="headerlink" title="60、为什么 wait(), notify()和 notifyAll()必须在同步方法或者同步块中被调用？"></a>60、为什么 wait(), notify()和 notifyAll()必须在同步方法或者同步块中被调用？</h3><p>Java中，任何对象都可以作为锁，并且 wait()，notify()等方法用于等待对象的锁或者唤醒线程，在 Java 的线程中并没有可供任何对象使用的锁，所以任意对象调用方法一定定义在Object类中。</p><p>wait(), notify()和 notifyAll()这些方法在同步代码块中调用</p><p>有的人会说，既然是线程放弃对象锁，那也可以把wait()定义在Thread类里面啊，新定义的线程继承于Thread类，也不需要重新定义wait()方法的实现。然而，这样做有一个非常大的问题，一个线程完全可以持有很多锁，你一个线程放弃锁的时候，到底要放弃哪个锁？当然了，这种设计并不是不能实现，只是管理起来更加复杂。</p><p>综上所述，wait()、notify()和notifyAll()方法要定义在Object类中。</p><h3 id="61、Java-如何实现多线程之间的通讯和协作？"><a href="#61、Java-如何实现多线程之间的通讯和协作？" class="headerlink" title="61、Java 如何实现多线程之间的通讯和协作？"></a>61、Java 如何实现多线程之间的通讯和协作？</h3><p>可以通过中断 和 共享变量的方式实现线程间的通讯和协作</p><p>比如说最经典的生产者-消费者模型：当队列满时，生产者需要等待队列有空间才能继续往里面放入商品，而在等待的期间内，生产者必须释放对临界资源（即队列）的占用权。因为生产者如果不释放对临界资源的占用权，那么消费者就无法消费队列中的商品，就不会让队列有空间，那么生产者就会一直无限等待下去。因此，一般情况下，当队列满时，会让生产者交出对临界资源的占用权，并进入挂起状态。然后等待消费者消费了商品，然后消费者通知生产者队列有空间了。同样地，当队列空时，消费者也必须等待，等待生产者通知它队列中有商品了。这种互相通信的过程就是线程间的协作。</p><p>Java中线程通信协作的最常见的两种方式：</p><p>1、syncrhoized加锁的线程的Object类的wait()/notify()/notifyAll()</p><p>2、ReentrantLock类加锁的线程的Condition类的await()/signal()/signalAll()</p><p>线程间直接的数据交换：</p><p>通过管道进行线程间通信：1）字节流；2）字符流</p><h3 id="62、Thread-类中的-yield-方法有什么作用？"><a href="#62、Thread-类中的-yield-方法有什么作用？" class="headerlink" title="62、Thread 类中的 yield 方法有什么作用？"></a>62、Thread 类中的 yield 方法有什么作用？</h3><p>yield()应该做的是让当前运行线程回到可运行状态，以允许具有相同优先级的其他线程获得运行机会。因此，使用yield()的目的是让相同优先级的线程之间能适当的轮转执行。但是，实际中无法保证yield()达到让步目的，因为让步的线程还有可能被线程调度程序再次选中。</p><p>结论：yield()从未导致线程转到等待/睡眠/阻塞状态。在大多数情况下，yield()将导致线程从运行状态转到可运行状态，但有可能没有效果。</p><h3 id="63、为什么说-Synchronized-是非公平锁？"><a href="#63、为什么说-Synchronized-是非公平锁？" class="headerlink" title="63、为什么说 Synchronized 是非公平锁？"></a>63、为什么说 Synchronized 是非公平锁？</h3><p>当锁被释放后，任何一个线程都有机会竞争得到锁，这样做的目的是提高效率，但缺点是可能产生线程饥饿现象。</p><h3 id="64、请谈谈-volatile-有什么特点，为什么它能保证变量对所有线程的可见性？"><a href="#64、请谈谈-volatile-有什么特点，为什么它能保证变量对所有线程的可见性？" class="headerlink" title="64、请谈谈 volatile 有什么特点，为什么它能保证变量对所有线程的可见性？"></a>64、请谈谈 volatile 有什么特点，为什么它能保证变量对所有线程的可见性？</h3><p>volatile只能作用于变量，保证了操作可见性和有序性，不保证原子性。</p><p>在Java的内存模型中分为主内存和工作内存，Java内存模型规定所有的变量存储在主内存中，每条线程都有自己的工作内存。</p><p>主内存和工作内存之间的交互分为8个原子操作：</p><ol><li>lock</li><li>unlock</li><li>read</li><li>load</li><li>assign</li><li>use</li><li>store</li><li>write</li></ol><p>volatile修饰的变量，只有对volatile进行assign操作，才可以load，只有load才可以use，，这样就保证了在工作内存操作volatile变量，都会同步到主内存中。</p><h3 id="65、为什么说-Synchronized-是一个悲观锁？乐观锁的实现原理又是什么？什么是-CAS，它有什么特性？"><a href="#65、为什么说-Synchronized-是一个悲观锁？乐观锁的实现原理又是什么？什么是-CAS，它有什么特性？" class="headerlink" title="65、为什么说 Synchronized 是一个悲观锁？乐观锁的实现原理又是什么？什么是 CAS，它有什么特性？"></a>65、为什么说 Synchronized 是一个悲观锁？乐观锁的实现原理又是什么？什么是 CAS，它有什么特性？</h3><p>Synchronized的并发策略是悲观的，不管是否产生竞争，任何数据的操作都必须加锁。</p><p>乐观锁的核心是CAS，CAS包括内存值、预期值、新值，只有当内存值等于预期值时，才会将内存值修改为新值。</p><h3 id="66、乐观锁一定就是好的吗？"><a href="#66、乐观锁一定就是好的吗？" class="headerlink" title="66、乐观锁一定就是好的吗？"></a>66、乐观锁一定就是好的吗？</h3><p>乐观锁认为对一个对象的操作不会引发冲突，所以每次操作都不进行加锁，只是在最后提交更改时验证是否发生冲突，如果冲突则再试一遍，直至成功为止，这个尝试的过程称为自旋。</p><p>乐观锁没有加锁，但乐观锁引入了ABA问题，此时一般采用版本号进行控制；<br>也可能产生自旋次数过多问题，此时并不能提高效率，反而不如直接加锁的效率高；<br>只能保证一个对象的原子性，可以封装成对象，再进行CAS操作；</p><h3 id="67、请尽可能详尽地对比下-Synchronized-和-ReentrantLock-的异同。"><a href="#67、请尽可能详尽地对比下-Synchronized-和-ReentrantLock-的异同。" class="headerlink" title="67、请尽可能详尽地对比下 Synchronized 和 ReentrantLock 的异同。"></a>67、请尽可能详尽地对比下 Synchronized 和 ReentrantLock 的异同。</h3><p>（1）相似点</p><p>它们都是阻塞式的同步，也就是说一个线程获得了对象锁，进入代码块，其它访问该同步块的线程都必须阻塞在同步代码块外面等待，而进行线程阻塞和唤醒的代码是比较高的。</p><p>（2）功能区别</p><p>Synchronized是java语言的关键字，是原生语法层面的互斥，需要JVM实现；ReentrantLock 是JDK1.5之后提供的API层面的互斥锁，需要lock和unlock()方法配合try/finally代码块来完成。<br>Synchronized使用较ReentrantLock 便利一些；<br>锁的细粒度和灵活性：ReentrantLock强于Synchronized；</p><p>（3）性能区别</p><p>Synchronized引入偏向锁，自旋锁之后，两者的性能差不多，在这种情况下，官方建议使用Synchronized。</p><p>① Synchronized</p><p>Synchronized会在同步块的前后分别形成monitorenter和monitorexit两个字节码指令。</p><p>在执行monitorenter指令时，首先要尝试获取对象锁。如果这个对象没被锁定，或者当前线程已经拥有了那个对象锁，把锁的计数器+1，相应的执行monitorexit时，计数器-1，当计数器为0时，锁就会被释放。如果获取锁失败，当前线程就要阻塞，知道对象锁被另一个线程释放为止。</p><p>② ReentrantLock</p><p>ReentrantLock是java.util.concurrent包下提供的一套互斥锁，相比Synchronized，ReentrantLock类提供了一些高级功能，主要有如下三项：</p><p>等待可中断，持有锁的线程长期不释放的时候，正在等待的线程可以选择放弃等待，这相当于Synchronized避免出现死锁的情况。通过lock.lockInterruptibly()来实现这一机制；<br>公平锁，多个线程等待同一个锁时，必须按照申请锁的时间顺序获得锁，Synchronized锁是非公平锁；ReentrantLock默认也是非公平锁，可以通过参数true设为公平锁，但公平锁表现的性能不是很好；<br>锁绑定多个条件，一个ReentrantLock对象可以同时绑定多个对象。ReentrantLock提供了一个Condition（条件）类，用来实现分组唤醒需要唤醒的线程们，而不是像Synchronized要么随机唤醒一个线程，要么唤醒全部线程。</p><h3 id="68、ReentrantLock-是如何实现可重入性的？"><a href="#68、ReentrantLock-是如何实现可重入性的？" class="headerlink" title="68、ReentrantLock 是如何实现可重入性的？"></a>68、ReentrantLock 是如何实现可重入性的？</h3><p>（1）什么是可重入性</p><p>一个线程持有锁时，当其他线程尝试获取该锁时，会被阻塞；而这个线程尝试获取自己持有锁时，如果成功说明该锁是可重入的，反之则不可重入。</p><p>（2）synchronized是如何实现可重入性</p><p>synchronized关键字经过编译后，会在同步块的前后分别形成monitorenter和monitorexit两个字节码指令。每个锁对象内部维护一个计数器，该计数器初始值为0，表示任何线程都可以获取该锁并执行相应的方法。根据虚拟机规范要求，在执行monitorenter指令时，首先要尝试获取对象的锁，如果这个对象没有被锁定，或者当前线程已经拥有了对象的锁，把锁的计数器+1，相应的在执行monitorexit指令后锁计数器-1，当计数器为0时，锁就被释放。如果获取对象锁失败，那当前线程就要阻塞等待，直到对象锁被另一个线程释放为止。</p><p>（3）ReentrantLock如何实现可重入性</p><p>ReentrantLock使用内部类Sync来管理锁，所以真正的获取锁是由Sync的实现类控制的。Sync有两个实现，分别为NonfairSync（非公公平锁）和FairSync（公平锁）。Sync通过继承AQS实现，在AQS中维护了一个private volatile int state来计算重入次数，避免频繁的持有释放操作带来的线程问题。</p><p>（4）ReentrantLock代码实例</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Sync继承于AQS</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Sync</span> <span class="keyword">extends</span> <span class="title class_">AbstractQueuedSynchronizer</span> {</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="comment">// ReentrantLock默认是非公平锁</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ReentrantLock</span><span class="params">()</span> {</span><br><span class="line">        sync = <span class="keyword">new</span> <span class="title class_">NonfairSync</span>();</span><br><span class="line"> }</span><br><span class="line"><span class="comment">// 可以通过向构造方法中传true来实现公平锁</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ReentrantLock</span><span class="params">(<span class="type">boolean</span> fair)</span> {</span><br><span class="line">    sync = fair ? <span class="keyword">new</span> <span class="title class_">FairSync</span>() : <span class="keyword">new</span> <span class="title class_">NonfairSync</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">tryAcquire</span><span class="params">(<span class="type">int</span> acquires)</span> {</span><br><span class="line">        <span class="comment">// 当前想要获取锁的线程</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Thread</span> <span class="variable">current</span> <span class="operator">=</span> Thread.currentThread();</span><br><span class="line">        <span class="comment">// 当前锁的状态</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> getState();</span><br><span class="line">        <span class="comment">// state == 0 此时此刻没有线程持有锁</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="number">0</span>) {</span><br><span class="line">            <span class="comment">// 虽然此时此刻锁是可以用的，但是这是公平锁，既然是公平，就得讲究先来后到，</span></span><br><span class="line">            <span class="comment">// 看看有没有别人在队列中等了半天了</span></span><br><span class="line">            <span class="keyword">if</span> (!hasQueuedPredecessors() &amp;&amp;</span><br><span class="line">                <span class="comment">// 如果没有线程在等待，那就用CAS尝试一下，成功了就获取到锁了，</span></span><br><span class="line">                <span class="comment">// 不成功的话，只能说明一个问题，就在刚刚几乎同一时刻有个线程抢先了 =_=</span></span><br><span class="line">                <span class="comment">// 因为刚刚还没人的，我判断过了</span></span><br><span class="line">                compareAndSetState(<span class="number">0</span>, acquires)) {</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 到这里就是获取到锁了，标记一下，告诉大家，现在是我占用了锁</span></span><br><span class="line">                setExclusiveOwnerThread(current);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">          <span class="comment">// 会进入这个else if分支，说明是重入了，需要操作：state=state+1</span></span><br><span class="line">        <span class="comment">// 这里不存在并发问题</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (current == getExclusiveOwnerThread()) {</span><br><span class="line">            <span class="type">int</span> <span class="variable">nextc</span> <span class="operator">=</span> c + acquires;</span><br><span class="line">            <span class="keyword">if</span> (nextc &lt; <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">"Maximum lock count exceeded"</span>);</span><br><span class="line">            setState(nextc);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 如果到这里，说明前面的if和else if都没有返回true，说明没有获取到锁</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>（5）代码分析</p><p>当一个线程在获取锁过程中，先判断state的值是否为0，如果是表示没有线程持有锁，就可以尝试获取锁。<br>当state的值不为0时，表示锁已经被一个线程占用了，这时会做一个判断current==getExclusiveOwnerThread()，这个方法返回的是当前持有锁的线程，这个判断是看当前持有锁的线程是不是自己，如果是自己，那么将state的值+1，表示重入返回即可。</p><h3 id="69、什么是锁消除和锁粗化？"><a href="#69、什么是锁消除和锁粗化？" class="headerlink" title="69、什么是锁消除和锁粗化？"></a>69、什么是锁消除和锁粗化？</h3><p>（1）锁消除</p><p>所消除就是虚拟机根据一个对象是否真正存在同步情况，若不存在同步情况，则对该对象的访问无需经过加锁解锁的操作。</p><p>比如StringBuffer的append方法，因为append方法需要判断对象是否被占用，而如果代码不存在锁竞争，那么这部分的性能消耗是无意义的。于是虚拟机在即时编译的时候就会将上面的代码进行优化，也就是锁消除。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">synchronized</span> StringBuffer <span class="title function_">append</span><span class="params">(String str)</span> {</span><br><span class="line">    toStringCache = <span class="literal">null</span>;</span><br><span class="line">    <span class="built_in">super</span>.append(str);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>从源码可以看出，append方法用了 synchronized关键字，它是线程安全的。但我们可能仅在线程内部把StringBuffer当做局部变量使用；StringBuffer仅在方法内作用域有效，不存在线程安全的问题，这时我们可以通过编译器将其优化，将锁消除，前提是Java必须运行在server模式，同时必须开启逃逸分析；</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-server -XX:+DoEscapeAnalysis -XX:+EliminateLocks</span><br><span class="line"></span><br><span class="line">其中+DoEscapeAnalysis表示开启逃逸分析，+EliminateLocks表示锁消除。</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">createStringBuffer</span><span class="params">(String str1, String str2)</span> {</span><br><span class="line">    <span class="type">StringBuffer</span> <span class="variable">sBuf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">    sBuf.append(str1);<span class="comment">// append方法是同步操作</span></span><br><span class="line">    sBuf.append(str2);</span><br><span class="line">    <span class="keyword">return</span> sBuf.toString();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>逃逸分析：比如上面的代码，它要看sBuf是否可能逃出它的作用域？如果将sBuf作为方法的返回值进行返回，那么它在方法外部可能被当作一个全局对象使用，就有可能发生线程安全问题，这时就可以说sBuf这个对象发生逃逸了，因而不应将append操作的锁消除，但我们上面的代码没有发生锁逃逸，锁消除就可以带来一定的性能提升。</p><p>（2）锁粗化</p><p>锁的请求、同步、释放都会消耗一定的系统资源，如果高频的锁请求反而不利于系统性能的优化，锁粗化就是把多次的锁请求合并成一个请求，扩大锁的范围，降低锁请求、同步、释放带来的性能损耗。</p><h3 id="70、跟-Synchronized-相比，可重入锁-ReentrantLock-其实现原理有什么不同？"><a href="#70、跟-Synchronized-相比，可重入锁-ReentrantLock-其实现原理有什么不同？" class="headerlink" title="70、跟 Synchronized 相比，可重入锁 ReentrantLock 其实现原理有什么不同？"></a>70、跟 Synchronized 相比，可重入锁 ReentrantLock 其实现原理有什么不同？</h3><p>（1）都是可重入锁；</p><p>（2）ReentrantLock内部是实现了Sync，Sync继承于AQS抽象类。Sync有两个实现，一个是公平锁，一个是非公平锁，通过构造函数定义。AQS中维护了一个state来计算重入次数，避免频繁的持有释放操作带来的线程问题。</p><p>（3）ReentrantLock只能定义代码块，而Synchronized可以定义方法和代码块；</p><p>4、Synchronized是JVM的一个内部关键字，ReentrantLock是JDK1.5之后引入的一个API层面的互斥锁；</p><p>5、Synchronized实现自动的加锁、释放锁，ReentrantLock需要手动加锁和释放锁，中间可以暂停；</p><p>6、Synchronized由于引进了偏向锁和自旋锁，所以性能上和ReentrantLock差不多，但操作上方便很多，所以优先使用Synchronized。</p><h3 id="71、那么请谈谈-AQS-框架是怎么回事儿？"><a href="#71、那么请谈谈-AQS-框架是怎么回事儿？" class="headerlink" title="71、那么请谈谈 AQS 框架是怎么回事儿？"></a>71、那么请谈谈 AQS 框架是怎么回事儿？</h3><p>（1）AQS是AbstractQueuedSynchronizer的缩写，它提供了一个FIFO队列，可以看成是一个实现同步锁的核心组件。</p><p>AQS是一个抽象类，主要通过继承的方式来使用，它本身没有实现任何的同步接口，仅仅是定义了同步状态的获取和释放的方法来提供自定义的同步组件。</p><p>（2）AQS的两种功能：独占锁和共享锁</p><p>（3）AQS的内部实现</p><p>AQS的实现依赖内部的同步队列，也就是FIFO的双向队列，如果当前线程竞争失败，那么AQS会把当前线程以及等待状态信息构造成一个Node加入到同步队列中，同时再阻塞该线程。当获取锁的线程释放锁以后，会从队列中唤醒一个阻塞的节点（线程）。</p><p><img src="https://img-blog.csdnimg.cn/20210801171611775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p>AQS队列内部维护的是一个FIFO的双向链表，这种结构的特点是每个数据结构都有两个指针，分别指向直接的后继节点和直接前驱节点。所以双向链表可以从任意一个节点开始很方便的范文前驱和后继节点。每个Node其实是由线程封装，当线程争抢锁失败后会封装成Node加入到AQS队列中。</p><h3 id="72、AQS-对资源的共享方式？"><a href="#72、AQS-对资源的共享方式？" class="headerlink" title="72、AQS 对资源的共享方式？"></a>72、AQS 对资源的共享方式？</h3><p>AQS定义两种资源共享方式</p><p>（1）Exclusive（独占）</p><p>只有一个线程能执行，如ReentrantLock。又可分为公平锁和非公平锁：</p><ul><li>公平锁：按照线程在队列中的排队顺序，先到者先拿到锁</li><li>非公平锁：当线程要获取锁时，无视队列顺序直接去抢锁，谁抢到就是谁的</li></ul><p>（2）Share（共享）</p><p>多个线程可同时执行，如Semaphore/CountDownLatch。Semaphore、CountDownLatch、 CyclicBarrier、ReadWriteLock 我们都会在后面讲到。</p><p>ReentrantReadWriteLock 可以看成是组合式，因为ReentrantReadWriteLock也就是读写锁允许多个线程同时对某一资源进行读。</p><p>不同的自定义同步器争用共享资源的方式也不同。自定义同步器在实现时只需要实现共享资源 state 的获取与释放方式即可，至于具体线程等待队列的维护（如获取资源失败入队/唤醒出队等），AQS已经在顶层实现好了。</p><h3 id="73、如何让-Java-的线程彼此同步？"><a href="#73、如何让-Java-的线程彼此同步？" class="headerlink" title="73、如何让 Java 的线程彼此同步？"></a>73、如何让 Java 的线程彼此同步？</h3><ol><li>synchronized</li><li>volatile</li><li>ReenreantLock</li><li>使用局部变量实现线程同步</li></ol><h3 id="74、你了解过哪些同步器？请分别介绍下。"><a href="#74、你了解过哪些同步器？请分别介绍下。" class="headerlink" title="74、你了解过哪些同步器？请分别介绍下。"></a>74、你了解过哪些同步器？请分别介绍下。</h3><p>（1）Semaphore同步器</p><p>特征：</p><p>经典的信号量，通过计数器控制对共享资源的访问<br>Semaphore(int count):创建拥有count个许可证的信号量<br>acquire()/acquire(int num) : 获取1/num个许可证<br>release/release(int num) : 释放1/num个许可证</p><p>（2）CountDownLatch同步器</p><p>特征：</p><p>必须发生指定数量的事件后才可以继续运行(比如赛跑比赛，裁判喊出3,2,1之后大家才同时跑)<br>CountDownLatch(int count):必须发生count个数量才可以打开锁存器<br>await:等待锁存器<br>countDown:触发事件</p><p>（3）CyclicBarrier同步器</p><p>特征：</p><p>适用于只有多个线程都到达预定点时才可以继续执行(比如斗地主，需要等齐三个人才开始)<br>CyclicBarrier(int num) :等待线程的数量<br>CyclicBarrier(int num, Runnable action) :等待线程的数量以及所有线程到达后的操作<br>await() : 到达临界点后暂停线程</p><p>（4）交换器(Exchanger)同步器</p><p>（5）Phaser同步器</p><h3 id="75、Java-中的线程池是如何实现的"><a href="#75、Java-中的线程池是如何实现的" class="headerlink" title="75、Java 中的线程池是如何实现的"></a>75、Java 中的线程池是如何实现的</h3><p>创建一个阻塞队列来容纳任务，在第一次执行任务时创建足够多的线程，并处理任务，之后每个工作线程自动从任务队列中获取线程，直到任务队列中任务为0为止，此时线程处于等待状态，一旦有工作任务加入任务队列中，即刻唤醒工作线程进行处理，实现线程的可复用性。</p><p>线程池一般包括四个基本组成部分：</p><p>（1）线程池管理器</p><p>用于创建线程池，销毁线程池，添加新任务。</p><p>（2）工作线程</p><p>线程池中线程，可循环执行任务，在没有任务时处于等待状态。</p><p>（3）任务队列</p><p>用于存放没有处理的任务，一种缓存机制。</p><p>（4）任务接口</p><p>每个任务必须实现的接口，供工作线程调度任务的执行，主要规定了任务的开始和收尾工作，和任务的状态。</p><h3 id="76、创建线程池的几个核心构造参数"><a href="#76、创建线程池的几个核心构造参数" class="headerlink" title="76、创建线程池的几个核心构造参数"></a>76、创建线程池的几个核心构造参数</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java线程池的完整构造函数</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ThreadPoolExecutor</span><span class="params">(</span></span><br><span class="line"><span class="params">  <span class="type">int</span> corePoolSize, // 线程池长期维持的最小线程数，即使线程处于Idle状态，也不会回收。</span></span><br><span class="line"><span class="params">  <span class="type">int</span> maximumPoolSize, // 线程数的上限</span></span><br><span class="line"><span class="params">  <span class="type">long</span> keepAliveTime, // 线程最大生命周期。</span></span><br><span class="line"><span class="params">  TimeUnit unit, //时间单位</span></span><br><span class="line"><span class="params">  BlockingQueue workQueue, //任务队列。当线程池中的线程都处于运行状态，而此时任务数量继续增加，则需要一个容器来容纳这些任务，这就是任务队列。</span></span><br><span class="line"><span class="params">  ThreadFactory threadFactory, // 线程工厂。定义如何启动一个线程，可以设置线程名称，并且可以确认是否是后台线程等。</span></span><br><span class="line"><span class="params">  RejectedExecutionHandler handler // 拒绝任务处理器。由于超出线程数量和队列容量而对继续增加的任务进行处理的程序。</span></span><br><span class="line"><span class="params">)</span></span><br></pre></td></tr></tbody></table></figure><h3 id="77、线程池中的线程是怎么创建的？是一开始就随着线程池的启动创建好的吗？"><a href="#77、线程池中的线程是怎么创建的？是一开始就随着线程池的启动创建好的吗？" class="headerlink" title="77、线程池中的线程是怎么创建的？是一开始就随着线程池的启动创建好的吗？"></a>77、线程池中的线程是怎么创建的？是一开始就随着线程池的启动创建好的吗？</h3><p>线程池中的线程是在第一次提交任务submit时创建的</p><p>创建线程的方式有继承Thread和实现Runnable，重写run方法，start开始执行，wait等待，sleep休眠，shutdown停止。</p><p>（1）newSingleThreadExecutor：单线程池。</p><p>顾名思义就是一个池中只有一个线程在运行，该线程永不超时，而且由于是一个线程，当有多个任务需要处理时，会将它们放置到一个无界阻塞队列中逐个处理，它的实现代码如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title function_">newSingleThreadExecutor</span><span class="params">()</span> {</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">FinalizableDelegatedExecutorService</span></span><br><span class="line">            (<span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(<span class="number">1</span>, <span class="number">1</span>,<span class="number">0L</span>, TimeUnit.MILLISECONDS,</span><br><span class="line">             <span class="keyword">new</span> <span class="title class_">LinkedBlockingQueue</span></span><br></pre></td></tr></tbody></table></figure><p>它的使用方法也很简单，下面是简单的示例：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException,InterruptedException {</span><br><span class="line">    <span class="comment">// 创建单线程执行器</span></span><br><span class="line">    <span class="type">ExecutorService</span> <span class="variable">es</span> <span class="operator">=</span> Executors.newSingleThreadExecutor();</span><br><span class="line">    <span class="comment">// 执行一个任务</span></span><br><span class="line">    <span class="type">Future</span> <span class="variable">future</span> <span class="operator">=</span> es.submit(<span class="keyword">new</span> <span class="title class_">Callable</span>() {</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">    <span class="comment">// 获得任务执行后的返回值</span></span><br><span class="line">    System.out.println(<span class="string">"返回值："</span> + future.get());</span><br><span class="line">    <span class="comment">// 关闭执行器</span></span><br><span class="line">    es.shutdown();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>（2）newCachedThreadPool：缓冲功能的线程。</p><p>建立了一个线程池，而且线程数量是没有限制的(当然，不能超过Integer的最大值)，新增一个任务即有一个线程处理，或者复用之前空闲的线程，或者重亲启动一个线程，但是一旦一个线程在60秒内一直处于等待状态时（也就是一分钟无事可做），则会被终止，其源码如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title function_">newCachedThreadPool</span><span class="params">()</span> {</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(<span class="number">0</span>, Integer.MAX_VALUE,<span class="number">60L</span>, TimeUnit.SECONDS,</span><br><span class="line">                                      <span class="keyword">new</span> <span class="title class_">SynchronousQueue</span>());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里需要说明的是，任务队列使用了同步阻塞队列，这意味着向队列中加入一个元素，即可唤醒一个线程(新创建的线程或复用空闲线程来处理)，这种队列已经没有队列深度的概念了。</p><p>（3）newFixedThreadPool：固定线程数量的线程池。</p><p>在初始化时已经决定了线程的最大数量，若任务添加的能力超出了线程的处理能力，则建立阻塞队列容纳多余的任务，其源码如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ExecutorService <span class="title function_">newFixedThreadPool</span><span class="params">(<span class="type">int</span> nThreads)</span> {</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(nThreads, nThreads,</span><br><span class="line">                                      <span class="number">0L</span>, TimeUnit.MILLISECONDS,</span><br><span class="line">                                      <span class="keyword">new</span> <span class="title class_">LinkedBlockingQueue</span>());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>上面返回的是一个ThreadPoolExecutor，它的corePoolSize和maximumPoolSize是相等的，也就是说，最大线程数量为nThreads。如果任务增长的速度非常快，超过了LinkedBlockingQuene的最大容量(Integer的最大值)，那此时会如何处理呢？会按照ThreadPoolExecutor默认的拒绝策略(默认是DiscardPolicy，直接丢弃)来处理。</p><p>以上三种线程池执行器都是ThreadPoolExecutor的简化版，目的是帮助开发人员屏蔽过得线程细节，简化多线程开发。当需要运行异步任务时，可以直接通过Executors获得一个线程池，然后运行任务，不需要关注ThreadPoolExecutor的一系列参数时什么含义。当然，有时候这三个线程不能满足要求，此时则可以直接操作ThreadPoolExecutor来实现复杂的多线程计算。</p><p>newSingleThreadExecutor、newCachedThreadPool、newFixedThreadPool是线程池的简化版，而ThreadPoolExecutor则是旗舰版___简化版容易操作，需要了解的知识相对少些，方便使用，而旗舰版功能齐全，适用面广，难以驾驭。</p><h3 id="78、volatile-关键字的作用"><a href="#78、volatile-关键字的作用" class="headerlink" title="78、volatile 关键字的作用"></a>78、volatile 关键字的作用</h3><p>对于可见性，Java 提供了 volatile 关键字来保证可见性和禁止指令重排。 volatile 提供 happens-before 的保证，确保一个线程的修改能对其他线程是可见的。当一个共享变量被 volatile 修饰时，它会保证修改的值会立即被更新到主存，当有其他线程需要读取时，它会去内存中读取新值。</p><p>从实践角度而言，volatile 的一个重要作用就是和 CAS 结合，保证了原子性，详细的可以参见 java.util.concurrent.atomic 包下的类，比如 AtomicInteger。</p><p>volatile 常用于多线程环境下的单次操作(单次读或者单次写)。</p><h3 id="79、既然-volatile-能够保证线程间的变量可见性，是不是就意味着基于-volatile-变量的运算就是并发安全的？"><a href="#79、既然-volatile-能够保证线程间的变量可见性，是不是就意味着基于-volatile-变量的运算就是并发安全的？" class="headerlink" title="79、既然 volatile 能够保证线程间的变量可见性，是不是就意味着基于 volatile 变量的运算就是并发安全的？"></a>79、既然 volatile 能够保证线程间的变量可见性，是不是就意味着基于 volatile 变量的运算就是并发安全的？</h3><p>volatile修饰的变量在各个线程的工作内存中不存在一致性的问题（在各个线程工作的内存中，volatile修饰的变量也会存在不一致的情况，但是由于每次使用之前都会先刷新主存中的数据到工作内存，执行引擎看不到不一致的情况，因此可以认为不存在不一致的问题），但是java的运算并非原子性的操作，导致volatile在并发下并非是线程安全的。</p><h3 id="80、ThreadLocal-是什么？有哪些使用场景？"><a href="#80、ThreadLocal-是什么？有哪些使用场景？" class="headerlink" title="80、ThreadLocal 是什么？有哪些使用场景？"></a>80、ThreadLocal 是什么？有哪些使用场景？</h3><p>ThreadLocal 是一个本地线程副本变量工具类，在每个线程中都创建了一个 ThreadLocalMap 对象，简单说 ThreadLocal 就是一种以空间换时间的做法，每个线程可以访问自己内部 ThreadLocalMap 对象内的 value。通过这种方式，避免资源在多线程间共享。</p><p>原理：线程局部变量是局限于线程内部的变量，属于线程自身所有，不在多个线程间共享。Java提供ThreadLocal类来支持线程局部变量，是一种实现线程安全的方式。但是在管理环境下（如 web 服务器）使用线程局部变量的时候要特别小心，在这种情况下，工作线程的生命周期比任何应用变量的生命周期都要长。任何线程局部变量一旦在工作完成后没有释放，Java 应用就存在内存泄露的风险。</p><p>经典的使用场景是为每个线程分配一个 JDBC 连接 Connection。这样就可以保证每个线程的都在各自的 Connection 上进行数据库的操作，不会出现 A 线程关了 B线程正在使用的 Connection； 还有 Session 管理 等问题。</p><h3 id="81、请谈谈-ThreadLocal-是怎么解决并发安全的？"><a href="#81、请谈谈-ThreadLocal-是怎么解决并发安全的？" class="headerlink" title="81、请谈谈 ThreadLocal 是怎么解决并发安全的？"></a>81、请谈谈 ThreadLocal 是怎么解决并发安全的？</h3><p>在java程序中，常用的有两种机制来解决多线程并发问题，一种是sychronized方式，通过锁机制，一个线程执行时，让另一个线程等待，是以时间换空间的方式来让多线程串行执行。而另外一种方式就是ThreadLocal方式，通过创建线程局部变量，以空间换时间的方式来让多线程并行执行。两种方式各有优劣，适用于不同的场景，要根据不同的业务场景来进行选择。</p><p>在spring的源码中，就使用了ThreadLocal来管理连接，在很多开源项目中，都经常使用ThreadLocal来控制多线程并发问题，因为它足够的简单，我们不需要关心是否有线程安全问题，因为变量是每个线程所特有的。</p><h3 id="82、很多人都说要慎用-ThreadLocal，谈谈你的理解，使用-ThreadLocal-需要注意些什么？"><a href="#82、很多人都说要慎用-ThreadLocal，谈谈你的理解，使用-ThreadLocal-需要注意些什么？" class="headerlink" title="82、很多人都说要慎用 ThreadLocal，谈谈你的理解，使用 ThreadLocal 需要注意些什么？"></a>82、很多人都说要慎用 ThreadLocal，谈谈你的理解，使用 ThreadLocal 需要注意些什么？</h3><p>ThreadLocal 变量解决了多线程环境下单个线程中变量的共享问题，使用名为ThreadLocalMap的哈希表进行维护（key为ThreadLocal变量名，value为ThreadLocal变量的值）；</p><p>使用时需要注意以下几点：</p><ul><li>线程之间的threadLocal变量是互不影响的，</li><li>使用private final static进行修饰，防止多实例时内存的泄露问题</li><li>线程池环境下使用后将threadLocal变量remove掉或设置成一个初始值</li></ul><h3 id="83、为什么代码会重排序？"><a href="#83、为什么代码会重排序？" class="headerlink" title="83、为什么代码会重排序？"></a>83、为什么代码会重排序？</h3><p>在执行程序时，为了提供性能，处理器和编译器常常会对指令进行重排序，但是不能随意重排序，不是你想怎么排序就怎么排序，它需要满足以下两个条件：</p><ul><li>在单线程环境下不能改变程序运行的结果；</li><li>存在数据依赖关系的不允许重排序</li></ul><p>需要注意的是：重排序不会影响单线程环境的执行结果，但是会破坏多线程的执行语义。</p><h3 id="84、什么是自旋"><a href="#84、什么是自旋" class="headerlink" title="84、什么是自旋"></a>84、什么是自旋</h3><p>很多 synchronized 里面的代码只是一些很简单的代码，执行时间非常快，此时等待的线程都加锁可能是一种不太值得的操作，因为线程阻塞涉及到用户态和内核态切换的问题。既然 synchronized 里面的代码执行得非常快，不妨让等待锁的线程不要被阻塞，而是在 synchronized 的边界做忙循环，这就是自旋。如果做了多次循环发现还没有获得锁，再阻塞，这样可能是一种更好的策略。</p><h3 id="85、多线程中-synchronized-锁升级的原理是什么？"><a href="#85、多线程中-synchronized-锁升级的原理是什么？" class="headerlink" title="85、多线程中 synchronized 锁升级的原理是什么？"></a>85、多线程中 synchronized 锁升级的原理是什么？</h3><p>synchronized 锁升级原理：在锁对象的对象头里面有一个 threadid 字段，在第一次访问的时候 threadid 为空，jvm 让其持有偏向锁，并将 threadid 设置为其线程 id，再次进入的时候会先判断 threadid 是否与其线程 id 一致，如果一致则可以直接使用此对象，如果不一致，则升级偏向锁为轻量级锁，通过自旋循环一定次数来获取锁，执行一定次数之后，如果还没有正常获取到要使用的对象，此时就会把锁从轻量级升级为重量级锁，此过程就构成了 synchronized 锁的升级。</p><p>锁的升级的目的：锁升级是为了减低了锁带来的性能消耗。在 Java 6 之后优化 synchronized 的实现方式，使用了偏向锁升级为轻量级锁再升级到重量级锁的方式，从而减低了锁带来的性能消耗。</p><h3 id="86、synchronized-和-ReentrantLock-区别是什么？"><a href="#86、synchronized-和-ReentrantLock-区别是什么？" class="headerlink" title="86、synchronized 和 ReentrantLock 区别是什么？"></a>86、synchronized 和 ReentrantLock 区别是什么？</h3><p>synchronized 是和 if、else、for、while 一样的关键字，ReentrantLock 是类，这是二者的本质区别。既然 ReentrantLock 是类，那么它就提供了比synchronized 更多更灵活的特性，可以被继承、可以有方法、可以有各种各样的类变量</p><p>synchronized 早期的实现比较低效，对比 ReentrantLock，大多数场景性能都相差较大，但是在 Java 6 中对 synchronized 进行了非常多的改进。</p><p>相同点：两者都是可重入锁</p><p>两者都是可重入锁。”可重入锁”概念是：自己可以再次获取自己的内部锁。比如一个线程获得了某个对象的锁，此时这个对象锁还没有释放，当其再次想要获取这个对象的锁的时候还是可以获取的，如果不可锁重入的话，就会造成死锁。同一个线程每次获取锁，锁的计数器都自增1，所以要等到锁的计数器下降为0时才能释放锁。</p><p>主要区别如下：</p><ul><li>ReentrantLock 使用起来比较灵活，但是必须有释放锁的配合动作；</li><li>ReentrantLock 必须手动获取与释放锁，而 synchronized 不需要手动释放和开启锁；</li><li>ReentrantLock 只适用于代码块锁，而 synchronized 可以修饰类、方法、变量等。</li><li>二者的锁机制其实也是不一样的。ReentrantLock 底层调用的是 Unsafe 的park 方法加锁，synchronized 操作的应该是对象头中 mark word</li></ul><p>Java中每一个对象都可以作为锁，这是synchronized实现同步的基础：</p><ul><li>普通同步方法，锁是当前实例对象</li><li>静态同步方法，锁是当前类的class对象</li><li>同步方法块，锁是括号里面的对象</li></ul><h3 id="87、Java-Concurrency-API-中的-Lock-接口-Lock-interface-是什么？对比同步它有什么优势？"><a href="#87、Java-Concurrency-API-中的-Lock-接口-Lock-interface-是什么？对比同步它有什么优势？" class="headerlink" title="87、Java Concurrency API 中的 Lock 接口(Lock interface)是什么？对比同步它有什么优势？"></a>87、Java Concurrency API 中的 Lock 接口(Lock interface)是什么？对比同步它有什么优势？</h3><p>Lock 接口比同步方法和同步块提供了更具扩展性的锁操作。他们允许更灵活的结构，可以具有完全不同的性质，并且可以支持多个相关类的条件对象。</p><p>它的优势有：</p><p>（1）可以使锁更公平</p><p>（2）可以使线程在等待锁的时候响应中断</p><p>（3）可以让线程尝试获取锁，并在无法获取锁的时候立即返回或者等待一段时间</p><p>（4）可以在不同的范围，以不同的顺序获取和释放锁</p><p>整体上来说 Lock 是 synchronized 的扩展版，Lock 提供了无条件的、可轮询的(tryLock 方法)、定时的(tryLock 带参方法)、可中断的(lockInterruptibly)、可多条件队列的(newCondition 方法)锁操作。另外 Lock 的实现类基本都支持非公平锁(默认)和公平锁，synchronized 只支持非公平锁，当然，在大部分情况下，非公平锁是高效的选择。</p><h3 id="88、jsp-和-servlet-有什么区别？"><a href="#88、jsp-和-servlet-有什么区别？" class="headerlink" title="88、jsp 和 servlet 有什么区别？"></a>88、jsp 和 servlet 有什么区别？</h3><p>（1）servlet是服务器端的Java程序，它担当客户端和服务端的中间层。</p><p>（2）jsp全名为Java server pages，中文名叫Java服务器页面，其本质是一个简化的servlet设计。JSP是一种动态页面设计，它的主要目的是将表示逻辑从servlet中分离出来。</p><p>（3）JVM只能识别Java代码，不能识别JSP，JSP编译后变成了servlet，web容器将JSP的代码编译成JVM能够识别的Java类（servlet）。</p><p>（4）JSP有内置对象、servlet没有内置对象。</p><h3 id="89、jsp-有哪些内置对象？作用分别是什么？"><a href="#89、jsp-有哪些内置对象？作用分别是什么？" class="headerlink" title="89、jsp 有哪些内置对象？作用分别是什么？"></a>89、jsp 有哪些内置对象？作用分别是什么？</h3><p>JSP九大内置对象：</p><ol><li>pageContext，页面上下文对象，相当于页面中所有功能的集合，通过它可以获取JSP页面的out、request、response、session、application对象。</li><li>request</li><li>response</li><li>session</li><li>application，应用程序对象，application实现了用户间数据的共享，可存放全局变量，它开始于服务器启动，知道服务器关闭。</li><li>page，就是JSP本身。</li><li>exception</li><li>out，out用于在web浏览器内输出信息，并且管理应用服务器上的输出缓冲区，作用域page。</li><li>config，取得服务器的配置信息。</li></ol><h3 id="90、forward-和-redirect-的区别？"><a href="#90、forward-和-redirect-的区别？" class="headerlink" title="90、forward 和 redirect 的区别？"></a>90、forward 和 redirect 的区别？</h3><ol><li>forward是直接请求转发；redirect是间接请求转发，又叫重定向。</li><li>forward，客户端和浏览器执行一次请求；redirect，客户端和浏览器执行两次请求。</li><li>forward，经典的MVC模式就是forward；redirect，用于避免用户的非正常访问。（例如用户非正常访问，servlet就可以将HTTP请求重定向到登录页面）。</li><li>forward，地址不变；redirect，地址改变。</li><li>forward常用方法：RequestDispatcher类的forward()方法；redirect常用方法：HttpServletRequest类的sendRedirect()方法。</li></ol><h3 id="91、说一下-jsp-的-4-种作用域？"><a href="#91、说一下-jsp-的-4-种作用域？" class="headerlink" title="91、说一下 jsp 的 4 种作用域？"></a>91、说一下 jsp 的 4 种作用域？</h3><p>application、session、request、page</p><h3 id="92、session-和-cookie-有什么区别？"><a href="#92、session-和-cookie-有什么区别？" class="headerlink" title="92、session 和 cookie 有什么区别？"></a>92、session 和 cookie 有什么区别？</h3><p>（1）存储位置不同</p><ul><li>cookie在客户端浏览器；</li><li>session在服务器；</li></ul><p>（2）存储容量不同</p><ul><li>cookie</li></ul><p>（3）存储方式不同</p><ul><li>cookie只能保存ASCII字符串，并需要通过编码方式存储为Unicode字符或者二进制数据；</li><li>session中能存储任何类型的数据，包括并不局限于String、integer、list、map等；</li></ul><p>（4）隐私策略不同</p><ul><li>cookie对客户端是可见的，不安全；</li><li>session存储在服务器上，安全；</li></ul><p>（5）有效期不同</p><ul><li>开发可以通过设置cookie的属性，达到使cookie长期有效的效果；</li><li>session依赖于名为JESSIONID的cookie，而cookie JSESSIONID的过期时间默认为-1，只需关闭窗口该session就会失效，因而session达不到长期有效的效果；</li></ul><p>（6）跨域支持上不同</p><ul><li>cookie支持跨域；</li><li>session不支持跨域；</li></ul><h3 id="93、如果客户端禁止-cookie-能实现-session-还能用吗？"><a href="#93、如果客户端禁止-cookie-能实现-session-还能用吗？" class="headerlink" title="93、如果客户端禁止 cookie 能实现 session 还能用吗？"></a>93、如果客户端禁止 cookie 能实现 session 还能用吗？</h3><p>一般默认情况下，在会话中，服务器存储 session 的 sessionid 是通过 cookie 存到浏览器里。</p><p>如果浏览器禁用了 cookie，浏览器请求服务器无法携带 sessionid，服务器无法识别请求中的用户身份，session失效。</p><p>但是可以通过其他方法在禁用 cookie 的情况下，可以继续使用session。</p><ol><li>通过url重写，把 sessionid 作为参数追加的原 url 中，后续的浏览器与服务器交互中携带 sessionid 参数。</li><li>服务器的返回数据中包含 sessionid，浏览器发送请求时，携带 sessionid 参数。</li><li>通过 Http 协议其他 header 字段，服务器每次返回时设置该 header 字段信息，浏览器中 js 读取该 header 字段，请求服务器时，js设置携带该 header 字段。</li></ol><h3 id="94、什么是上下文切换？"><a href="#94、什么是上下文切换？" class="headerlink" title="94、什么是上下文切换？"></a>94、什么是上下文切换？</h3><p>多线程编程中一般线程的个数都大于 CPU 核心的个数，而一个 CPU 核心在任意时刻只能被一个线程使用，为了让这些线程都能得到有效执行，CPU 采取的策略是为每个线程分配时间片并轮转的形式。当一个线程的时间片用完的时候就会重新处于就绪状态让给其他线程使用，这个过程就属于一次上下文切换。</p><p>概括来说就是：当前任务在执行完 CPU 时间片切换到另一个任务之前会先保存自己的状态，以便下次再切换回这个任务时，可以再加载这个任务的状态。任务从保存到再加载的过程就是一次上下文切换。</p><p>上下文切换通常是计算密集型的。也就是说，它需要相当可观的处理器时间，在每秒几十上百次的切换中，每次切换都需要纳秒量级的时间。所以，上下文切换对系统来说意味着消耗大量的 CPU 时间，事实上，可能是操作系统中时间消耗最大的操作。</p><p>Linux 相比与其他操作系统（包括其他类 Unix 系统）有很多的优点，其中有一项就是，其上下文切换和模式切换的时间消耗非常少。</p><h3 id="95、cookie、session、token"><a href="#95、cookie、session、token" class="headerlink" title="95、cookie、session、token"></a>95、cookie、session、token</h3><p>1、session机制</p><p><img src="https://img-blog.csdnimg.cn/20210801175715748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p>session是服务端存储的一个对象，主要用来存储所有访问过该服务端的客户端的用户信息（也可以存储其他信息），从而实现保持用户会话状态。但是服务器重启时，内存会被销毁，存储的用户信息也就消失了。</p><p>不同的用户访问服务端的时候会在session对象中存储键值对，”键”用来存储开启这个用户信息的”钥匙”，在登录成功后，”钥匙”通过cookie返回给客户端，客户端存储为sessionId记录在cookie中。当客户端再次访问时，会默认携带cookie中的sessionId来实现会话机制。</p><p>（1）session是基于cookie的。</p><ul><li>cookie的数据4k左右；</li><li>cookie存储数据的格式：字符串key=value</li><li>cookie存储有效期：可以自行通过expires进行具体的日期设置，如果没设置，默认是关闭浏览器时失效。</li><li>cookie有效范围：当前域名下有效。所以session这种会话存储方式方式只适用于客户端代码和服务端代码运行在同一台服务器上（前后端项目协议、域名、端口号都一致，即在一个项目下）</li></ul><p>（2）session持久化</p><p>用于解决重启服务器后session消失的问题。在数据库中存储session，而不是存储在内存中。通过包：express-mysql-session。</p><p>当客户端存储的cookie失效后，服务端的session不会立即销毁，会有一个延时，服务端会定期清理无效session，不会造成无效数据占用存储空间的问题。</p><p>2、token机制</p><p><img src="https://img-blog.csdnimg.cn/20210801175804261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p>适用于前后端分离的项目（前后端代码运行在不同的服务器下）</p><p>请求登录时，token和sessionid原理相同，是对key和key对应的用户信息进行加密后的加密字符，登录成功后，会在响应主体中将{token：”字符串”}返回给客户端。</p><p>客户端通过cookie都可以进行存储。再次请求时不会默认携带，需要在请求拦截器位置给请求头中添加认证字段Authorization携带token信息，服务器就可以通过token信息查找用户登录状态。</p><h3 id="96、说一下-session-的工作原理？"><a href="#96、说一下-session-的工作原理？" class="headerlink" title="96、说一下 session 的工作原理？"></a>96、说一下 session 的工作原理？</h3><p>当客户端登录完成后，会在服务端产生一个session，此时服务端会将sessionid返回给客户端浏览器。客户端将sessionid储存在浏览器的cookie中，当用户再次登录时，会获得对应的sessionid，然后将sessionid发送到服务端请求登录，服务端在内存中找到对应的sessionid，完成登录，如果找不到，返回登录页面。</p><h3 id="97、http-响应码-301-和-302-代表的是什么？有什么区别？"><a href="#97、http-响应码-301-和-302-代表的是什么？有什么区别？" class="headerlink" title="97、http 响应码 301 和 302 代表的是什么？有什么区别？"></a>97、http 响应码 301 和 302 代表的是什么？有什么区别？</h3><ol><li>301和302状态码都表示重定向，当浏览器拿到服务器返回的这个状态码后悔自动跳转到一个新的URL地址。</li><li>301代表永久性重定向，旧地址被永久移除，客户端向新地址发送请求。</li><li>302代表暂时性重定向，旧地址还在，客户端继续向旧地址发送请求。</li><li>303代表暂时性重定向，重定向到新地址时，必须使用GET方法请求新地址。</li><li>307代表暂时性重定向，与302的区别在于307不允许从POST改为GET。</li><li>307代表永久性重定向，与301的区别在于308不允许从POST改为GET。</li></ol><h3 id="98、简述-tcp-和-udp的区别？"><a href="#98、简述-tcp-和-udp的区别？" class="headerlink" title="98、简述 tcp 和 udp的区别？"></a>98、简述 tcp 和 udp的区别？</h3><ol><li>TCP是传输控制协议，UDP是用户数据表协议；</li><li>TCP长连接，UDP无连接；</li><li>UDP程序结构较简单，只需发送，无须接收；</li><li>TCP可靠，保证数据正确性、顺序性；UDP不可靠，可能丢数据；</li><li>TCP适用于少量数据，UDP适用于大量数据传输；</li><li>TCP速度慢，UDP速度快；</li></ol><h3 id="99、tcp-为什么要三次握手，两次不行吗？为什么？"><a href="#99、tcp-为什么要三次握手，两次不行吗？为什么？" class="headerlink" title="99、tcp 为什么要三次握手，两次不行吗？为什么？"></a>99、tcp 为什么要三次握手，两次不行吗？为什么？</h3><p>因为客户端和服务端都要确认连接，①客户端请求连接服务端；②针对客户端的请求确认应答，并请求建立连接；③针对服务端的请求确认应答，建立连接；</p><p>两次无法确保A能收到B的数据；</p><h3 id="100、OSI-的七层模型都有哪些？"><a href="#100、OSI-的七层模型都有哪些？" class="headerlink" title="100、OSI 的七层模型都有哪些？"></a>100、OSI 的七层模型都有哪些？</h3><p><img src="https://img-blog.csdnimg.cn/20210801175909518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><h3 id="101、get-和-post-请求有哪些区别？"><a href="#101、get-和-post-请求有哪些区别？" class="headerlink" title="101、get 和 post 请求有哪些区别？"></a>101、get 和 post 请求有哪些区别？</h3><ol><li>get请求参数是连接在url后面的,而post请求参数是存放在requestbody内的；</li><li>get请求因为浏览器对url长度有限制，所以参数个数有限制，而post请求参数个数没有限制；</li><li>因为get请求参数暴露在url上,所以安全方面post比get更加安全；</li><li>get请求只能进行url编码,而post请求可以支持多种编码方式；</li><li>get请求参数会保存在浏览器历史记录内,post请求并不会；</li><li>get请求浏览器会主动cache,post并不会,除非主动设置；</li><li>get请求产生1个tcp数据包,post请求产生2个tcp数据包；</li><li>在浏览器进行回退操作时,get请求是无害的,而post请求则会重新请求一次；</li><li>浏览器在发送get请求时会将header和data一起发送给服务器,服务器返回200状态码,而在发送post请求时,会先将header发送给服务器,服务器返回100,之后再将data发送给服务器,服务器返回200 OK；</li></ol><h3 id="102、什么是-XSS-攻击，如何避免？"><a href="#102、什么是-XSS-攻击，如何避免？" class="headerlink" title="102、什么是 XSS 攻击，如何避免？"></a>102、什么是 XSS 攻击，如何避免？</h3><p>xss(Cross Site Scripting)，即跨站脚本攻击，是一种常见于web应用程序中的计算机安全漏洞。指的是在用户浏览器上，在渲染DOM树的时候，执行了不可预期的JS脚本，从而发生了安全问题。</p><p>XSS就是通过在用户端注入恶意的可运行脚本，若服务端对用户的输入不进行处理，直接将用户的输入输出到浏览器，然后浏览器将会执行用户注入的脚本。 所以XSS攻击的核心就是浏览器渲染DOM的时候将文本信息解析成JS脚本从而引发JS脚本注入，那么XSS攻击的防御手段就是基于浏览器渲染这一步去做防御。只要我们使用HTML编码将浏览器需要渲染的信息编码后，浏览器在渲染DOM元素的时候，会自动解码需要渲染的信息，将上述信息解析成字符串而不是JS脚本，这就是我们防御XSS攻击的核心想法。</p><p>预防：</p><p>1、获取用户的输入，不用innerHtml,用innerText.</p><p>2、对用户的输入进行过滤，如对&amp; &lt; &gt; “ ‘ /等进行转义；</p><h3 id="103、什么是-CSRF-攻击，如何避免？"><a href="#103、什么是-CSRF-攻击，如何避免？" class="headerlink" title="103、什么是 CSRF 攻击，如何避免？"></a>103、什么是 CSRF 攻击，如何避免？</h3><p>跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</p><p>1、攻击细节</p><p>跨站请求攻击，简单地说，是攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并运行一些操作（如发邮件，发消息，甚至财产操作如转账和购买商品）。由于浏览器曾经认证过，所以被访问的网站会认为是真正的用户操作而去运行。这利用了web中用户身份验证的一个漏洞：简单的身份验证只能保证请求发自某个用户的浏览器，却不能保证请求本身是用户自愿发出的。</p><p>例子</p><p>假如一家银行用以运行转账操作的URL地址如下：<a href="http://www.examplebank.com/withdraw?account=AccoutName&amp;amount=1000&amp;for=PayeeName">http://www.examplebank.com/withdraw?account=AccoutName&amp;amount=1000&amp;for=PayeeName</a></p><p>那么，一个恶意攻击者可以在另一个网站上放置如下代码： <img src="http://www.examplebank.com/withdraw?account=Alice&amp;amount=1000&amp;for=Badman"></p><p>如果有账户名为Alice的用户访问了恶意站点，而她之前刚访问过银行不久，登录信息尚未过期，那么她就会损失1000资金。</p><p>这种恶意的网址可以有很多种形式，藏身于网页中的许多地方。此外，攻击者也不需要控制放置恶意网址的网站。例如他可以将这种地址藏在论坛，博客等任何用户生成信息的网站中。这意味着如果服务端没有合适的防御措施的话，用户即使访问熟悉的可信网站也有受攻击的危险。</p><p>透过例子能够看出，攻击者并不能通过CSRF攻击来直接获取用户的账户控制权，也不能直接窃取用户的任何信息。他们能做到的，是欺骗用户浏览器，让其以用户的名义运行操作。</p><p>2、防御措施</p><p>检查Referer字段</p><p>HTTP头中有一个Referer字段，这个字段用以标明请求来源于哪个地址。在处理敏感数据请求时，通常来说，Referer字段应和请求的地址位于同一域名下。以上文银行操作为例，Referer字段地址通常应该是转账按钮所在的网页地址，应该也位于<a href="http://www.examplebank.com之下.而如果是csrf攻击传来的请求,referer字段会是包含恶意网址的地址,不会位于www.examplebank.com之下,这时候服务器就能识别出恶意的访问./">www.examplebank.com之下。而如果是CSRF攻击传来的请求，Referer字段会是包含恶意网址的地址，不会位于www.examplebank.com之下，这时候服务器就能识别出恶意的访问。</a></p><p>这种办法简单易行，工作量低，仅需要在关键访问处增加一步校验。但这种办法也有其局限性，因其完全依赖浏览器发送正确的Referer字段。虽然http协议对此字段的内容有明确的规定，但并无法保证来访的浏览器的具体实现，亦无法保证浏览器没有安全漏洞影响到此字段。并且也存在攻击者攻击某些浏览器，篡改其Referer字段的可能。</p><p>3、添加校验token</p><p>由于CSRF的本质在于攻击者欺骗用户去访问自己设置的地址，所以如果要求在访问敏感数据请求时，要求用户浏览器提供不保存在cookie中，并且攻击者无法伪造的数据作为校验，那么攻击者就无法再运行CSRF攻击。这种数据通常是窗体中的一个数据项。服务器将其生成并附加在窗体中，其内容是一个伪随机数。当客户端通过窗体提交请求时，这个伪随机数也一并提交上去以供校验。正常的访问时，客户端浏览器能够正确得到并传回这个伪随机数，而通过CSRF传来的欺骗性攻击中，攻击者无从事先得知这个伪随机数的值，服务端就会因为校验token的值为空或者错误，拒绝这个可疑请求。</p><h3 id="104、如何实现跨域？说一下-JSONP-实现原理？"><a href="#104、如何实现跨域？说一下-JSONP-实现原理？" class="headerlink" title="104、如何实现跨域？说一下 JSONP 实现原理？"></a>104、如何实现跨域？说一下 JSONP 实现原理？</h3><p>1、<a href="https://blog.csdn.net/guorui_java/article/details/107345499" title="jsonp原理详解——终于搞清楚jsonp是啥了">jsonp原理详解——终于搞清楚jsonp是啥了</a></p><p>2、最流行的跨域方案cors</p><p>cors是目前主流的跨域解决方案，跨域资源共享(CORS) 是一种机制，它使用额外的 HTTP 头来告诉浏览器 让运行在一个 origin (domain) 上的Web应用被准许访问来自不同源服务器上的指定的资源。当一个资源从与该资源本身所在的服务器不同的域、协议或端口请求一个资源时，资源会发起一个跨域 HTTP 请求。</p><p>3、最方便的跨域方案Nginx</p><p>nginx是一款极其强大的web服务器，其优点就是轻量级、启动快、高并发。</p><p>现在的新项目中nginx几乎是首选，我们用node或者java开发的服务通常都需要经过nginx的反向代理。</p><p>反向代理的原理很简单，即所有客户端的请求都必须先经过nginx的处理，nginx作为代理服务器再讲请求转发给node或者java服务，这样就规避了同源策略。</p><h3 id="105、websocket应用的是哪个协议"><a href="#105、websocket应用的是哪个协议" class="headerlink" title="105、websocket应用的是哪个协议"></a>105、websocket应用的是哪个协议</h3><p>WebSocket是一个允许Web应用程序(通常指浏览器)与服务器进行双向通信的协议。HTML5的WebSocket API主要是为浏览器端提供了一个基于TCP协议实现全双工通信的方法。</p><p>WebSocket优势： 浏览器和服务器只需要要做一个握手的动作，在建立连接之后，双方可以在任意时刻，相互推送信息。同时，服务器与客户端之间交换的头信息很小。</p><h3 id="106、说一下-tcp-粘包是怎么产生的？"><a href="#106、说一下-tcp-粘包是怎么产生的？" class="headerlink" title="106、说一下 tcp 粘包是怎么产生的？"></a>106、说一下 tcp 粘包是怎么产生的？</h3><p>发送方需要等缓冲区满才能发送出去，造成粘包；<br>接收方不及时接收缓冲区的包，造成粘包；</p><h3 id="107、请列举出在-JDK-中几个常用的设计模式？"><a href="#107、请列举出在-JDK-中几个常用的设计模式？" class="headerlink" title="107、请列举出在 JDK 中几个常用的设计模式？"></a>107、请列举出在 JDK 中几个常用的设计模式？</h3><p>1、单例模式</p><p>作用：保证类只有一个实例。</p><p>JDK中体现：Runtime类。</p><p>2、静态工厂模式</p><p>作用：代替构造函数创建对象，方法名比构造函数清晰。</p><p>JDK中体现：Integer.valueOf、Class.forName</p><p>3、抽象工厂</p><p>作用：创建某一种类的对象。</p><p>JDK中体现：Java.sql包。</p><p>4、原型模式</p><p>clone()；</p><p>原型模式的本质是拷贝原型来创建新的对象，拷贝是比new更快的创建对象的方法，当需要大批量创建新对象而且都是同一个类的对象的时候考虑使用原型模式。</p><p>一般的克隆只是浅拷贝（对象的hash值不一样，但是对象里面的成员变量的hash值是一样的）。</p><p>有些场景需要深拷贝，这时我们就要重写clone方法，以ArrayList为例：</p><p>5、适配器模式</p><p>作用：使不兼容的接口相容。</p><p>JDK中体现：InputStream、OutputStream。</p><p>6、装饰器模式</p><p>作用：为类添加新的功能，防止类继承带来的类爆炸。</p><p>JDK中体现：io类、Collections、List。</p><p>7、外观模式</p><p>作用：封装一组交互类，一直对外提供接口。</p><p>JDK中体现：logging包。</p><p>8、享元模式</p><p>作用：共享对象、节省内存。</p><p>JDK中体现：Integer.valueOf、String常量池。</p><p>9、代理模式</p><p>作用：</p><p>（1）透明调用被代理对象，无须知道复杂实现细节；</p><p>（2）增加被代理类的功能；</p><p>JDK中体现：动态代理。</p><p>10、迭代器模式</p><p>作用：将集合的迭代和集合本身分离。</p><p>JDK中体现：Iterator</p><p>11、命令模式</p><p>作用：封装操作，使接口一致。</p><p>JDK中体现：Runable、Callable、ThreadPoolExecutor。</p><h3 id="108、什么是设计模式？你是否在你的代码里面使用过任何设计模式？"><a href="#108、什么是设计模式？你是否在你的代码里面使用过任何设计模式？" class="headerlink" title="108、什么是设计模式？你是否在你的代码里面使用过任何设计模式？"></a>108、什么是设计模式？你是否在你的代码里面使用过任何设计模式？</h3><p>1、什么是设计模式？</p><p>设计模式是解决软件开发某些特定问题而提出的一些解决方案，也可以理解为解决问题的一些固定思路。</p><p>通过设计模式可以帮助我们增强代码的可复用性、可扩展性、灵活性。</p><p>我们使用设计模式的最终目的是实现代码的高内聚、低耦合。</p><p>2、设计模式的七大原则</p><ol><li>单一职责原则</li><li>接口隔离原则</li><li>依赖倒转原则</li><li>里式替换原则</li><li>开闭原则</li><li>迪米特法则</li><li>合成复用原则</li></ol><p>3、你是否在你的代码里面使用过任何设计模式？</p><p>（1）单例模式</p><p>JDK种的runtime，Spring种的singeton。</p><p>（2）简单工厂模式</p><p>Spring的BeanFactory，根据传入一个唯一标识来获得bean对象。</p><p>（3）原型模式</p><p>clone()</p><p>（4）代理模式</p><p>Spring的AOP中，Spring实现AOP功能的原理就是代理模式，①JDK动态代理。②CGLIB动态代理，使用Advice（通知）对类进行方法级别的切面增强。</p><p>（5）装饰器模式</p><p>为类添加新的功能，防止类爆炸；</p><p>IO流、数据源包装，Spring中用到的装饰器模式表现在Wrapper。</p><h3 id="109、Java-中什么叫单例设计模式？请用-Java-写出线程安全的单例模式"><a href="#109、Java-中什么叫单例设计模式？请用-Java-写出线程安全的单例模式" class="headerlink" title="109、Java 中什么叫单例设计模式？请用 Java 写出线程安全的单例模式"></a>109、Java 中什么叫单例设计模式？请用 Java 写出线程安全的单例模式</h3><ol><li>保证程序只有一个对象的实例，叫做单例模式；</li><li>内部类的方式实现单例模式，是线程安全的；</li><li>双重验证方式实现单例模式也是线程安全的；</li></ol><h3 id="110、在-Java-中，什么叫观察者设计模式（observer-design-pattern）？"><a href="#110、在-Java-中，什么叫观察者设计模式（observer-design-pattern）？" class="headerlink" title="110、在 Java 中，什么叫观察者设计模式（observer design pattern）？"></a>110、在 Java 中，什么叫观察者设计模式（observer design pattern）？</h3><p>1、观察者模式是一种一对多的依赖关系，让多个观察者同时监听某一主题对象。当这个主题对象发生变化时，会通知所有观察者对象，使它们能够自动更新自己。</p><p>2、JAVA提供的对观察者模式的支持</p><p>在JAVA语言的java.util库里面，提供了一个Observable类以及一个Observer接口，构成JAVA语言对观察者模式的支持。</p><p>（1）Observer接口</p><p>这个接口只定义了一个方法，即update()方法，当被观察者对象的状态发生变化时，被观察者对象的notifyObservers()方法就会调用这一方法。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Observer</span> {</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Observable o, Object arg)</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>（2）Observable类</p><p>被观察者类都是java.util.Observable类的子类。java.util.Observable提供公开的方法支持观察者对象，这些方法中有两个对Observable的子类非常重要：一个是setChanged()，另一个是notifyObservers()。第一方法setChanged()被调用之后会设置一个内部标记变量，代表被观察者对象的状态发生了变化。第二个是notifyObservers()，这个方法被调用时，会调用所有登记过的观察者对象的update()方法，使这些观察者对象可以更新自己。</p><h3 id="111、使用工厂模式最主要的好处是什么？在哪里使用？"><a href="#111、使用工厂模式最主要的好处是什么？在哪里使用？" class="headerlink" title="111、使用工厂模式最主要的好处是什么？在哪里使用？"></a>111、使用工厂模式最主要的好处是什么？在哪里使用？</h3><p>1、工厂模式好处</p><ul><li>良好的封装性、代码结构清晰；</li><li>扩展性好，如果想增加一个产品，只需扩展一个工厂类即可；</li><li>典型的解耦框架；</li></ul><p>2、在哪里使用？</p><ul><li>需要生成对象的地方；</li><li>不同数据库的访问；</li></ul><h3 id="112、请解释自动装配模式的区别？"><a href="#112、请解释自动装配模式的区别？" class="headerlink" title="112、请解释自动装配模式的区别？"></a>112、请解释自动装配模式的区别？</h3><p>有五种自动装配的方式，可以用来指导 Spring 容器用自动装配方式来进行依赖注入。</p><p>1、no</p><p>默认的方式是不进行自动装配，通过显式设置 ref 属性来进行装配。第 402 页 共 485 页</p><p>2、byName</p><p>通过参数名 自动装配，Spring 容器在配置文件中发现 bean</p><p>的 autowire 属性被设置成 byname，之后容器试图匹配、装配和该 bean 的属</p><p>性具有相同名字的 bean。</p><p>3、byType:</p><p>通过参数类型自动装配，Spring 容器在配置文件中发现 bean</p><p>的 autowire 属性被设置成 byType，之后容器试图匹配、装配和该 bean 的属</p><p>性具有相同类型的 bean。如果有多个 bean 符合条件，则抛出错误。</p><p>4、constructor</p><p>这个方式类似于 byType， 但是要提供给构造器参数，如</p><p>果没有确定的带参数的构造器参数类型，将会抛出异常。</p><p>5、autodetect</p><p>首先尝试使用 constructor 来自动装配，如果无法工作，</p><p>则使用 byType 方式。</p><h3 id="113、举一个用-Java-实现的装饰模式-decorator-design-pattern-？它是作用于对象层次还是类层次？"><a href="#113、举一个用-Java-实现的装饰模式-decorator-design-pattern-？它是作用于对象层次还是类层次？" class="headerlink" title="113、举一个用 Java 实现的装饰模式(decorator design pattern)？它是作用于对象层次还是类层次？"></a>113、举一个用 Java 实现的装饰模式(decorator design pattern)？它是作用于对象层次还是类层次？</h3><p>在Java IO中运用了装饰器模式，inputStream作为抽象类，其下有几个实现类，表示从不同的数据源输入：</p><ol><li>byteArrayInputStream</li><li>fileInputStream</li><li>StringBufferInputStream</li><li>PipedInputStream，从管道产生输入；</li><li>SequenceInputStream，可将其他流收集合并到一个流内；</li></ol><p>FilterInputStream作为装饰器在JDK中是一个普通类，其下面有多个具体装饰器比如BufferedInputStream、DataInputStream等。</p><p>FilterInputStream内部封装了基础构件：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">volatile</span> InputStream in;</span><br></pre></td></tr></tbody></table></figure><p>而BufferedInputStream在调用其read()读取数据时会委托基础构件来进行更底层的操作，而它自己所起的装饰作用就是缓冲，在源码中可以很清楚的看到这一切。</p><h3 id="114、什么是-Spring-框架？Spring-框架有哪些主要模块？"><a href="#114、什么是-Spring-框架？Spring-框架有哪些主要模块？" class="headerlink" title="114、什么是 Spring 框架？Spring 框架有哪些主要模块？"></a>114、什么是 Spring 框架？Spring 框架有哪些主要模块？</h3><p>Spring是一个控制反转和面向切面的容器框架。</p><p>Spring有七大功能模块：</p><p>1、Core</p><p>Core模块是Spring的核心类库，Core实现了IOC功能。</p><p>2、AOP</p><p>Apring AOP模块是Spring的AOP库，提供了AOP（拦截器）机制，并提供常见的拦截器，供用户自定义和配置。</p><p>3、orm</p><p>提供对常用ORM框架的管理和支持，hibernate、mybatis等。</p><p>4、Dao</p><p>Spring提供对JDBC的支持，对JDBC进行封装。</p><p>5、Web</p><p>对Struts2的支持。</p><p>6、Context</p><p>Context模块提供框架式的Bean的访问方式，其它程序可以通过Context访问Spring的Bean资源，相当于资源注入。</p><p>7、MVC</p><p>MVC模块为spring提供了一套轻量级的MVC实现，即Spring MVC。</p><h3 id="115、使用-Spring-框架能带来哪些好处？"><a href="#115、使用-Spring-框架能带来哪些好处？" class="headerlink" title="115、使用 Spring 框架能带来哪些好处？"></a>115、使用 Spring 框架能带来哪些好处？</h3><p>1、轻量级框架、容器</p><p>Spring是一个容器，管理对象的生命周期和配置。基于一个可配置原型prototype，你的bean可以使单利的，也可以每次需要时都生成一个新的实例。</p><p>2、控制反转IOC</p><p>Spring通过控制反转实现松耦合。</p><p>3、支持AOP</p><p>Spring提供对AOP的支持，它允许将一些通用任务，如安全、事务、日志等进行集中式处理，从而提高了程序的复用性。</p><p>4、轻量级框架</p><p>5、方便测试</p><p>Spring提供Junit4的支持，可以通过注解方便测试spring程序。</p><p>6、对Java中很多API进行了封装</p><p>7、方便集成各种优秀框架</p><p>如Struts、hibernate、mybstis。</p><p>8、支持声明式事务处理</p><p>只需通过配置就可以完成对事务的管理，而无须手动编程。</p><h3 id="116、Spring-IOC、AOP举例说明"><a href="#116、Spring-IOC、AOP举例说明" class="headerlink" title="116、Spring IOC、AOP举例说明"></a>116、Spring IOC、AOP举例说明</h3><p>1、IOC理论的背景</p><p>我们都知道，在采用面向对象方法设计的软件系统中，它的底层实现都是由N个对象组成的，所有的对象通过彼此的合作，最终实现系统的业务逻辑。</p><p>如果我们打开机械式手表的后盖，就会看到与上面类似的情形，各个齿轮分别带动时针、分针和秒针顺时针旋转，从而在表盘上产生正确的时间。图1中描述的就是这样的一个齿轮组，它拥有多个独立的齿轮，这些齿轮相互啮合在一起，协同工作，共同完成某项任务。我们可以看到，在这样的齿轮组中，如果有一个齿轮出了问题，就可能会影响到整个齿轮组的正常运转。<br>齿轮组中齿轮之间的啮合关系,与软件系统中对象之间的耦合关系非常相似。对象之间的耦合关系是无法避免的，也是必要的，这是协同工作的基础。现在，伴随着工业级应用的规模越来越庞大，对象之间的依赖关系也越来越复杂，经常会出现对象之间的多重依赖性关系，因此，架构师和设计师对于系统的分析和设计，将面临更大的挑战。对象之间耦合度过高的系统，必然会出现牵一发而动全身的情形。</p><p>耦合关系不仅会出现在对象与对象之间，也会出现在软件系统的各模块之间，以及软件系统和硬件系统之间。如何降低系统之间、模块之间和对象之间的耦合度，是软件工程永远追求的目标之一。为了解决对象之间的耦合度过高的问题，软件专家Michael Mattson提出了IOC理论，用来实现对象之间的”解耦”，目前这个理论已经被成功地应用到实践当中，很多的J2EE项目均采用了IOC框架产品Spring。</p><p>2、什么是控制反转</p><p>IOC是Inversion of Control的缩写，多数书籍翻译成”控制反转”，还有些书籍翻译成为”控制反向”或者”控制倒置”。<br>1996年，Michael Mattson在一篇有关探讨面向对象框架的文章中，首先提出了IOC 这个概念。对于面向对象设计及编程的基本思想，前面我们已经讲了很多了，不再赘述，简单来说就是把复杂系统分解成相互合作的对象，这些对象类通过封装以后，内部实现对外部是透明的，从而降低了解决问题的复杂度，而且可以灵活地被重用和扩展。IOC理论提出的观点大体是这样的：借助于”第三方”实现具有依赖关系的对象之间的解耦，如下图：</p><p><img src="https://img-blog.csdnimg.cn/20210801180652362.jpg"></p><p>大家看到了吧，由于引进了中间位置的”第三方”，也就是IOC容器，使得A、B、C、D这4个对象没有了耦合关系，齿轮之间的传动全部依靠”第三方”了，全部对象的控制权全部上缴给”第三方”IOC容器，所以，IOC容器成了整个系统的关键核心，它起到了一种类似”粘合剂”的作用，把系统中的所有对象粘合在一起发挥作用，如果没有这个”粘合剂”，对象与对象之间会彼此失去联系，这就是有人把IOC容器比喻成”粘合剂”的由来。<br>我们再来做个试验：把上图中间的IOC容器拿掉，然后再来看看这套系统（拿掉IoC容器后的系统）：</p><p><img src="https://img-blog.csdnimg.cn/20210801180714819.jpg"></p><p>我们现在看到的画面，就是我们要实现整个系统所需要完成的全部内容。这时候，A、B、C、D这4个对象之间已经没有了耦合关系，彼此毫无联系，这样的话，当你在实现A的时候，根本无须再去考虑B、C和D了，对象之间的依赖关系已经降低到了最低程度。所以，如果真能实现IOC容器，对于系统开发而言，这将是一件多么美好的事情，参与开发的每一成员只要实现自己的类就可以了，跟别人没有任何关系！<br>我们再来看看，控制反转(IOC)到底为什么要起这么个名字？我们来对比一下：<br>软件系统在没有引入IOC容器之前，如图1所示，对象A依赖于对象B，那么对象A在初始化或者运行到某一点的时候，自己必须主动去创建对象B或者使用已经创建的对象B。无论是创建还是使用对象B，控制权都在自己手上。<br>软件系统在引入IOC容器之后，这种情形就完全改变了，如图3所示，由于IOC容器的加入，对象A与对象B之间失去了直接联系，所以，当对象A运行到需要对象B的时候，IOC容器会主动创建一个对象B注入到对象A需要的地方。<br>通过前后的对比，我们不难看出来：对象A获得依赖对象B的过程,由主动行为变为了被动行为，控制权颠倒过来了，这就是”控制反转”这个名称的由来。</p><p>3、IOC的别名：依赖注入（DI）</p><p>2004年，Martin Fowler探讨了同一个问题，既然IOC是控制反转，那么到底是”哪些方面的控制被反转了呢？”，经过详细地分析和论证后，他得出了答案：”获得依赖对象的过程被反转了”。控制被反转之后，获得依赖对象的过程由自身管理变为了由IOC容器主动注入。于是，他给”控制反转”取了一个更合适的名字叫做”依赖注入（Dependency Injection）”。他的这个答案，实际上给出了实现IOC的方法：注入。所谓依赖注入，就是由IOC容器在运行期间，动态地将某种依赖关系注入到对象之中。</p><p>所以，依赖注入(DI)和控制反转(IOC)是从不同的角度的描述的同一件事情，就是指通过引入IOC容器，利用依赖关系注入的方式，实现对象之间的解耦。<br>我们举一个生活中的例子，来帮助理解依赖注入的过程。大家对USB接口和USB设备应该都很熟悉吧，USB为我们使用电脑提供了很大的方便，现在有很多的外部设备都支持USB接口。</p><p><img src="https://img-blog.csdnimg.cn/20210801180744625.jpg"></p><p>现在，我们利用电脑主机和USB接口来实现一个任务：从外部USB设备读取一个文件。<br>电脑主机读取文件的时候，它一点也不会关心USB接口上连接的是什么外部设备，而且它确实也无须知道。它的任务就是读取USB接口，挂接的外部设备只要符合USB接口标准即可。所以，如果我给电脑主机连接上一个U盘，那么主机就从U盘上读取文件；如果我给电脑主机连接上一个外置硬盘，那么电脑主机就从外置硬盘上读取文件。挂接外部设备的权力由我作主，即控制权归我，至于USB接口挂接的是什么设备，电脑主机是决定不了，它只能被动的接受。电脑主机需要外部设备的时候，根本不用它告诉我，我就会主动帮它挂上它想要的外部设备，你看我的服务是多么的到位。这就是我们生活中常见的一个依赖注入的例子。在这个过程中，我就起到了IOC容器的作用。<br>通过这个例子,依赖注入的思路已经非常清楚：当电脑主机读取文件的时候，我就把它所要依赖的外部设备，帮他挂接上。整个外部设备注入的过程和一个被依赖的对象在系统运行时被注入另外一个对象内部的过程完全一样。<br>我们把依赖注入应用到软件系统中，再来描述一下这个过程：<br>对象A依赖于对象B,当对象 A需要用到对象B的时候，IOC容器就会立即创建一个对象B送给对象A。IOC容器就是一个对象制造工厂，你需要什么，它会给你送去，你直接使用就行了，而再也不用去关心你所用的东西是如何制成的，也不用关心最后是怎么被销毁的，这一切全部由IOC容器包办。<br>在传统的实现中，由程序内部代码来控制组件之间的关系。我们经常使用new关键字来实现两个组件之间关系的组合，这种实现方式会造成组件之间耦合。IOC很好地解决了该问题，它将实现组件间关系从程序内部提到外部容器，也就是说由容器在运行期将组件间的某种依赖关系动态注入组件中。</p><p>4、IOC为我们带来了什么好处</p><p>我们还是从USB的例子说起，使用USB外部设备比使用内置硬盘，到底带来什么好处？<br>第一、USB设备作为电脑主机的外部设备，在插入主机之前，与电脑主机没有任何的关系，只有被我们连接在一起之后，两者才发生联系，具有相关性。所以，无论两者中的任何一方出现什么的问题，都不会影响另一方的运行。这种特性体现在软件工程中，就是可维护性比较好，非常便于进行单元测试，便于调试程序和诊断故障。代码中的每一个Class都可以单独测试，彼此之间互不影响，只要保证自身的功能无误即可，这就是组件之间低耦合或者无耦合带来的好处。<br>第二、USB设备和电脑主机的之间无关性，还带来了另外一个好处，生产USB设备的厂商和生产电脑主机的厂商完全可以是互不相干的人，各干各事，他们之间唯一需要遵守的就是USB接口标准。这种特性体现在软件开发过程中，好处可是太大了。每个开发团队的成员都只需要关心实现自身的业务逻辑，完全不用去关心其它的人工作进展，因为你的任务跟别人没有任何关系，你的任务可以单独测试，你的任务也不用依赖于别人的组件，再也不用扯不清责任了。所以，在一个大中型项目中，团队成员分工明确、责任明晰，很容易将一个大的任务划分为细小的任务，开发效率和产品质量必将得到大幅度的提高。<br>第三、同一个USB外部设备可以插接到任何支持USB的设备，可以插接到电脑主机，也可以插接到DV机，USB外部设备可以被反复利用。在软件工程中，这种特性就是可复用性好，我们可以把具有普遍性的常用组件独立出来，反复利用到项目中的其它部分，或者是其它项目，当然这也是面向对象的基本特征。显然，IOC不仅更好地贯彻了这个原则，提高了模块的可复用性。符合接口标准的实现，都可以插接到支持此标准的模块中。<br>第四、同USB外部设备一样，模块具有热插拔特性。IOC生成对象的方式转为外置方式，也就是把对象生成放在配置文件里进行定义，这样，当我们更换一个实现子类将会变得很简单，只要修改配置文件就可以了，完全具有热插拨的特性。<br>以上几点好处，难道还不足以打动我们，让我们在项目开发过程中使用IOC框架吗？</p><p>5、IOC容器的技术剖析</p><p>IOC中最基本的技术就是”反射(Reflection)”编程，目前.Net C#、Java和PHP5等语言均支持，其中PHP5的技术书籍中，有时候也被翻译成”映射”。有关反射的概念和用法，大家应该都很清楚，通俗来讲就是根据给出的类名（字符串方式）来动态地生成对象。这种编程方式可以让对象在生成时才决定到底是哪一种对象。反射的应用是很广泛的，很多的成熟的框架，比如象Java中的Hibernate、Spring框架，.Net中 NHibernate、Spring.Net框架都是把”反射”做为最基本的技术手段。<br>反射技术其实很早就出现了，但一直被忽略，没有被进一步的利用。当时的反射编程方式相对于正常的对象生成方式要慢至少得10倍。现在的反射技术经过改良优化，已经非常成熟，反射方式生成对象和通常对象生成方式，速度已经相差不大了，大约为1-2倍的差距。<br>我们可以把IOC容器的工作模式看做是工厂模式的升华，可以把IOC容器看作是一个工厂，这个工厂里要生产的对象都在配置文件中给出定义，然后利用编程语言的的反射编程，根据配置文件中给出的类名生成相应的对象。从实现来看，IOC是把以前在工厂方法里写死的对象生成代码，改变为由配置文件来定义，也就是把工厂和对象生成这两者独立分隔开来，目的就是提高灵活性和可维护性。</p><p>6、IOC容器的一些产品</p><p>Sun ONE技术体系下的IOC容器有：轻量级的有Spring、Guice、Pico Container、Avalon、HiveMind；重量级的有EJB；不轻不重的有JBoss，Jdon等等。Spring框架作为Java开发中SSH(Struts、Spring、Hibernate)三剑客之一，大中小项目中都有使用，非常成熟，应用广泛，EJB在关键性的工业级项目中也被使用，比如某些电信业务。<br>.Net技术体系下的IOC容器有：Spring.Net、Castle等等。Spring.Net是从Java的Spring移植过来的IOC容器，Castle的IOC容器就是Windsor部分。它们均是轻量级的框架，比较成熟，其中Spring.Net已经被逐渐应用于各种项目中。</p><p>7、使用IOC框架应该注意什么</p><p>使用IOC框架产品能够给我们的开发过程带来很大的好处，但是也要充分认识引入IOC框架的缺点，做到心中有数，杜绝滥用框架。</p><p>（1）软件系统中由于引入了第三方IOC容器，生成对象的步骤变得有些复杂，本来是两者之间的事情，又凭空多出一道手续，所以，我们在刚开始使用IOC框架的时候，会感觉系统变得不太直观。所以，引入了一个全新的框架，就会增加团队成员学习和认识的培训成本，并且在以后的运行维护中，还得让新加入者具备同样的知识体系。</p><p>（2）由于IOC容器生成对象是通过反射方式，在运行效率上有一定的损耗。如果你要追求运行效率的话，就必须对此进行权衡。</p><p>（3）、具体到IOC框架产品(比如：Spring)来讲，需要进行大量的配制工作，比较繁琐，对于一些小的项目而言，客观上也可能加大一些工作成本。</p><p>（4）IOC框架产品本身的成熟度需要进行评估，如果引入一个不成熟的IOC框架产品，那么会影响到整个项目，所以这也是一个隐性的风险。<br>我们大体可以得出这样的结论：一些工作量不大的项目或者产品，不太适合使用IOC框架产品。另外，如果团队成员的知识能力欠缺，对于IOC框架产品缺乏深入的理解，也不要贸然引入。最后，特别强调运行效率的项目或者产品，也不太适合引入IOC框架产品，象WEB2.0网站就是这种情况。</p><h3 id="117、什么是控制反转-IOC-？什么是依赖注入？"><a href="#117、什么是控制反转-IOC-？什么是依赖注入？" class="headerlink" title="117、什么是控制反转(IOC)？什么是依赖注入？"></a>117、什么是控制反转(IOC)？什么是依赖注入？</h3><p>借助Spring实现具有依赖关系的对象之间的解耦。</p><p>对象A运行需要对象B，由主动创建变为IOC容器注入，这便是控制反转。</p><p>获得依赖对象的过程被反转了，获取依赖对象的过程由自身创建变为由IOC容器注入，这便是依赖注入。</p><h3 id="118、BeanFactory-和-ApplicationContext-有什么区别？"><a href="#118、BeanFactory-和-ApplicationContext-有什么区别？" class="headerlink" title="118、BeanFactory 和 ApplicationContext 有什么区别？"></a>118、BeanFactory 和 ApplicationContext 有什么区别？</h3><p>1、BeanFactory是Spring的最底层接口，包含bean的定义，管理bean的加载，实例化，控制bean的生命周期，特点是每次获取对象时才会创建对象。</p><p>ApplicationContext是BeanFactory的子接口，拥有BeanFactory的全部功能，并且扩展了很多高级特性，每次容器启动时就会创建所有的对象。</p><ol><li>ApplicationContext的额外功能：</li><li>继承MessageSource，支持国际化；</li><li>统一的资源文件访问方式；</li><li>提供在监听器中注册bean；</li><li>同时加载过个配置文件；</li><li>载入多个（有继承关系）上下文，使得每个上下文都专注于一个特定的层次，比如应用的web层；</li></ol><p>2、BeanFactory通常以编程的方式被创建，ApplicationContext可以以声明的方式创建，如使用ContextLoader。</p><p>3、BeanFactory 和 ApplicationContext都支持BeanPostProcessor，BeanFactoryPostProcessor，但BeanFactory需要手动注册，ApplicationContext则是自动注册。</p><h3 id="119、什么是-JavaConfig？"><a href="#119、什么是-JavaConfig？" class="headerlink" title="119、什么是 JavaConfig？"></a>119、什么是 JavaConfig？</h3><p>JavaConfig是Spring3.0新增的概念，就是以注解的形式取代Spring中繁琐的xml文件。</p><p>JavaConfig结合了xml的解耦和java编译时检查的优点。</p><ol><li>@Configuration，表示这个类是配置类；</li><li>@ComponentScan，相当于xml的</li><li>@Bean，相当于xml的</li><li>@EnableWebMvc，相当于xml的</li><li>@ImportResource，相当于xml的</li><li>@PropertySource，用于读取properties配置文件；</li><li>@Profile，一般用于多环境配置，激活时可用@ActiveProfile(“dev”)注解；</li></ol><h3 id="120、什么是-ORM-框架？"><a href="#120、什么是-ORM-框架？" class="headerlink" title="120、什么是 ORM 框架？"></a>120、什么是 ORM 框架？</h3><p>ORM（Object-relational mapping），对象关系映射。</p><p>是为了解决面向对象与关系型数据库存在的不匹配问题。</p><p>ORM框架的优点：</p><ol><li>开发效率更高</li><li>数据访问更抽象、轻便</li><li>支持面向对象封装</li></ol><h3 id="121、Spring-有几种配置方式？"><a href="#121、Spring-有几种配置方式？" class="headerlink" title="121、Spring 有几种配置方式？"></a>121、Spring 有几种配置方式？</h3><p>1、xml配置文件</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>2、基于注解的方式</p><p>项目越来越大，基于xml配置太麻烦，Spring 2.x时代提供了声明bean的注解。</p><p>（1）Bean的定义</p><p>@Component、@Controller、@Service、@Repository。</p><p>（2）Bean的注入</p><p>@Autowire</p><p>3、基于Java的方式</p><p>Spring 3.x以后，可以通过Java代码装配Bean。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoConfig</span> {</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">zs</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Dog <span class="title function_">dog</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Bean</span>  <span class="comment">//两个狗</span></span><br><span class="line">    <span class="keyword">public</span> Dog <span class="title function_">haqi</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component("zs")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> {</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//get，set方法略</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>原来就是配置类啊，通过@Bean、@Component、getBean方式进行Bean的注册和发现。</p><h3 id="122、请解释-Spring-Bean-的生命周期？"><a href="#122、请解释-Spring-Bean-的生命周期？" class="headerlink" title="122、请解释 Spring Bean 的生命周期？"></a>122、请解释 Spring Bean 的生命周期？</h3><ol><li>通过构造器或工厂方法创建bean实例；</li><li>为bean的属性赋值；</li><li>调用bean的初始化方法；</li><li>使用bean；</li><li>当容器关闭时，调用bean的销毁方法；</li></ol><h3 id="123、Spring-Bean-的作用域之间有什么区别？-Spring容器中的bean可以分为5个范围："><a href="#123、Spring-Bean-的作用域之间有什么区别？-Spring容器中的bean可以分为5个范围：" class="headerlink" title="123、Spring Bean 的作用域之间有什么区别？ Spring容器中的bean可以分为5个范围："></a>123、Spring Bean 的作用域之间有什么区别？ Spring容器中的bean可以分为5个范围：</h3><ol><li>singleton：这种bean范围是默认的，这种范围确保不管接受多少请求，每个容器中只哟一个bean的实例，单例模式；</li><li>prototype：为每一个bean提供一个实例；</li><li>request：在请求bean范围内为每一个来自客户端的网络请求创建一个实例，在请求完毕后，bean会失效并被垃圾回收器回收；</li><li>session：为每个session创建一个实例，session过期后，bean会随之消失；</li><li>global-session：global-session和Portlet应用相关。当你的应用部署在Portlet容器中工作时，它包含很多portlet。如果你想要声明让所有的portlet公用全局的存储变量的话，那么全局变量需要存储在global-session中。</li></ol><h3 id="124、如何在-Spring-Boot-中禁用-Actuator-端点安全性？"><a href="#124、如何在-Spring-Boot-中禁用-Actuator-端点安全性？" class="headerlink" title="124、如何在 Spring Boot 中禁用 Actuator 端点安全性？"></a>124、如何在 Spring Boot 中禁用 Actuator 端点安全性？</h3><p>默认情况下，所有敏感的HTTP端点都是安全的，只有具有Actuator角色的用户才能访问它们。安全性是使用标准的HTTPServletRequest.isUserInRole方法实施的。我们可以使用management.security.enable = false来禁用安全性。只有在执行机构端点在防火墙后访问时，才建议禁用安全性。</p><h3 id="125、什么是-Spring-inner-beans？"><a href="#125、什么是-Spring-inner-beans？" class="headerlink" title="125、什么是 Spring inner beans？"></a>125、什么是 Spring inner beans？</h3><p>在Spring框架中，无论何时bean被使用时，当仅被调用一个属性。可以将这个bean声明为内部bean。内部bean可以用setter注入”属性”和构造方法注入”构造参数”的方式来实现。比如，在我们的应用程序中，一个Customer类引用了一个Person类，我们要做的是创建一个Person实例，然后再Customer内部使用。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> {</span><br><span class="line">    <span class="keyword">private</span> Person person;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="126、Spring-框架中的单例-Beans-是线程安全的么？"><a href="#126、Spring-框架中的单例-Beans-是线程安全的么？" class="headerlink" title="126、Spring 框架中的单例 Beans 是线程安全的么？"></a>126、Spring 框架中的单例 Beans 是线程安全的么？</h3><p>Spring框架并没有对单例bean进行任何多线程的封装处理。关于单例bean的线程安全和并发问题需要开发者自行去搞定。但实际上，大部分的Spring bean并没有可变的状态，所以在某种程度上说Spring的单例bean时线程安全的。如果你的bean有多种状态的话，比如view model，就需要自行保证线程安全啦。</p><p>最浅显的解决办法就是将多态bean的作用域由singleton变更为prototype。</p><h3 id="127、请解释-Spring-Bean-的自动装配？"><a href="#127、请解释-Spring-Bean-的自动装配？" class="headerlink" title="127、请解释 Spring Bean 的自动装配？"></a>127、请解释 Spring Bean 的自动装配？</h3><p>Spring支持IOC，自动装配不用类实例化，直接从bean容器中取。</p><p>1、配置在xml中</p><h3 id="128、如何开启基于注解的自动装配？"><a href="#128、如何开启基于注解的自动装配？" class="headerlink" title="128、如何开启基于注解的自动装配？"></a>128、如何开启基于注解的自动装配？</h3><p>要使用 <code>@Autowired</code>，需要注册 <code>AutowiredAnnotationBeanPostProcessor</code>，可以有以下两种方式来实现：</p><p>引入配置文件中的 <code>&lt;bean&gt;&lt;/bean&gt;</code>下引入 <code>&lt;context:annotation-config&gt;&lt;/context:annotation-config&gt;</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>在bean配置文件中直接引入 <code>AutowiredAnnotationBeanPostProcessor</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="129、什么是-Spring-Batch？"><a href="#129、什么是-Spring-Batch？" class="headerlink" title="129、什么是 Spring Batch？"></a>129、什么是 Spring Batch？</h3><p>1、什么是spring batch?</p><p>spring batch是一个轻量级的、完善的批处理框架，它主要的目的在于帮助企业建立健壮、高效的批处理应用。</p><p>spring batch是Spring的一个子项目，它使用java语言并基于spring框架作为基础开发，使得已经使用Spring框架的开发者或者是企业可以更加容易访问和利用企业服务。</p><p>spring batch提供了大量可重用的组件,包括了日志、追踪、事务、任务作业统计、任务重启、跳过、重复、资源管理。</p><p>对大数据量和高性能的批处理任务，spring batch同样提供了高级功能和特性来支持。</p><p>例如：分区功能、远程功能。</p><p>总的来说，spring batch可以支持简单的、复杂的和大数据量的批处理作业。</p><p>2、spring batch业务场景</p><p>周期性的提交批处理</p><p>把一个任务并行处理</p><p>消息驱动应用分级处理</p><p>大规模并行批处理</p><p>手工或调度使任务失败之后重新启动</p><p>有依赖步骤的顺序执行(使用工作流驱动扩展)</p><p>处理时跳过部分记录</p><p>成批事务：为小批量的或有的存储过程/脚本的场景使用</p><h3 id="130、spring-mvc-和-struts-的区别是什么？"><a href="#130、spring-mvc-和-struts-的区别是什么？" class="headerlink" title="130、spring mvc 和 struts 的区别是什么？"></a>130、spring mvc 和 struts 的区别是什么？</h3><p>1、拦截机制的不同</p><p>Struts2是类级别的拦截，每次请求就会创建一个Action，和Spring整合时Struts2的ActionBean注入作用域是原型模式prototype，然后通过setter，getter吧request数据注入到属性。Struts2中，一个Action对应一个request，response上下文，在接收参数时，可以通过属性接收，这说明属性参数是让多个方法共享的。Struts2中Action的一个方法可以对应一个url，而其类属性却被所有方法共享，这也就无法用注解或其他方式标识其所属方法了，只能设计为多例。</p><p>SpringMVC是方法级别的拦截，一个方法对应一个Request上下文，所以方法直接基本上是独立的，独享request，response数据。而每个方法同时又何一个url对应，参数的传递是直接注入到方法中的，是方法所独有的。处理结果通过ModeMap返回给框架。在Spring整合时，SpringMVC的Controller Bean默认单例模式Singleton，所以默认对所有的请求，只会创建一个Controller，有应为没有共享的属性，所以是线程安全的，如果要改变默认的作用域，需要添加@Scope注解修改。</p><p>Struts2有自己的拦截Interceptor机制，SpringMVC这是用的是独立的Aop方式，这样导致Struts2的配置文件量还是比SpringMVC大。</p><p>2、底层框架的不同</p><p>Struts2采用Filter（StrutsPrepareAndExecuteFilter）实现，SpringMVC（DispatcherServlet）则采用Servlet实现。Filter在容器启动之后即初始化；服务停止以后坠毁，晚于Servlet。Servlet在是在调用时初始化，先于Filter调用，服务停止后销毁。</p><p>3、性能方面</p><p>Struts2是类级别的拦截，每次请求对应实例一个新的Action，需要加载所有的属性值注入，SpringMVC实现了零配置，由于SpringMVC基于方法的拦截，有加载一次单例模式bean注入。所以，SpringMVC开发效率和性能高于Struts2。</p><p>4、配置方面</p><p>spring MVC和Spring是无缝的。从这个项目的管理和安全上也比Struts2高。</p><h3 id="131、请举例解释-Required-注解？"><a href="#131、请举例解释-Required-注解？" class="headerlink" title="131、请举例解释@Required 注解？"></a>131、请举例解释@Required 注解？</h3><p>@Required注解应用于bean属性的setter方法，它表明影响的bean属性在配置时必须放在XML配置文件中。</p><p>十九、请举例说明@Qualifier 注解？<br>如果在xml中定义了一种类型的多个bean，同时在java注解中又想把其中一个bean对象作为属性，那么此时可以使用@Qualifier加@Autowired来达到这一目的，若不加@Qualifier这个注解，在运行时会出现” No qualifying bean of type [com.tutorialspoint.Student] is defined: expected single matching bean but found 2: student1,student2”这个异常。</p><h3 id="132、Spring常用注解"><a href="#132、Spring常用注解" class="headerlink" title="132、Spring常用注解"></a>132、Spring常用注解</h3><p><a href="https://blog.csdn.net/guorui_java/article/details/107347754" title="Spring常用注解（绝对经典）">Spring常用注解（绝对经典）</a></p><h3 id="133、项目中是如何实现权限验证的，权限验证需要几张表"><a href="#133、项目中是如何实现权限验证的，权限验证需要几张表" class="headerlink" title="133、项目中是如何实现权限验证的，权限验证需要几张表"></a>133、项目中是如何实现权限验证的，权限验证需要几张表</h3><p>通过了解，现在最普遍的权限管理模型就是RBAC（Role-Based Access Control）。</p><p>1、权限控制分类</p><p>菜单功能<br>url控制（控制访问不同的控制器）<br>2、RBAC的优缺点</p><p>（1）优点</p><p>简化了用户和权限的关系<br>易扩展、易维护</p><p>（2）缺点</p><p>RBAC模型没有提供操作顺序的控制机制，这一缺陷使得RBAC模型很难适应哪些对操作次序有严格要求的系统。</p><p>3、RBAC支持的安全原则</p><p>（1）最小权限原则</p><p>RBAC可以将角色配置成其完成任务所需的最小权限集合。</p><p>（2）责任分离原则</p><p>可以通过调用相互独立互斥的角色来共同完成敏感的任务，例如要求一个记账员和财务管理员共同参与统一过账操作。</p><p>（3）数据抽象原则</p><p>可以通过权限的抽象来体现，例如财务操作用借款、存款等抽象权限，而不是使用典型的读写权限。</p><p>4、远古时代的权限控制</p><p>当时还没有RBAC，也没有这个概念，就是一堆程序员在那鼓捣，觉得登录这块该做点什么。</p><p><img src="https://img-blog.csdnimg.cn/20210801181255483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><blockquote><p>1、新建一个用户，对这个用户进行赋予权限。<br>2、但是一旦用户多了，权限复杂了，这工作量也是蛮大的。</p></blockquote><p>5、RBAC</p><p>RBAC 1.0</p><p><img src="https://img-blog.csdnimg.cn/20210801181330199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20210801181401168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p>直接上图，一目了然，当程序不是很复杂的时候，RBAC就是这样设计的，我们公司的权限验证模块就是这样设计的。</p><p>简简单单，五张表，解</p><p>RBAC 2.0</p><p>基于RBAC 1.0模型的基础上，进行了角色的访问控制</p><p><img src="https://img-blog.csdnimg.cn/20210801181428450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p>RBAC2中的一个基本限制是互斥角色的限制，互斥角色是指各自权限可以互相制约的两个角色。对于这类角色一个用户在某一次活动中只能被分配其中的一个角色，不能同时获得两个角色的使用权。</p><p>该模型有以下几种约束</p><ul><li>互斥角色 ：同一用户只能分配到一组互斥角色集合中至多一个角色，支持责任分离的原则。互斥角色是指各自权限互相制约的两个角色。对于这类角色一个用户在某一次活动中只能被分配其中的一个角色，不能同时获得两个角色的使用权。常举的例子：在审计活动中，一个角色不能同时被指派给会计角色和审计员角色。</li><li>基数约束 ：一个角色被分配的用户数量受限；一个用户可拥有的角色数目受限；同样一个角色对应的访问权限数目也应受限，以控制高级权限在系统中的分配。</li><li>先决条件角色 ：可以分配角色给用户仅当该用户已经是另一角色的成员；对应的可以分配访问权限给角色，仅当该角色已经拥有另一种访问权限。指要想获得较高的权限，要首先拥有低一级的权限。</li><li>运行时互斥 ：例如，允许一个用户具有两个角色的成员资格，但在运行中不可同时激活这两个角色。</li></ul><p>6、rbac的实现理论分析</p><p>进入登录页面；<br>拿到通过post传过来的用户名和密码；<br>使用orm进行过滤查找；<br>如果能找到值，则说明登录成功：登录成功后调用rbac初始化函数，初始化函数的主要功能是获取用户的权限和菜单保存到session中，并跳转客户列表页面；如果失败，页面进行友好提示；</p><p>7、url权限控制关键代码</p><p><img src="https://img-blog.csdnimg.cn/20210801181510714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><h3 id="134、谈谈controller，接口调用的路径问题"><a href="#134、谈谈controller，接口调用的路径问题" class="headerlink" title="134、谈谈controller，接口调用的路径问题"></a>134、谈谈controller，接口调用的路径问题</h3><p>1、Spring MVC如何匹配请求路径</p><p>@RequestMapping是用来映射请求的，比如get请求、post请求、或者REST风格与非REST风格的。该注解可以用在类上或方法上，如果用在类上，表示是该类中所有方法的父路径。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping("/springmvc")</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringMVCTest</span> {</span><br><span class="line">    <span class="meta">@RequestMapping("/testRequestMapping")</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">testRequestMapping</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"testRequestMapping"</span>);</span><br><span class="line">        <span class="keyword">return</span> SUCCESS;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在类上还添加了一个@Controller注解，该注解在SpringMVC中负责处理由DispatcherServlet分发的请求，它把用户请求的数据经过业务处理层处理之后封装成一个model，然后再把该model返回给对应的view进行展示。</p><p>我们可以通过”springmvc/testRequestMapping”这个路径来定位到testRequestMapping这个方法，然后执行方法内的方法体。</p><p>RequestMapping可以实现模糊匹配路径，比如：</p><ol><li>？表示一个字符；</li><li>*表示任意字符；</li><li>**匹配多层路径；</li></ol><p>/springmvc/**/testRequestMapping 就可以匹配/springmvc/stu/getStudentInfo/testRequestMapping 这样的路径了。</p><p>2、SpringMVC如何获取请求的参数</p><p>（1）@PathVariable</p><p>该注解用来映射请求URL中绑定的占位符。通过@PathVariable可以将URL中占位符的参数绑定到controller处理方法的入参中。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping("/testPathVariable/{id}")</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testPathVariable</span><span class="params">(<span class="meta">@PathVariable(value="id")</span> Integer id)</span>{</span><br><span class="line">    System.out.println(<span class="string">"testPathVariable:"</span> + id);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在index.jsp中我们添加一条连接，用来触发一个请求：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">testPathVariable</span><br></pre></td></tr></tbody></table></figure><p>（2） @RequestParam</p><p>该注解也是用来获取请求参数的，那么该注解和@PathVariable有什么不同呢？</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value="/testRequestParam")</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRequestParam</span><span class="params">(<span class="meta">@RequestParam(value="username")</span> String username, <span class="meta">@RequestParam(value="age", required=false, defaultValue="0")</span> <span class="type">int</span> age)</span>{</span><br><span class="line">    System.out.println(<span class="string">"testRequestParam"</span> + <span class="string">" username:"</span> + username + <span class="string">" age:"</span> +age);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在index.jsp添加超链接标签</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">testRequestParam</span><br></pre></td></tr></tbody></table></figure><p>3、REST风格的请求</p><p>在SpringMVC中业务最多的应该是CRUD了</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value="/testRest/{id}", method=RequestMethod.PUT)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRestPut</span><span class="params">(<span class="meta">@PathVariable(value="id")</span> Integer id)</span>{</span><br><span class="line">    System.out.println(<span class="string">"test put:"</span> + id);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(value="/testRest/{id}", method=RequestMethod.DELETE)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRestDelete</span><span class="params">(<span class="meta">@PathVariable(value="id")</span> Integer id)</span>{</span><br><span class="line">    System.out.println(<span class="string">"test delete:"</span> + id);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(value="/testRest", method=RequestMethod.POST)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRest</span><span class="params">()</span>{</span><br><span class="line">    System.out.println(<span class="string">"test post"</span>);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(value="/testRest/{id}", method=RequestMethod.GET)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRest</span><span class="params">(<span class="meta">@PathVariable(value="id")</span> Integer id)</span>{</span><br><span class="line">    System.out.println(<span class="string">"test get:"</span> + id);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="135、如何防止表单重复提交"><a href="#135、如何防止表单重复提交" class="headerlink" title="135、如何防止表单重复提交"></a>135、如何防止表单重复提交</h3><p>1、通过JavaScript屏蔽提交按钮（不推荐）</p><p>2、给数据库增加唯一键约束（简单粗暴）</p><p>3、利用Session防止表单重复提交（推荐）</p><p>4、使用AOP自定义切入实现</p><h3 id="136、Spring中都应用了哪些设计模式"><a href="#136、Spring中都应用了哪些设计模式" class="headerlink" title="136、Spring中都应用了哪些设计模式"></a>136、Spring中都应用了哪些设计模式</h3><p>1、简单工厂模式</p><p>简单工厂模式的本质就是一个工厂类根据传入的参数，动态的决定实例化哪个类。</p><p>Spring中的BeanFactory就是简单工厂模式的体现，根据传入一个唯一的标识来获得bean对象。</p><p>2、工厂方法模式</p><p>应用程序将对象的创建及初始化职责交给工厂对象，工厂Bean。</p><p>定义工厂方法，然后通过config.xml配置文件，将其纳入Spring容器来管理，需要通过factory-method指定静态方法名称。</p><p>3、单例模式</p><p>Spring用的是双重判断加锁的单例模式，通过getSingleton方法从singletonObjects中获取bean。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Return the (raw) singleton object registered under the given name.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * Checks already instantiated singletons and also allows for an early</span></span><br><span class="line"><span class="comment"> * reference to a currently created singleton (resolving a circular reference).</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> beanName the name of the bean to look for</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> allowEarlyReference whether early references should be created or not</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the registered singleton object, or {<span class="doctag">@code</span> null} if none found</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> Object <span class="title function_">getSingleton</span><span class="params">(String beanName, <span class="type">boolean</span> allowEarlyReference)</span> {</span><br><span class="line">    <span class="type">Object</span> <span class="variable">singletonObject</span> <span class="operator">=</span> <span class="built_in">this</span>.singletonObjects.get(beanName);</span><br><span class="line">    <span class="keyword">if</span> (singletonObject == <span class="literal">null</span> &amp;&amp; isSingletonCurrentlyInCreation(beanName)) {</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="built_in">this</span>.singletonObjects) {</span><br><span class="line">            singletonObject = <span class="built_in">this</span>.earlySingletonObjects.get(beanName);</span><br><span class="line">            <span class="keyword">if</span> (singletonObject == <span class="literal">null</span> &amp;&amp; allowEarlyReference) {</span><br><span class="line">                <span class="type">ObjectFactory</span> <span class="variable">singletonFactory</span> <span class="operator">=</span> <span class="built_in">this</span>.singletonFactories.get(beanName);</span><br><span class="line">                <span class="keyword">if</span> (singletonFactory != <span class="literal">null</span>) {</span><br><span class="line">                    singletonObject = singletonFactory.getObject();</span><br><span class="line">                    <span class="built_in">this</span>.earlySingletonObjects.put(beanName, singletonObject);</span><br><span class="line">                    <span class="built_in">this</span>.singletonFactories.remove(beanName);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> (singletonObject != NULL_OBJECT ? singletonObject : <span class="literal">null</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>4、代理模式</p><p>Spring的AOP中，使用的Advice（通知）来增强被代理类的功能。Spring实现AOP功能的原理就是代理模式（① JDK动态代理，② CGLIB字节码生成技术代理。）对类进行方法级别的切面增强。</p><p>5、装饰器模式</p><p>装饰器模式：动态的给一个对象添加一些额外的功能。</p><p>Spring的ApplicationContext中配置所有的DataSource。这些DataSource可能是不同的数据库，然后SessionFactory根据用户的每次请求，将DataSource设置成不同的数据源，以达到切换数据源的目的。</p><p>在Spring中有两种表现：</p><p>一种是类名中含有Wrapper，另一种是类名中含有Decorator。</p><p>6、观察者模式</p><p>定义对象间的一对多的关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动更新。</p><p>Spring中观察者模式一般用在listener的实现。</p><p>7、策略模式</p><p>策略模式是行为性模式，调用不同的方法，适应行为的变化 ，强调父类的调用子类的特性 。</p><p>getHandler是HandlerMapping接口中的唯一方法，用于根据请求找到匹配的处理器。</p><p>8、模板方法模式</p><p>Spring JdbcTemplate的query方法总体结构是一个模板方法+回调函数，query方法中调用的execute()是一个模板方法，而预期的回调doInStatement(Statement state)方法也是一个模板方法。</p><h3 id="137、请举例说明如何在-Spring-中注入一个-Java-Collection？"><a href="#137、请举例说明如何在-Spring-中注入一个-Java-Collection？" class="headerlink" title="137、请举例说明如何在 Spring 中注入一个 Java Collection？"></a>137、请举例说明如何在 Spring 中注入一个 Java Collection？</h3><p>Spring注入有四种方式，</p><ol><li>set注入；</li><li>构造器注入；</li><li>基于注解的注入；</li><li>xml配置文件注入；</li></ol><p>想要注入java collection，就是注入集合类：</p><ol><li>list</li><li>set</li><li>map</li><li>props：该标签支持注入键和值都是字符串类型的键值对。</li></ol><p>list和set都使用value标签；map使用entry标签；props使用prop标签；</p><h3 id="138、mybatis-中-和-的区别是什么？"><a href="#138、mybatis-中-和-的区别是什么？" class="headerlink" title="138、mybatis 中 #{}和 ${}的区别是什么？"></a>138、mybatis 中 #{}和 ${}的区别是什么？</h3><ol><li>#{}带引号，${}不带引号；</li><li>#{}可以防止SQL注入；</li><li>${}常用于数据库表名、order by子句；</li><li>一般能用#{}就不要使用${}；</li></ol><h3 id="139、mybatis-是否支持延迟加载？延迟加载的原理是什么？"><a href="#139、mybatis-是否支持延迟加载？延迟加载的原理是什么？" class="headerlink" title="139、mybatis 是否支持延迟加载？延迟加载的原理是什么？"></a>139、mybatis 是否支持延迟加载？延迟加载的原理是什么？</h3><p>1、mybatis 是否支持延迟加载？</p><p>延迟加载其实就是讲数据加载时机推迟，比如推迟嵌套查询的时机。</p><p>延迟加载可以实现先查询主表，按需实时做关联查询，返回关联表结果集，一定程度上提高了效率。</p><p>mybatis仅支持关联对象association和关联集合对象collection的延迟加载，association是一对一，collection是一对多查询，在mybatis配置文件中可以配置lazyloadingEnable=true/false。</p><p>2、延迟加载的原理是什么？</p><p>使用CGLIB为目标对象建立代理对象，当调用目标对象的方法时进入拦截器方法。</p><p>比如调用a.getB().getName()，拦截器方法invoke()发现a.getB()为null，会单独发送事先准备好的查询关联B对象的sql语句，把B查询出来然后调用a.setB(b)，也是a的对象的属性b就有值了，然后调用getName()，这就是延迟加载的原理。</p><h3 id="140、说一下-mybatis-的一级缓存和二级缓存？"><a href="#140、说一下-mybatis-的一级缓存和二级缓存？" class="headerlink" title="140、说一下 mybatis 的一级缓存和二级缓存？"></a>140、说一下 mybatis 的一级缓存和二级缓存？</h3><p>一级缓存是session级别的缓存，默认开启，当查询一次数据库时，对查询结果进行缓存，如果之后的查询在一级缓存中存在，则无需再访问数据库；</p><p>二级缓存是sessionFactory级别的缓存，需要配置才会开启。当进行sql语句查询时，先查看一级缓存，如果不存在，访问二级缓存，降低数据库访问压力。</p><h3 id="141、mybatis-有哪些执行器（Executor）？"><a href="#141、mybatis-有哪些执行器（Executor）？" class="headerlink" title="141、mybatis 有哪些执行器（Executor）？"></a>141、mybatis 有哪些执行器（Executor）？</h3><p>1、mybatis有三种基本的Executor执行器：</p><p>（1）、SimpleExecutor</p><p>每执行一次update或select，就开启一个Statement对象，用完立刻关闭Statement对象。</p><p>（2）、PauseExecutor</p><p>执行update或select，以sql做为key查找Statement对象，存在就使用，不存在就创建，用完后，不关闭Statement对象，而且放置于Map内，供下一次使用。简言之，就是重复使用Statement对象。</p><p>（3）、BatchExecutor</p><p>执行update，将所有sql通过addBatch()都添加到批处理中，等待统一执行executeBatch()，它缓存了多个Statement对象，每个Statement对象都是addBatch()完毕后，等待逐一执行executeBatch()批处理。与JDBC批处理相同。</p><p>2、作用范围：</p><p>Executor的这些特点，都严格限制在SqlSession生命周期范围内。</p><p>3、Mybatis中如何指定使用哪一种Executor执行器？</p><p>在mybatis的配置文件中，可以指定默认的ExecutorType执行器类型，也可以手动给DefaultSqlSessionFactory的创建SqlSession的方法传递ExecutorType类型参数。</p><h3 id="142、mybatis-和-hibernate-的区别有哪些？"><a href="#142、mybatis-和-hibernate-的区别有哪些？" class="headerlink" title="142、mybatis 和 hibernate 的区别有哪些？"></a>142、mybatis 和 hibernate 的区别有哪些？</h3><p>1、两者最大的区别</p><p>针对简单逻辑，都有对应的代码生成工具，可以生成简单基本的dao层方法；</p><p>针对高级查询，mybatis要手动编写sql语句和resultMap，而hibernate有良好的映射机制；</p><p>2、开发难度对比</p><p>hibernate &gt; mybatis</p><p>3、日志统计</p><p>hibernate有自己的日志统计功能，而mybatis需要借助log4j来记录日志。</p><p>4、数据库扩展比较</p><p>hibernate &gt; mybatis</p><p>5、缓存机制比较</p><p>因为hibernate对查询对象有良好的管理机制，用户无需关心sql，所以使用二级缓存如果出现脏数据，系统会报错。</p><p>而mybatis，如果不能获取最新数据，应该避免缓存的使用，脏数据的出现会给系统的正常运行带来很大的隐患。</p><p>6、如何选择</p><ol><li>mybatis需要编写sql和映射规则，工作量大于hibernate；</li><li>mybatis支持的工具也有限，不能像hibernate那样有许多插件可以帮助生成映射代码和关联关系；</li><li>对于性能要求不太苛刻的系统，比如管理系统、ERP等推荐hibernate；</li><li>对于性能要求高、响应快、灵活的系统，比如电商系统，推荐使用mybatis；</li></ol><h3 id="143、myBatis查询多个id、myBatis常用属性"><a href="#143、myBatis查询多个id、myBatis常用属性" class="headerlink" title="143、myBatis查询多个id、myBatis常用属性"></a>143、myBatis查询多个id、myBatis常用属性</h3><p>myBatis查询多个id（我居然回答用对象来传递…）</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Page  getUserListByIds(@Param("ids") List ids);</span><br></pre></td></tr></tbody></table></figure><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select * from student</span><br><span class="line">where id in</span><br><span class="line"></span><br><span class="line">    #{userid}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="144、mybatis一级缓存、二级缓存"><a href="#144、mybatis一级缓存、二级缓存" class="headerlink" title="144、mybatis一级缓存、二级缓存"></a>144、mybatis一级缓存、二级缓存</h3><p>1、一级缓存：指的是mybatis中sqlSession对象的缓存，当我们执行查询以后，查询的结果会同时存入sqlSession中，再次查询的时候，先去sqlSession中查询，有的话直接拿出，当sqlSession消失时，mybatis的一级缓存也就消失了，当调用sqlSession的修改、添加、删除、commit()、close()等方法时，会清空一级缓存。</p><p>2、二级缓存：指的是mybatis中的sqlSessionFactory对象的缓存，由同一个sqlSessionFactory对象创建的sqlSession共享其缓存，但是其中缓存的是数据而不是对象。当命中二级缓存时，通过存储的数据构造成对象返回。查询数据的时候，查询的流程是二级缓存 &gt; 一级缓存 &gt; 数据库。</p><p>3、如果开启了二级缓存，sqlSession进行close()后，才会把sqlSession一级缓存中的数据添加到二级缓存中，为了将缓存数据取出执行反序列化，还需要将要缓存的pojo实现Serializable接口，因为二级缓存数据存储介质多种多样，不一定只存在内存中，也可能存在硬盘中。</p><p>4、mybatis框架主要是围绕sqlSessionFactory进行的，具体的步骤：</p><ol><li>定义一个configuration对象，其中包含数据源、事务、mapper文件资源以及影响数据库行为属性设置settings。</li><li>通过配置对象，则可以创建一个sqlSessionFactoryBuilder对象。</li><li>通过sqlSessionFactoryBuilder获得sqlSessionFactory实例。</li><li>通过sqlSessionFactory实例创建qlSession实例，通过sqlSession对数据库进行操作。</li></ol><p>5、代码实例</p><p>mybatis-config.xml</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisTest</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//读取mybatis-config.xml文件</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">"mybatis-config.xml"</span>);</span><br><span class="line">            <span class="comment">//初始化mybatis,创建SqlSessionFactory类的实例</span></span><br><span class="line">            <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span>  <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">            <span class="comment">//创建session实例</span></span><br><span class="line">            <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 接下来在这里做很多事情,到目前为止,目的已经达到得到了SqlSession对象.通过调用SqlSession里面的方法,</span></span><br><span class="line"><span class="comment">             * 可以测试MyBatis和Dao层接口方法之间的正确性,当然也可以做别的很多事情,在这里就不列举了</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">//插入数据</span></span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">            user.setC_password(<span class="string">"123"</span>);</span><br><span class="line">            user.setC_username(<span class="string">"123"</span>);</span><br><span class="line">            user.setC_salt(<span class="string">"123"</span>);</span><br><span class="line">            <span class="comment">//第一个参数为方法的完全限定名:位置信息+映射文件当中的id</span></span><br><span class="line">            session.insert(<span class="string">"com.cn.dao.UserMapping.insertUserInformation"</span>, user);</span><br><span class="line">            <span class="comment">//提交事务</span></span><br><span class="line">            session.commit();</span><br><span class="line">            <span class="comment">//关闭session</span></span><br><span class="line">            session.close();</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="145、mybatis如何防止sql注入"><a href="#145、mybatis如何防止sql注入" class="headerlink" title="145、mybatis如何防止sql注入"></a>145、mybatis如何防止sql注入</h3><p>注意：但凡是sql注入漏洞的程序，都是因为程序要接受来自客户端用户输入的变量或URL传递的参数，并且这个变量或参数是组成sql语句的一部分，对于用户输入的内容或传递的参数，我们应该要时刻保持警惕，这是安全领域里的【外部数据不可信任】的原则，纵观web安全领域的各种攻击方式，大多数都是因为开发者违反了这个原则而导致的，所以自然能想到，就是变量的检测、过滤、验证下手，确保变量是开发者所预想的。</p><p>1、检查变量数据类型和格式</p><p>数据类型检查，sql执行前，要进行数据类型检查，如果是邮箱，参数就必须是邮箱的格式，如果是日期，就必须是日期格式；</p><p>只要是有固定格式的变量，在SQL语句执行前，应该严格按照固定格式去检查，确保变量是我们预想的格式，这样很大程度上可以避免SQL注入攻击。</p><p>如果上述例子中id是int型的，效果会怎样呢？无法注入，因为输入注入参数会失败。比如上述中的name字段，我们应该在用户注册的时候，就确定一个用户名规则，比如5-20个字符，只能由大小写字母、数字以及汉字组成，不包含特殊字符。此时我们应该有一个函数来完成统一的用户名检查。不过，仍然有很多场景并不能用到这个方法，比如写博客，评论系统，弹幕系统，必须允许用户可以提交任意形式的字符才行，否则用户体验感太差了。</p><p>2、过滤特殊符号</p><p>3、绑定变量，使用预编译语句</p><p>146、为什么要使用 hibernate？</p><ol><li>hibernate对jdbc进行了封装，简化了JDBC的重复性代码；</li><li>hibernate对dao有一个封装类hibernateTemplate，可以继承它，实现简单的CRUD接口。</li><li>hibernate使用注解和配置文件，可以对实体类和映射文件进行映射；</li><li>hibernate有事务管理机制，保证了数据的安全性；</li><li>hibernate有一级缓存和二级缓存；</li></ol><h3 id="146、hibernate-中如何在控制台查看打印的-sql-语句？"><a href="#146、hibernate-中如何在控制台查看打印的-sql-语句？" class="headerlink" title="146、hibernate 中如何在控制台查看打印的 sql 语句？"></a>146、hibernate 中如何在控制台查看打印的 sql 语句？</h3><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spring.jpa.properties.hibernate.show_sql=true</span><br><span class="line">spring.jpa.properties.hibernate.format_sql=true</span><br><span class="line">spring.jpa.properties.hibernate.use_sql_comments=true</span><br></pre></td></tr></tbody></table></figure><h3 id="147、hibernate-有几种查询方式？"><a href="#147、hibernate-有几种查询方式？" class="headerlink" title="147、hibernate 有几种查询方式？"></a>147、hibernate 有几种查询方式？</h3><p>1、导航对象图查询：根据已加载的对象，导航到其他对象。</p><p>例如，对于已经加载的Customer对象，调用它的getOrders().iterator()方法就可以导航到所有关联的Order对象，假如在关联级别使用了延迟加载检索策略，那么首次执行此方法时，hibernate会从数据库中加载关联的Order对象，否则就从缓存中获得Order对象。</p><p>2、OID方式：按照对象的OID来检索对象</p><p>Session的get()和load()方法提供了这种功能，如果在应用程序中先知道了OID，就可以使用这种方式检索对象。</p><p>get()和load()的用法完全一样，都需要两个参数，一个是持久化对象类名class，一个是行号OID，返回固定的某一行的数据，但是需要注意的是，当输入的OID不存在时，get()会返回一个空对象，load()则直接报错。</p><p>3、HQL检索方式：（hibernate query language）</p><p>使用面向对象的HQL查询语言，session的find()方法用于执行HQL查询语句。此外，hibernate还提供了query接口，它是hibernate提供的专门的HQL查询接口，能够执行各种复杂的HQL查询语句。</p><p>它具备以下功能：</p><ol><li>在查询语句中设定各种查询条件；</li><li>支持投影查询，即仅检索出对象的部分属性；</li><li>支持分页查询；</li><li>支持连接查询；</li><li>支持分组查询；</li><li>提供内置函数；</li><li>能够调用用户自定义的SQL函数；</li><li>支持子查询；</li><li>支持动态绑定参数；</li></ol><p>例如：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> session.createQuery(<span class="string">"from UserPo"</span>）；</span><br></pre></td></tr></tbody></table></figure><p>获得一个query对象，注意参数字符串中不是一个SQL语句，from后面的是持久化对象名称；</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> query.list();</span><br></pre></td></tr></tbody></table></figure><p>就可以获取数据库中对应表的数据集合。</p><p>4、QBC检索方式：Query By Criteria的API来检索对象</p><p>这种API封装了基于字符串形式的查询语句，提供了更加面向对象的接口。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例：<span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> session.createCriteria(UserPo.class);</span><br></pre></td></tr></tbody></table></figure><p>创建一个Criteria对象，参数是所关联的持久化对象，criteria.add(Restrictions.ge(“id”,2));将查询条件加入对象中，后面的操作就和Query对象一样了。</p><p>5、本地SQL</p><p>使用本地数据库的SQL查询语句，hibernate会负责把检索到的JDBC ResultSet结果映射为持久化对象图。</p><h3 id="148、hibernate-实体类可以被定义为-final-吗？"><a href="#148、hibernate-实体类可以被定义为-final-吗？" class="headerlink" title="148、hibernate 实体类可以被定义为 final 吗？"></a>148、hibernate 实体类可以被定义为 final 吗？</h3><p>可以将hibernate的实体类定义为final，但这种做法不好。</p><p>因为hibernate会使用代理模式在延迟关联的情况下提高性能，如果你把实体类定义成final类之后，因为Java不允许对final类进行扩展，所以hibernate就无法再使用代理了，如此一来就限制了使用可以提升性能的手段。</p><p>不过，如果你的持久化类实现了一个接口，而且在该接口中声明了所有定义于实体类中的所有public的方法的话，就能避免出现前面所说的不利后果。</p><h3 id="149、在-hibernate-中使用-Integer-和-int-做映射有什么区别？"><a href="#149、在-hibernate-中使用-Integer-和-int-做映射有什么区别？" class="headerlink" title="149、在 hibernate 中使用 Integer 和 int 做映射有什么区别？"></a>149、在 hibernate 中使用 Integer 和 int 做映射有什么区别？</h3><p>hibernate是面向对象的ORM，所以一般定义成封装类型，要看数据库中的定义，如果数据库中有对应字段存在null值，就要定义Integer。也可以定义基本类型，在配置文件中写清楚即可。</p><h3 id="150、什么是-Spring-Boot？Spring-Boot-有哪些优点？"><a href="#150、什么是-Spring-Boot？Spring-Boot-有哪些优点？" class="headerlink" title="150、什么是 Spring Boot？Spring Boot 有哪些优点？"></a>150、什么是 Spring Boot？Spring Boot 有哪些优点？</h3><p>1、Spring Boot简介</p><p>基于Spring4.0设计，不仅继承了Spring框架原有的优秀特性，而且还通过简化配置来进一步简化spring应用的整个搭建和开发过程。另外SpringBoot通过集成大量的框架使得依赖包的版本冲突、引用的不稳定性得到了解决。</p><p>2、Spring Boot 有哪些优点？</p><ol><li>快速构建项目，可以选一些必要的组件；</li><li>对主流框架的无配置集成；</li><li>内嵌Tomcat容器，项目可独立运行；</li><li>删除了繁琐的xml配置文件；</li><li>极大地提高了开发和部署效率；</li><li>提供starter，简化maven配置；</li></ol><p>3、SpringBoot有哪些缺点？</p><ol><li>版本迭代速度快，一些模块改动很大；</li><li>由于无须配置，报错时很难定位；</li></ol><h3 id="151、Spring-Boot-中的监视器是什么？"><a href="#151、Spring-Boot-中的监视器是什么？" class="headerlink" title="151、Spring Boot 中的监视器是什么？"></a>151、Spring Boot 中的监视器是什么？</h3><p>监听器也叫listener，是servlet的监听器，可以用于监听web应用程序中某些对象的创建、销毁、增加、修改、删除等动作的发生，然后做出相应的响应处理。当范围对象的状态发生变化时，服务器自动调用监听器对象中的方法，常用于系统加载时进行信息初始化，统计在线人数和在线用户，统计网站的访问量。</p><p>配置监听器的方法：</p><p>通过@Component把监听器加入Spring容器中管理；<br>在application.properties中添加context.listener.classes配置；<br>在方法上加@EventListener注解；</p><h3 id="152、什么是-YAML？"><a href="#152、什么是-YAML？" class="headerlink" title="152、什么是 YAML？"></a>152、什么是 YAML？</h3><p>YAML是JSON的一个超集，可以非常方便地将外部配置以层次结构形式存储起来。YAML可以作为properties配置文件的替代。</p><p>YAML使用的注意事项：</p><ol><li>在properties文件中是以”.”进行分割的，在yml中是用”.”进行分割的；</li><li>yml的数据格式和json的格式很像，都是K-V格式，并且通过”:”进行赋值；</li><li>每个冒号后面一定要加一个空格；</li></ol><h3 id="153、如何使用-Spring-Boot-实现分页和排序？"><a href="#153、如何使用-Spring-Boot-实现分页和排序？" class="headerlink" title="153、如何使用 Spring Boot 实现分页和排序？"></a>153、如何使用 Spring Boot 实现分页和排序？</h3><p>使用Spring Data Jpa可以实现将可分页的传递给存储库方法。</p><h3 id="154、如何使用-Spring-Boot-实现异常处理？"><a href="#154、如何使用-Spring-Boot-实现异常处理？" class="headerlink" title="154、如何使用 Spring Boot 实现异常处理？"></a>154、如何使用 Spring Boot 实现异常处理？</h3><p>1、使用 @ExceptionHandler 注解处理局部异常(只能处理当前controller中的ArithmeticException和NullPointerException异常，缺点就是只能处理单个controller的异常)</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionHandlerController</span> {</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping("/excep")</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">exceptionMethod</span><span class="params">(Model model)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">String a=<span class="literal">null</span>;</span><br><span class="line">System.out.println(a.charAt(<span class="number">1</span>));</span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">model.addAttribute(<span class="string">"message"</span>, <span class="string">"没有抛出异常"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@ExceptionHandler(value = {ArithmeticException.class,NullPointerException.class})</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">arithmeticExceptionHandle</span><span class="params">(Model model, Exception e)</span> {</span><br><span class="line">model.addAttribute(<span class="string">"message"</span>, <span class="string">"@ExceptionHandler"</span> + e.getMessage());</span><br><span class="line"><span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>2、使用 @ControllerAdvice + @ExceptionHandler 注解处理全局异常(value后面可以填写数组)</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ControllerAdviceException</span> {</span><br><span class="line"></span><br><span class="line"><span class="meta">@ExceptionHandler(value = {NullPointerException.class})</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">NullPointerExceptionHandler</span><span class="params">(Model model, Exception e)</span> {</span><br><span class="line">model.addAttribute(<span class="string">"message"</span>, <span class="string">"@ControllerAdvice + @ExceptionHandler :"</span> + e.getMessage());</span><br><span class="line"><span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>3、配置 SimpleMappingExceptionResolver 类处理异常（配置类）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SimpleMappingException</span> {</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> SimpleMappingExceptionResolver <span class="title function_">getSimpleMappingExceptionResolver</span><span class="params">()</span>{</span><br><span class="line"></span><br><span class="line"><span class="type">SimpleMappingExceptionResolver</span> <span class="variable">resolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleMappingExceptionResolver</span>();</span><br><span class="line"><span class="type">Properties</span> <span class="variable">mappings</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line"><span class="comment">//第一个参数为异常全限定名，第二个为跳转视图名称</span></span><br><span class="line">mappings.put(<span class="string">"java.lang.NullPointerException"</span>, <span class="string">"index"</span>);</span><br><span class="line">mappings.put(<span class="string">"java.lang.ArithmeticException"</span>, <span class="string">"index"</span>);</span><br><span class="line"><span class="comment">//设置异常与视图映射信息的</span></span><br><span class="line">resolver.setExceptionMappings(mappings);</span><br><span class="line"><span class="keyword">return</span> resolver;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>4、实现 HandlerExceptionResolver 接口处理异常</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandlerException</span> <span class="keyword">implements</span> <span class="title class_">HandlerExceptionResolver</span> {</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ModelAndView <span class="title function_">resolveException</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> {</span><br><span class="line"></span><br><span class="line"><span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">modelAndView.addObject(<span class="string">"message"</span>, <span class="string">"实现HandlerExceptionResolver接口"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断不同异常类型，做不同视图跳转</span></span><br><span class="line"><span class="keyword">if</span>(ex <span class="keyword">instanceof</span> NullPointerException){</span><br><span class="line">modelAndView.setViewName(<span class="string">"index"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(ex <span class="keyword">instanceof</span> ArithmeticException){</span><br><span class="line">modelAndView.setViewName(<span class="string">"index"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> modelAndView;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="155、单点登录"><a href="#155、单点登录" class="headerlink" title="155、单点登录"></a>155、单点登录</h3><p>1、概念</p><p>单点登录SSO，说的是在一个多系统共存的环境下，用户在一处登录后，就不用在其他系统中登录，也就是用户的一次登录能得到其他所有系统的信任。</p><p>2、单点登录的要点</p><p>存储信任；<br>验证信任；</p><p>3、实现单点登录的三种方式</p><p>（1）以cookie作为凭证</p><p>最简单的单点登录实现方式，是使用cookie作为媒介，存放用户凭证。</p><p>用户登录父应用之后，应用返回一个加密的cookie，当用户访问子应用的时候，携带上这个cookie，授权应用解密cookie进行校验，校验通过则登录当前用户。</p><p>缺点：</p><p>cookie不安全</p><p>通过加密可以保证安全性，但如果对方掌握了解密算法就完蛋了。</p><p>不能跨域实现免登</p><p>（2）通过JSONP实现</p><p>对于跨域问题，可以使用JSONP实现。用户在父应用中登录后，跟session匹配的cookie会存到客户端中，当用户需要登录子应用的时候，授权应用访问父应用提供的JSONP接口，并在请求中带上父应用域名下的cookie，父应用接收到请求，验证用户的登录状态，返回加密的信息，子应用通过解析返回来的加密信息来验证用户，如果通过验证则登录用户。</p><p>缺点：</p><p>这种方法虽然能解决跨域问题，但是治标不治本，没有解决cookie安全性的问题。</p><p>（3）通过页面重定向的方式</p><p>最后一种介绍的方式，是通过父应用和子应用来回重定向进行通信，实现信息的安全传递。</p><p>父应用提供一个GET方式的登录接口A（此时的父应用接口固定，攻击者无法去伪造），用户通过子应用重定向连接的方式访问这个接口，如果用户还没有登录，则返回一个登录页面，用户输入账号密码进行登录，如果用户已经登录了，则生成加密的token，并且重定向到子应用提供的验证token的接口B（此时的子应用接口固定，攻击者无法去伪造），通过解密和校验之后，子应用登录当前用户。</p><p>缺点：</p><p>这种方式较前面的两种方式，是解决了安全性和跨域的问题，但是并没有前面两种方式简单，安全与方便，本来就是矛盾的。</p><p>4、使用独立登录系统</p><p>一般来说，大型应用会把授权的逻辑和用户信息的相关逻辑独立成一个应用，称为用户中心。用户中心不处理业务逻辑，只是处理用户信息的管理以及授权给第三方应用。第三方应用需要登录的时候，则把用户的登录请求转发给用户中心进行处理，用户处理完毕后返回凭证，第三方应用验证凭证，通过后就登录用户。</p><p>5、sso（单点登录）与OAuth2.0（授权）的区别？</p><p>（1）sso（单点登录）</p><p>通常处理的是一个公司的不同应用间的访问登录问题，如企业应用有很多子系统，只需登录一个系统，就可以实现不同子系统间的跳转，而避免了登录操作；<br>通过cookie、jsonp、重定向来实现；</p><p>（2）OAuth2.0（授权）</p><p>解决的是服务提供方（如微信）给第三方应用授权的问题，简称微信登录；<br>是一种具体的协议，只是为用户资源的授权提供了一个安全的、开放的而又简易的标准，OAuth2.0（授权）为客户开发者开发web应用，桌面应用程序，移动应用及客厅设备提供特定的授权流程。</p><h3 id="156、Spring-Boot比Spring多哪些注解"><a href="#156、Spring-Boot比Spring多哪些注解" class="headerlink" title="156、Spring Boot比Spring多哪些注解"></a>156、Spring Boot比Spring多哪些注解</h3><p><a href="https://blog.csdn.net/guorui_java/article/details/107379648" title="Spring Boot常用注解（绝对经典）">Spring Boot常用注解（绝对经典）</a></p><h3 id="157、打包和部署"><a href="#157、打包和部署" class="headerlink" title="157、打包和部署"></a>157、打包和部署</h3><p>Spring和Spring Boot都支持maven和Gradle通用打包管理技术。</p><p>Spring Boot相对Spring的一些优点：</p><ul><li>提供嵌入式容器支持；</li><li>使用命令java -jar独立运行jar；</li><li>部署时可以灵活指定配置文件；</li></ul><p>最近项目是分布式的项目，都是通过分项目打包部署，然后部署在docker中运行。</p><h3 id="158、Spring-Boot如何访问不同的数据库"><a href="#158、Spring-Boot如何访问不同的数据库" class="headerlink" title="158、Spring Boot如何访问不同的数据库"></a>158、Spring Boot如何访问不同的数据库</h3><p>可以使用druidDataSource创建DataSource，然后通过jdbcTemplate执行sql。</p><h3 id="159、查询网站在线人数"><a href="#159、查询网站在线人数" class="headerlink" title="159、查询网站在线人数"></a>159、查询网站在线人数</h3><p>通过监听session对象的方式来实现在线人数的统计和在线人信息展示，并且让超时的自动销毁。</p><blockquote><p>对session对象实现监听，首先必须继承HttpSessionListener类，该程序的基本原理就是当浏览器访问页面的时候必定会产生一个session对象，当关闭该页面的时候必然会删除session对象。所以每当产生一个新的session对象就让在线人数+1，当删除一个session对象就让在线人数-1。<br>还要继承一个HttpSessionAttributeListener，来实现对其属性的监听。分别实现attributeAdded方法，attributeReplace方法以及attributeRemove方法。<br>sessionCreated//新建一个会话的时候触发，也可以说是客户端第一次喝服务器交互时触发。<br>sessionDestroyed//销毁会话的时候，一般来说只有某个按钮触发进行销毁，或者配置定时销毁。<br>HttpSessionAttributeListener有三个方法需要实现<br>attributeAdded//在session中添加对象时触发此操作 笼统的说就是调用setAttribute这个方法时候会触发的<br>attributeRemoved//修改、删除session中添加对象时触发此操作 笼统的说就是调用 removeAttribute这个方法时候会触发的<br>attributeReplaced//在Session属性被重新设置时。</p></blockquote><h3 id="160、easyExcel如何实现"><a href="#160、easyExcel如何实现" class="headerlink" title="160、easyExcel如何实现"></a>160、easyExcel如何实现</h3><p>异步读取<br>新建一个 ExcelModelListener 监听类出来，并且 继承 AnalysisEventListener 类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zh.oukele.listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.context.AnalysisContext;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.event.AnalysisEventListener;</span><br><span class="line"><span class="keyword">import</span> com.zh.oukele.model.ExcelMode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> *  监听器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelModelListener</span> <span class="keyword">extends</span> <span class="title class_">AnalysisEventListener</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每隔5条存储数据库，实际使用中可以3000条，然后清理list ，方便内存回收</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">BATCH_COUNT</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">    <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invoke</span><span class="params">(ExcelMode data, AnalysisContext context)</span> {</span><br><span class="line">        System.out.println(<span class="string">"解析到一条数据:{ "</span>+ data.toString() +<span class="string">" }"</span>);</span><br><span class="line">        list.add(data);</span><br><span class="line">        count ++;</span><br><span class="line">        <span class="keyword">if</span> (list.size() &gt;= BATCH_COUNT) {</span><br><span class="line">            saveData( count );</span><br><span class="line">            list.clear();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doAfterAllAnalysed</span><span class="params">(AnalysisContext context)</span> {</span><br><span class="line">        saveData( count );</span><br><span class="line">        System.out.println(<span class="string">"所有数据解析完成！"</span>);</span><br><span class="line">        System.out.println(<span class="string">" count ："</span> + count);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加上存储数据库</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">saveData</span><span class="params">(<span class="type">int</span> count)</span> {</span><br><span class="line">        System.out.println(<span class="string">"{ "</span>+ count +<span class="string">" }条数据，开始存储数据库！"</span> + list.size());</span><br><span class="line">        System.out.println(<span class="string">"存储数据库成功！"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="161、什么是-Swagger？你用-Spring-Boot-实现了它吗？"><a href="#161、什么是-Swagger？你用-Spring-Boot-实现了它吗？" class="headerlink" title="161、什么是 Swagger？你用 Spring Boot 实现了它吗？"></a>161、什么是 Swagger？你用 Spring Boot 实现了它吗？</h3><p>Swagger是用于生成RestFul Web服务的可视化表示工具，它使文档和服务器可视化更新；</p><p>当定义好Swagger后，可以调用服务端接口，来查看接口的返回值，验证返回数据的正确性；</p><h3 id="162、数据库的三范式是什么？"><a href="#162、数据库的三范式是什么？" class="headerlink" title="162、数据库的三范式是什么？"></a>162、数据库的三范式是什么？</h3><p>1、列不可再分；</p><p>2、每一行数据只做一件事，只与一列相关，主键；</p><p>3、每个属性都与主键有直接关系，而不是间接关系；</p><p>三大范式只是设计数据库的基本理念，可以建立冗余较小、结构合理的数据库。如果有特殊情结，当然要特殊对待，数据库设计最重要的是看需求和性能，需求&gt;性能&gt;表结构。</p><p>所以不能一味的追求三范式建立数据库。</p><h3 id="163、一张自增表里面总共有-7-条数据，删除了最后-2-条数据，重启-mysql-数据库，又插入了一条数据，此时-id-是几？"><a href="#163、一张自增表里面总共有-7-条数据，删除了最后-2-条数据，重启-mysql-数据库，又插入了一条数据，此时-id-是几？" class="headerlink" title="163、一张自增表里面总共有 7 条数据，删除了最后 2 条数据，重启 mysql 数据库，又插入了一条数据，此时 id 是几？"></a>163、一张自增表里面总共有 7 条数据，删除了最后 2 条数据，重启 mysql 数据库，又插入了一条数据，此时 id 是几？</h3><p>一般情况下，我们创建的表类型是InnoDB。</p><p>不重启MySQL，如果新增一条记录，id是8；<br>重启，ID是6；因为InnoDB表只把自增主键的最大ID记录在内存中，如果重启，已删除的最大ID会丢失。<br>如果表类型是MyISAM，重启之后，最大ID也不会丢失，ID是8；</p><p>InnoDB必须有主键（建议使用自增主键，不用UUID，自增主键索引查询效率高）、支持外键、支持事务、支持行级锁。</p><p>系统崩溃后，MyISAM很难恢复；</p><p>综合考虑，优先选择InnoDB，MySQL默认也是InnoDB。</p><h3 id="164、如何获取当前数据库版本？"><a href="#164、如何获取当前数据库版本？" class="headerlink" title="164、如何获取当前数据库版本？"></a>164、如何获取当前数据库版本？</h3><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>MySQL,,mysql <span class="operator">-</span>v</span><br><span class="line"><span class="keyword">select</span> version();</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>Oracle</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$version;</span><br></pre></td></tr></tbody></table></figure><h3 id="165、说一下-ACID-是什么？"><a href="#165、说一下-ACID-是什么？" class="headerlink" title="165、说一下 ACID 是什么？"></a>165、说一下 ACID 是什么？</h3><p>ACID是数据库事务执行的四大基本要素，包括原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）。</p><p>1、原子性</p><p>整个事务中的所有操作，要么全部完成，要不全部不完成，不可能停滞在中间某个环节。事务在执行过程中发生错误，会被roolback回滚到事务开始前的状态，就像这个事务从未执行过一样。</p><p>2、一致性</p><p>事务必须始终保持系统处于一致的状态，不管在任何给定的时间并发事务有多少。</p><p>3、隔离性</p><p>隔离状态执行事务，使他们好像是系统在给定时间内执行的唯一操作。</p><p>如果有两个事务，运行在相同的时间内，执行相同的功能，事务的隔离性确保每一个事务在系统中认为只有自己在使用系统。这种属性称为串行化，为了防止事务操作间的混淆，必须串行化或序列化请求，使得在同一时间仅有一个请求用于同一数据。</p><p>4、持久性</p><p>一个成功的事务将永久的改变系统的状态。</p><h3 id="166、char-和-varchar-的区别是什么？"><a href="#166、char-和-varchar-的区别是什么？" class="headerlink" title="166、char 和 varchar 的区别是什么？"></a>166、char 和 varchar 的区别是什么？</h3><ol><li>char的长度是固定的，varchar的长度的可变的；</li><li>char的效率比varchar的效率高；</li><li>char占用空间比varchar大，char在查询时需要使用trim；</li></ol><h3 id="167、float-和-double-的区别是什么？"><a href="#167、float-和-double-的区别是什么？" class="headerlink" title="167、float 和 double 的区别是什么？"></a>167、float 和 double 的区别是什么？</h3><p>1、float 和 double 的区别是什么？</p><p>（1）内存中占有的字节数不同</p><p>单精度浮点数在内存中占有4个字节；</p><p>双精度浮点数在内存中占有8个字节；</p><p>（2）有效数字位数不同</p><p>单精度浮点数有效数字8位；</p><p>双精度浮点数有效数字16位；</p><p>（3）数值取值范围不同</p><p>单精度浮点数的表示范围：-3.40E+38~3.40E+38</p><p>双精度浮点数的表示范围：-1.79E+308~-1.79E+308</p><p>（4）在程序中处理速度不同</p><p>一般来说，CPU处理单精度浮点数的速度比双精度浮点数的速度快</p><p>如果不声明，默认小数是double类型，如果想用float，要进行强转；</p><p>2、例如</p><p>float f = 1.3；会编译报错，正确的写法是float f = (float)1.3;或者float a = 1.3f;（f或F都可以不区分大小写）</p><p>3、注意</p><p>float是八位有效数字，第七位会四舍五入；</p><p>4、面试题</p><p>（1）java中3*0.1==0.3将会返回什么？true还是false？</p><p>答：返回false，因为浮点数不能完全精确的表示出来，一般会损失精度；</p><p>（2）java中float f = 3.4;是否正确？</p><p>答：不正确。因为3.4是双精度浮点数，将双精度赋给单精度属于向下转型，会造成精度损失，因此需要强制类型转换float=（float）3.4;或者写成float f = 3.4f;</p><h3 id="168、Oracle分页sql"><a href="#168、Oracle分页sql" class="headerlink" title="168、Oracle分页sql"></a>168、Oracle分页sql</h3><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#不带排序的</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> ROWNUM <span class="keyword">AS</span> rowno, t.<span class="operator">*</span> <span class="keyword">FROM</span> worker t <span class="keyword">where</span> ROWNUM  <span class="number">10</span>;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#带排序的</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> tt.<span class="operator">*</span>, ROWNUM <span class="keyword">AS</span> rowno <span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> t.<span class="operator">*</span> <span class="keyword">FROM</span> worker t <span class="keyword">ORDER</span> <span class="keyword">BY</span> wkid <span class="keyword">aSC</span>) tt <span class="keyword">WHERE</span> ROWNUM <span class="operator">=</span> <span class="number">10</span>;</span><br></pre></td></tr></tbody></table></figure><h3 id="169、数据库如何保证主键唯一性"><a href="#169、数据库如何保证主键唯一性" class="headerlink" title="169、数据库如何保证主键唯一性"></a>169、数据库如何保证主键唯一性</h3><p>1、主键约束</p><p>主键列上没有任何两行具有相同值（即重复值），不允许空（NULL）；</p><p>2、唯一性约束</p><p>保证一个字段或者一组字段里的数据都与表中其它行的对应数据不同。和主键约束不同，唯一性约束允许为null，但是只能有一行；</p><p>3、唯一性索引</p><p>不允许具有索引值相同的行，从而禁止重复的索引和键值；</p><p>4、三者的区别</p><ul><li>约束是用来检查数据的正确性；</li><li>索引是用来优化查询的；</li><li>创建唯一性约束会创建一个约束和一个唯一性索引；</li><li>创建唯一性索引只会创建一个唯一性索引；</li><li>主键约束和唯一性约束都会创建一个唯一性索引。</li></ul><h3 id="170、如何设计数据库"><a href="#170、如何设计数据库" class="headerlink" title="170、如何设计数据库"></a>170、如何设计数据库</h3><p>1、数据库设计最起码要占用这个项目开发的40%以上的时间</p><p>2、数据库设计不仅仅停留在页面demo的表面</p><p>页面内容所需字段，在数据库设计中只是一部分，还有系统运转、模块交互、中转数据、表之间的联系等等所需要的字段，因此数据库设计绝对不是简单的基本数据存储，还有逻辑数据存储。</p><p>3、数据库设计完成后，项目80%的设计开发都要存在你的脑海中</p><p>每个字段的设计都要有他存在的意义，要清楚的知道程序中如何去运用这些字段，多张表的联系在程序中是如何体现的。</p><p>4、数据库设计时就要考虑效率和优化问题</p><p>数据量大的表示粗粒度的，会冗余一些必要字段，达到用最少的表，最弱的表关系去存储海量的数据。大数据的表要建立索引，方便查询。对于含有计算、数据交互、统计这类需求时，还有考虑是否有必要采用存储过程。</p><p>5、添加必要的冗余字段</p><p>像创建时间、修改时间、操作用户IP、备注这些字段，在每张表中最好都有，一些冗余的字段便于日后维护、分析、拓展而添加。</p><p>6、设计合理的表关联</p><p>若两张表之间的关系复杂，建议采用第三张映射表来关联维护两张表之间的关系，以降低表之间的直接耦合度。</p><p>7、设计表时不加主外键等约束关联，系统编码阶段完成后再添加约束性关联</p><p>8、选择合适的主键生成策略</p><p>数据库的设计难度其实比单纯的技术实现难很多，他充分体现了一个人的全局设计能力和掌控能力，最后说一句，数据库设计，很重要，很复杂。</p><h3 id="171、性别是否适合做索引"><a href="#171、性别是否适合做索引" class="headerlink" title="171、性别是否适合做索引"></a>171、性别是否适合做索引</h3><p>区分度不高的字段不适合做索引，因为索引页是需要有开销的，需要存储的，不过这类字段可以做联合索引的一部分。</p><h3 id="172、如何查询重复的数据"><a href="#172、如何查询重复的数据" class="headerlink" title="172、如何查询重复的数据"></a>172、如何查询重复的数据</h3><p>1、查询重复的单个字段（group by）</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 重复字段A, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> 表 <span class="keyword">group</span> <span class="keyword">by</span> 重复字段A <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><p>2、查询重复的多个字段（group by）</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 重复字段A, 重复字段B, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> 表 <span class="keyword">group</span> <span class="keyword">by</span> 重复字段A, 重复字段B <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><h3 id="173、数据库一般会采取什么样的优化方法？"><a href="#173、数据库一般会采取什么样的优化方法？" class="headerlink" title="173、数据库一般会采取什么样的优化方法？"></a>173、数据库一般会采取什么样的优化方法？</h3><p>1、选取适合的字段属性</p><ul><li>为了获取更好的性能，可以将表中的字段宽度设得尽可能小。</li><li>尽量把字段设置成not null</li><li>执行查询的时候，数据库不用去比较null值。</li><li>对某些省份或者性别字段，将他们定义为enum类型，enum类型被当做数值型数据来处理，而数值型数据被处理起来的速度要比文本类型块很多。</li></ul><p>2、使用join连接代替子查询</p><p>3、使用联合union来代替手动创建的临时表</p><p>注意：union用法中，两个select语句的字段类型要匹配，而且字段个数要相同。</p><p>4、事务</p><p>要么都成功，要么都失败。</p><p>可以保证数据库中数据的一致性和完整性。事务以begin开始，commit关键字结束。</p><p>如果出错，rollback命令可以将数据库恢复到begin开始之前的状态。</p><p>事务的另一个重要作用是当多个用户同时使用相同的数据源时，它可以利用锁定数据库的方式为用户提供一种安全的访问方式，这样就可以保证用户的操作不被其他的用户干扰。</p><p>5、锁定表</p><p>尽管事务是维护数据库完整性的一个非常好的方法，但却因为它的独占性，有时会影响数据库的性能，尤其是在大应用中。</p><p>由于在事务执行的过程中，数据库会被锁定，因此其它用户只能暂时等待直到事务结束。</p><p>有的时候可以用锁定表的方法来获得更好的性能，</p><p>共享锁：其它用户只能看，不能修改</p><p>lock table person in share mode；</p><p>对于通过lock table 命令主动添加的锁来说，如果要释放它们，只需发出rollback命令即可。</p><p>6、使用外键</p><p>锁定表的方法可以维护数据的完整性，但是它却不能保证数据的关联性，这个时候可以使用外键。</p><p>7、使用索引</p><p>索引是提高数据库查询速度的常用方法，尤其是查询语句中包含max()、min()、order by这些命令的时候，性能提高更为显著。</p><p>一般来说索引应该建在常用于join、where、order by的字段上。尽量不要对数据库中含有大量重复的值得字段建立索引。</p><p>8、优化的查询语句</p><p>在索引的字段上尽量不要使用函数进行操作。</p><p>尽量不要使用like关键字和通配符，这样做法很简单，但却是以牺牲性能为代价的。</p><p>避免在查询中进行自动类型转换，因为类型转换也会使索引失效。</p><h3 id="174、索引怎么定义，分哪几种"><a href="#174、索引怎么定义，分哪几种" class="headerlink" title="174、索引怎么定义，分哪几种"></a>174、索引怎么定义，分哪几种</h3><ol><li>b-tree索引，如果不建立索引的情况下，oracle就自动给每一列都加一个B 树索引;</li><li>normal：普通索引</li><li>unique：唯一索引</li><li>bitmap：位图索引，位图索引特定于只有几个枚举值的情况，比如性别字段；</li><li>基于函数的索引</li></ol><h3 id="175、mysql-的内连接、左连接、右连接有什么区别？"><a href="#175、mysql-的内连接、左连接、右连接有什么区别？" class="headerlink" title="175、mysql 的内连接、左连接、右连接有什么区别？"></a>175、mysql 的内连接、左连接、右连接有什么区别？</h3><ol><li>内连接,显示两个表中有联系的所有数据;</li><li>左链接,以左表为参照,显示所有数据,右表中没有则以null显示</li><li>右链接,以右表为参照显示数据，,左表中没有则以null显示</li></ol><h3 id="176、RabbitMQ的使用场景有哪些？"><a href="#176、RabbitMQ的使用场景有哪些？" class="headerlink" title="176、RabbitMQ的使用场景有哪些？"></a>176、RabbitMQ的使用场景有哪些？</h3><p>1、解决异步问题</p><p>例如用户注册，发送邮件和短信反馈注册成功，可以使用RabbitMQ消息队列，用户无需等待反馈。</p><p>2、服务间解耦</p><p>订单系统和库存系统，中间加入RabbitMQ消息队列，当库存系统出现问题时，订单系统依旧能正常使用，降低服务间耦合度。</p><p>3、秒杀系统</p><p>利用RabbitMQ的最大值，实现秒杀系统。</p><h3 id="177、RabbitMQ有哪些重要的角色？有哪些重要的组件？"><a href="#177、RabbitMQ有哪些重要的角色？有哪些重要的组件？" class="headerlink" title="177、RabbitMQ有哪些重要的角色？有哪些重要的组件？"></a>177、RabbitMQ有哪些重要的角色？有哪些重要的组件？</h3><p>1、RabbitMQ有哪些重要的角色？</p><p>客户端、RabbitMQ、服务端。</p><p>2、有哪些重要的组件？</p><p>（1）connectionFactory（连接管理器）</p><p>应用程序与RabbitMQ之间建立连接的管理器。</p><p>（2）Channel（信道）</p><p>消息推送使用的信道。</p><p>（3）RoutingKey（路由键）</p><p>用于把生产者的数据分配到交换机上。</p><p>（4）Exchange（交换机）</p><p>用于接受和分配消息。</p><p>（5）BindKey（绑定键）</p><p>用于把交换机的消息绑定到队列上</p><p>（6）Queue（队列）</p><p>用于存储生产者消息。</p><h3 id="178、RabbitMQ中-vhost-的作用是什么？"><a href="#178、RabbitMQ中-vhost-的作用是什么？" class="headerlink" title="178、RabbitMQ中 vhost 的作用是什么？"></a>178、RabbitMQ中 vhost 的作用是什么？</h3><p>vhost可以理解为mini版的RabbitMQ，其内部均含有独立的交换机、绑定、队列，最重要的是拥有独立的权限系统，可以做到vhost范围内的用户控制。从RabbitMQ全局考虑，不同的应用可以跑在不同的vhost上，作为不同权限隔离的手段。</p><h3 id="179、说一下-jvm-的主要组成部分？及其作用？"><a href="#179、说一下-jvm-的主要组成部分？及其作用？" class="headerlink" title="179、说一下 jvm 的主要组成部分？及其作用？"></a>179、说一下 jvm 的主要组成部分？及其作用？</h3><p>JVM包括类加载子系统、堆、方法区、栈、本地方法栈、程序计数器、直接内存、垃圾回收器、执行引擎。</p><p>1、类加载子系统</p><p>类加载子系统负责加载class信息，加载的类信息存放于方法区中。</p><p>2、直接内存</p><p>直接内存是在Java堆外的、直接向系统申请的内存空间。访问直接内存的速度会由于Java堆。出于性能的考虑，读写频繁的场合可能会考虑使用直接内存。</p><p>3、垃圾回收器</p><p>垃圾回收器可以对堆、方法区、直接内存进行回收。</p><p>4、执行引擎</p><p>执行引擎负责执行虚拟机的字节码，虚拟机会使用即时编译技术将方法编译成机器码后再执行。</p><h3 id="180、说一下-jvm-运行时数据区？"><a href="#180、说一下-jvm-运行时数据区？" class="headerlink" title="180、说一下 jvm 运行时数据区？"></a>180、说一下 jvm 运行时数据区？</h3><p>运行时数据区包括堆、方法区、栈、本地方法栈、程序计数器。</p><p>1、堆</p><p>堆解决的是对象实例存储的问题，垃圾回收器管理的主要区域。</p><p>2、方法区</p><p>方法区可以认为是堆的一部分，用于存储已被虚拟机加载的信息，常量、静态变量、即时编译器编译后的代码。</p><p>3、栈</p><p>栈解决的是程序运行的问题，栈里面存的是栈帧，栈帧里面存的是局部变量表、操作数栈、动态链接、方法出口等信息。</p><p>（1）栈帧</p><p>每个方法从调用到执行的过程就是一个栈帧在虚拟机栈中入栈到出栈的过程。</p><p>（2）局部变量表</p><p>用于保存函数的参数和局部变量。</p><p>（3）操作数栈</p><p>操作数栈又称操作栈，大多数指令都是从这里弹出数据，执行运算，然后把结果压回操作数栈。</p><p>4、本地方法栈</p><p>与栈功能相同，本地方法栈执行的是本地方法，一个Java调用非Java代码的接口。</p><p>5、程序计数器（PC寄存器）</p><p>程序计数器中存放的是当前线程所执行的字节码的行数。JVM工作时就是通过改变这个计数器的值来选取下一个需要执行的字节码指令。</p><h3 id="181、什么是类加载器，类加载器有哪些？"><a href="#181、什么是类加载器，类加载器有哪些？" class="headerlink" title="181、什么是类加载器，类加载器有哪些？"></a>181、什么是类加载器，类加载器有哪些？</h3><p><img src="https://img-blog.csdnimg.cn/20210801183934528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3J1aV9qYXZh,size_16,color_FFFFFF,t_70"></p><p>1、什么是类加载器？</p><p>类加载器负责加载所有的类，其为所有被载入内存的类生成一个java.lang.Class实例对象。</p><p>2、类加载器有哪些？</p><p>JVM有三种类加载器：</p><p>（1）启动类加载器</p><p>该类没有父加载器，用来加载Java的核心类，启动类加载器的实现依赖于底层操作系统，属于虚拟机实现的一部分，它并不继承自java.lang.classLoader。</p><p>（2）扩展类加载器</p><p>它的父类为启动类加载器，扩展类加载器是纯java类，是ClassLoader类的子类，负责加载JRE的扩展目录。</p><p>（3）应用程序类加载器</p><p>它的父类为扩展类加载器，它从环境变量classpath或者系统属性java.lang.path所指定的目录中加载类，它是自定义的类加载器的父加载器。</p><h3 id="182、说一下类加载的执行过程？"><a href="#182、说一下类加载的执行过程？" class="headerlink" title="182、说一下类加载的执行过程？"></a>182、说一下类加载的执行过程？</h3><p>当程序主动使用某个类时，如果该类还未被加载到内存中，JVM会通过加载、连接、初始化3个步骤对该类进行类加载。</p><p>1、加载</p><p>加载指的是将类的class文件读入到内存中，并为之创建一个java.lang.Class对象。</p><p>类的加载由类加载器完成，类加载器由JVM提供，开发者也可以通过继承ClassLoader基类来创建自己的类加载器。</p><p>通过使用不同的类加载器可以从不同来源加载类的二进制数据，通常有如下几种来源：</p><ol><li>从本地文件系统加载</li><li>从jar包加载</li><li>通过网络加载</li><li>把一个Java源文件动态编译，并执行加载</li></ol><p>2、连接</p><p>当类被加载之后，系统为之生成一个对应的Class对象，接着进入连接阶段，连接阶段负责将类的二进制数据合并到JRE中。</p><p>类连接又可分为三个阶段：</p><p>（1）验证</p><p>文件格式验证<br>元数据验证<br>字节码验证<br>符号引用验证</p><p>（2）准备</p><p>为类的静态变量分配内存，并设置默认初始值。</p><p>（3）解析</p><p>将类的二进制数据中的符号引用替换成直接引用。</p><p>3、初始化</p><p>为类的静态变量赋予初始值。</p><h3 id="183、JVM的类加载机制是什么？"><a href="#183、JVM的类加载机制是什么？" class="headerlink" title="183、JVM的类加载机制是什么？"></a>183、JVM的类加载机制是什么？</h3><p>JVM类加载机制主要有三种：</p><p>1、全盘负责</p><p>类加载器加载某个class时，该class所依赖的和引用其它的class也由该类加载器载入。</p><p>2、双亲委派</p><p>先让父加载器加载该class，父加载器无法加载时才考虑自己加载。</p><p>3、缓存机制</p><p>缓存机制保证所有加载过的class都会被缓存，当程序中需要某个class时，先从缓存区中搜索，如果不存在，才会读取该类对应的二进制数据，并将其转换成class对象，存入缓存区中。</p><p>这就是为什么修改了class后，必须重启JVM，程序所做的修改才会生效的原因。</p><h3 id="184、什么是双亲委派模型？"><a href="#184、什么是双亲委派模型？" class="headerlink" title="184、什么是双亲委派模型？"></a>184、什么是双亲委派模型？</h3><p>如果一个类收到了类加载请求，它并不会自己先去加载，而是把这个请求委托给父类的加载器执行，如果父加载器还存在其父加载器，则进一步向上委托，依次递归，请求将最终到达顶层的启动类加载器，如果父类加载器可以完成父加载任务，就成功返回，如果父加载器无法完成加载任务，子加载器才会尝试自己去加载，这就是双亲委派模型。</p><p>双亲委派模式的优势：</p><ol><li>避免重复加载；</li><li>考虑到安全因素，java核心api中定义类型不会被随意替换，假设通过网络传递一个名为java.lang.Integer的类，通过双亲委派模式传递到启动加载器，而启动加载器在核心Java API中发现同名的类，发现该类已经被加载，就不会重新加载网络传递的Integer类，而直接返回已加载过的Integer.class，这样可以防止核心API库被随意篡改。</li></ol><h3 id="185、怎么判断对象是否可以被回收？"><a href="#185、怎么判断对象是否可以被回收？" class="headerlink" title="185、怎么判断对象是否可以被回收？"></a>185、怎么判断对象是否可以被回收？</h3><p>1、引用计数算法</p><p>（1）判断对象的引用数量</p><p>通过判断对象的引用数量来决定对象是否可以被回收；<br>每个对象实例都有一个引用计数器，被引用+1，完成引用-1；<br>任何引用计数为0的对象实例可以被当做垃圾回收；</p><p>（2）优缺点</p><p>优点：执行效率高，程序受影响较小；<br>缺点：无法检测出循环引用的情况，导致内存泄漏；</p><p>2、可达性分析算法</p><p>通过判断对象的引用链是否可达来决定对象是否可以被回收。</p><p>如果程序无法再引用该对象，那么这个对象肯定可以被回收，这个状态称为不可达。</p><p>那么不可达状态如何判断呢？</p><p>答案是GC roots，也就是根对象，如果一个对象无法到达根对象的路径，或者说从根对象无法引用到该对象，该对象就是不可达的。</p><p>以下三种对象在JVM中被称为GC roots，来判断一个对象是否可以被回收。</p><p>（1）虚拟机栈的栈帧</p><p>每个方法在执行的时候，JVM都会创建一个相应的栈帧（操作数栈、局部变量表、运行时常量池的引用），当方法执行完，该栈帧就从栈中弹出，这样一来，方法中临时创建的独享就不存在了，或者说没有任何GC roots指向这些临时对象，这些对象在下一次GC的时候便会被回收。</p><p>（2）方法区中的静态属性</p><p>静态属性数据类属性，不属于任何实例，因此该属性自然会作为GC roots。这要这个class在，该引用指向的对象就一直存在，class也由被回收的时候。</p><p>class何时会被回收？</p><ol><li>堆中不存在该类的任何实例</li><li>加载该类的classLoader已经被回收</li><li>该类的java.lang.class对象没有在任何地方被引用，也就是说无法通过反射访问该类的信息</li></ol><p>（3）本地方法栈引用的对象</p><h3 id="186、说一下-jvm-有哪些垃圾回收算法？"><a href="#186、说一下-jvm-有哪些垃圾回收算法？" class="headerlink" title="186、说一下 jvm 有哪些垃圾回收算法？"></a>186、说一下 jvm 有哪些垃圾回收算法？</h3><p>1、对象是否已死算法</p><ul><li>引用计数器算法</li><li>可达性分析算法</li></ul><p>2、GC算法</p><p>（1）标记清除算法</p><p>如果对象被标记后进行清除，会带来一个新的问题–内存碎片化。如果下次有比较大的对象实例需要在堆上分配较大的内存空间时，可能会出现无法找到足够的连续内存而不得不再次触发垃圾回收。</p><p>（2）复制算法（Java堆中新生代的垃圾回收算法）</p><ol><li>先标记待回收内存和不用回收内存；</li><li>将不用回收的内存复制到新的内存区域；</li><li>就的内存区域就可以被全部回收了，而新的内存区域也是连续的；</li></ol><p>缺点是损失部分系统内存，因为腾出部分内存进行复制。</p><p>（3）标记压缩算法（Java堆中老年代的垃圾回收算法）</p><p>对于新生代，大部分对象都不会存活，所以复制算法较高效，但对于老年代，大部分对象可能要继续存活，如果此时使用复制算法，效率会降低。</p><p>标记压缩算法首先还是标记，将不用回收的内存对象压缩到内存一端，此时即可清除边界处的内存，这样就能避免复制算法带来的效率问题，同时也能避免内存碎片化的问题。</p><p>老年代的垃圾回收算法称为”Major GC”。</p><h3 id="187、说一下-jvm-有哪些垃圾回收器？"><a href="#187、说一下-jvm-有哪些垃圾回收器？" class="headerlink" title="187、说一下 jvm 有哪些垃圾回收器？"></a>187、说一下 jvm 有哪些垃圾回收器？</h3><p><a href="https://blog.csdn.net/guorui_java/article/details/108405844" title="说一下 jvm 有哪些垃圾回收器？">说一下 jvm 有哪些垃圾回收器？</a></p><h3 id="188、JVM栈堆概念，何时销毁对象"><a href="#188、JVM栈堆概念，何时销毁对象" class="headerlink" title="188、JVM栈堆概念，何时销毁对象"></a>188、JVM栈堆概念，何时销毁对象</h3><ol><li>类在程序运行的时候就会被加载，方法是在执行的时候才会被加载，如果没有任何引用了，Java自动垃圾回收，也可以用System.gc()开启回收器，但是回收器不一定会马上回收。</li><li>静态变量在类装载的时候进行创建，在整个程序结束时按序销毁；</li><li>实例变量在类实例化对象时创建，在对象销毁的时候销毁；</li><li>局部变量在局部范围内使用时创建，跳出局部范围时销毁；</li></ol><h3 id="189、新生代垃圾回收器和老生代垃圾回收器都有哪些？有什么区别？"><a href="#189、新生代垃圾回收器和老生代垃圾回收器都有哪些？有什么区别？" class="headerlink" title="189、新生代垃圾回收器和老生代垃圾回收器都有哪些？有什么区别？"></a>189、新生代垃圾回收器和老生代垃圾回收器都有哪些？有什么区别？</h3><p>新生代回收器：Serial、ParNew、Parallel Scavenge</p><p>老年代回收器：Serial Old、Parallel Old、CMS</p><p>新生代回收器一般采用的是复制算法，复制算法效率较高，但是浪费内存；</p><p>老生代回收器一般采用标记清楚算法，比如最常用的CMS；</p><h3 id="190、详细介绍一下-CMS-垃圾回收器？"><a href="#190、详细介绍一下-CMS-垃圾回收器？" class="headerlink" title="190、详细介绍一下 CMS 垃圾回收器？"></a>190、详细介绍一下 CMS 垃圾回收器？</h3><p>CMS 垃圾回收器是Concurrent Mark Sweep，是一种同步的标记-清除，CMS分为四个阶段：</p><p>初始标记，标记一下GC Root能直接关联到的对象，会触发”Stop The World”；<br>并发标记，通过GC Roots Tracing判断对象是否在使用中；<br>重新标记，标记期间产生对象的再次判断，执行时间较短，会触发”Stop The World”；<br>并发清除，清除对象，可以和用户线程并发进行；</p><h3 id="191、简述分代垃圾回收器是怎么工作的？"><a href="#191、简述分代垃圾回收器是怎么工作的？" class="headerlink" title="191、简述分代垃圾回收器是怎么工作的？"></a>191、简述分代垃圾回收器是怎么工作的？</h3><p>分代回收器分为新生代和老年代，新生代大概占1/3，老年代大概占2/3；</p><p>新生代包括Eden、From Survivor、To Survivor；</p><p>Eden区和两个survivor区的 的空间比例 为8：1：1 ；</p><p>垃圾回收器的执行流程：</p><ol><li>把 Eden + From Survivor 存活的对象放入 To Survivor 区；</li><li>清空 Eden + From Survivor 分区，From Survivor 和 To Survivor 分区交换；</li><li>每次交换后存活的对象年龄+1，到达15，升级为老年代，大对象会直接进入老年代；</li><li>老年代中当空间到达一定占比，会触发全局回收，老年代一般采取标记-清除算法；</li></ol><h3 id="192、Redis是什么？"><a href="#192、Redis是什么？" class="headerlink" title="192、Redis是什么？"></a>192、Redis是什么？</h3><p>Redis是一个key-value存储系统，它支持存储的value类型相对更多，包括string、list、set、zset（sorted set –有序集合）和hash。这些数据结构都支持push/pop、add/remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。在此基础上，Redis支持各种不同方式的排序。为了保证效率，数据都是缓存在内存中，Redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave（主从）同步。</p><h3 id="193、Redis都有哪些使用场景？"><a href="#193、Redis都有哪些使用场景？" class="headerlink" title="193、Redis都有哪些使用场景？"></a>193、Redis都有哪些使用场景？</h3><ol><li>Redis是基于内存的nosql数据库，可以通过新建线程的形式进行持久化，不影响Redis单线程的读写操作</li><li>通过list取最新的N条数据</li><li>模拟类似于token这种需要设置过期时间的场景</li><li>发布订阅消息系统</li><li>定时器、计数器</li></ol><h3 id="194、Redis有哪些功能？"><a href="#194、Redis有哪些功能？" class="headerlink" title="194、Redis有哪些功能？"></a>194、Redis有哪些功能？</h3><p>1、基于本机内存的缓存</p><p>当调用api访问数据库时，假如此过程需要2秒，如果每次请求都要访问数据库，那将对服务器造成巨大的压力，如果将此sql的查询结果存到Redis中，再次请求时，直接从Redis中取得，而不是访问数据库，效率将得到巨大的提升，Redis可以定时去更新数据（比如1分钟）。</p><p>2、如果电脑重启，写入内存的数据是不是就失效了呢，这时Redis还提供了持久化的功能。</p><p>3、哨兵（Sentinel）和复制</p><p>Sentinel可以管理多个Redis服务器，它提供了监控、提醒以及自动的故障转移功能；</p><p>复制则是让Redis服务器可以配备备份的服务器；</p><p>Redis也是通过这两个功能保证Redis的高可用；</p><p>4、集群（Cluster）</p><p>单台服务器资源总是有上限的，CPU和IO资源可以通过主从复制，进行读写分离，把一部分CPU和IO的压力转移到从服务器上，但是内存资源怎么办，主从模式只是数据的备份，并不能扩充内存；</p><p>现在我们可以横向扩展，让每台服务器只负责一部分任务，然后将这些服务器构成一个整体，对外界来说，这一组服务器就像是集群一样。</p><h3 id="195、Redis支持的数据类型有哪些？"><a href="#195、Redis支持的数据类型有哪些？" class="headerlink" title="195、Redis支持的数据类型有哪些？"></a>195、Redis支持的数据类型有哪些？</h3><ol><li>字符串</li><li>hash</li><li>list</li><li>set</li><li>zset</li></ol><h3 id="196、Redis取值存值问题"><a href="#196、Redis取值存值问题" class="headerlink" title="196、Redis取值存值问题"></a>196、Redis取值存值问题</h3><p>1、先把Redis的连接池拿出来</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">JedisPool</span> <span class="variable">pool</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPool</span>(<span class="keyword">new</span> <span class="title class_">JedisPoolConfig</span>(),<span class="string">"127.0.0.1"</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> pool.getResource();</span><br></pre></td></tr></tbody></table></figure><p>2、存取值</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">jedis.set(<span class="string">"key"</span>,<span class="string">"value"</span>);</span><br><span class="line">jedis.get(<span class="string">"key"</span>);</span><br><span class="line">jedis.del(<span class="string">"key"</span>);</span><br><span class="line"><span class="comment">//给一个key叠加value</span></span><br><span class="line">jedis.append(<span class="string">"key"</span>,<span class="string">"value2"</span>);<span class="comment">//此时key的值就是value + value2;</span></span><br><span class="line"><span class="comment">//同时给多个key进行赋值：</span></span><br><span class="line">jedis.mset(<span class="string">"key1"</span>,<span class="string">"value1"</span>,<span class="string">"key2"</span>,<span class="string">"value2"</span>);</span><br></pre></td></tr></tbody></table></figure><p>3、对map进行操作</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Map</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">user.put(<span class="string">"key1"</span>,<span class="string">"value1"</span>);</span><br><span class="line">user.put(<span class="string">"key2"</span>,<span class="string">"value2"</span>);</span><br><span class="line">user.put(<span class="string">"key3"</span>,<span class="string">"value3"</span>);</span><br><span class="line"><span class="comment">//存入</span></span><br><span class="line">jedis.hmset(<span class="string">"user"</span>,user);</span><br><span class="line"><span class="comment">//取出user中key1</span></span><br><span class="line"><span class="type">List</span> <span class="variable">nameMap</span> <span class="operator">=</span> jedis.hmget(<span class="string">"user"</span>,<span class="string">"key1"</span>);</span><br><span class="line"><span class="comment">//删除其中一个键值</span></span><br><span class="line">jedis.hdel(<span class="string">"user"</span>,<span class="string">"key2"</span>);</span><br><span class="line"><span class="comment">//是否存在一个键</span></span><br><span class="line">jedis.exists(<span class="string">"user"</span>);</span><br><span class="line"><span class="comment">//取出所有的Map中的值：</span></span><br><span class="line"><span class="type">Iterator</span> <span class="variable">iter</span> <span class="operator">=</span> jedis.hkeys(<span class="string">"user"</span>).iterator();</span><br><span class="line"><span class="keyword">while</span>(iter.next()){</span><br><span class="line">    jedis.hmget(<span class="string">"user"</span>,iter.next());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="197、Redis为什么是单线程的？"><a href="#197、Redis为什么是单线程的？" class="headerlink" title="197、Redis为什么是单线程的？"></a>197、Redis为什么是单线程的？</h3><ol><li>代码更清晰，处理逻辑更简单；</li><li>不用考虑各种锁的问题，不存在加锁和释放锁的操作，没有因为可能出现死锁而导致的性能问题；</li><li>不存在多线程切换而消耗CPU；</li><li>无法发挥多核CPU的优势，但可以采用多开几个Redis实例来完善；</li></ol><h3 id="198、Redis真的是单线程的吗？"><a href="#198、Redis真的是单线程的吗？" class="headerlink" title="198、Redis真的是单线程的吗？"></a>198、Redis真的是单线程的吗？</h3><p>Redis6.0之前是单线程的，Redis6.0之后开始支持多线程；<br>redis内部使用了基于epoll的多路服用，也可以多部署几个redis服务器解决单线程的问题；<br>redis主要的性能瓶颈是内存和网络；<br>内存好说，加内存条就行了，而网络才是大麻烦，所以redis6内存好说，加内存条就行了；<br>而网络才是大麻烦，所以redis6.0引入了多线程的概念，<br>redis6.0在网络IO处理方面引入了多线程，如网络数据的读写和协议解析等，需要注意的是，执行命令的核心模块还是单线程的。</p><h3 id="199、Redis持久化有几种方式？"><a href="#199、Redis持久化有几种方式？" class="headerlink" title="199、Redis持久化有几种方式？"></a>199、Redis持久化有几种方式？</h3><p>redis提供了两种持久化的方式，分别是RDB（Redis DataBase）和AOF（Append Only File）。</p><p>RDB，简而言之，就是在不同的时间点，将redis存储的数据生成快照并存储到磁盘等介质上；</p><p>AOF，则是换了一个角度来实现持久化，那就是将redis执行过的所有写指令记录下来，在下次redis重新启动时，只要把这些写指令从前到后再重复执行一遍，就可以实现数据恢复了。</p><p>其实RDB和AOF两种方式也可以同时使用，在这种情况下，如果redis重启的话，则会优先采用AOF方式来进行数据恢复，这是因为AOF方式的数据恢复完整度更高。</p><p>如果你没有数据持久化的需求，也完全可以关闭RDB和AOF方式，这样的话，redis将变成一个纯内存数据库，就像memcache一样。</p><h3 id="200、Redis和-memecache-有什么区别？"><a href="#200、Redis和-memecache-有什么区别？" class="headerlink" title="200、Redis和 memecache 有什么区别？"></a>200、Redis和 memecache 有什么区别？</h3><p>1、Redis相比memecache，拥有更多的数据结构和支持更丰富的数据操作。</p><p>（1）Redis支持key-value，常用的数据类型主要有String、Hash、List、Set、Sorted Set。</p><p>（2）memecache只支持key-value。</p><p>2、内存使用率对比，Redis采用hash结构来做key-value存储，由于其组合式的压缩，其内存利用率会高于memecache。</p><p>3、性能对比：Redis只使用单核，memecache使用多核。</p><p>4、Redis支持磁盘持久化，memecache不支持。</p><p>Redis可以将一些很久没用到的value通过swap方法交换到磁盘。</p><p>5、Redis支持分布式集群，memecache不支持。</p><h3 id="201、Redis支持的-java-客户端都有哪些？"><a href="#201、Redis支持的-java-客户端都有哪些？" class="headerlink" title="201、Redis支持的 java 客户端都有哪些？"></a>201、Redis支持的 java 客户端都有哪些？</h3><p>Redisson、Jedis、lettuce 等等，官方推荐使用 Redisson。</p><h3 id="202、jedis-和-redisson-有哪些区别？"><a href="#202、jedis-和-redisson-有哪些区别？" class="headerlink" title="202、jedis 和 redisson 有哪些区别？"></a>202、jedis 和 redisson 有哪些区别？</h3><p>Jedis 和 Redisson 都是Java中对Redis操作的封装。Jedis 只是简单的封装了 Redis 的API库，可以看作是Redis客户端，它的方法和Redis 的命令很类似。Redisson 不仅封装了 redis ，还封装了对更多数据结构的支持，以及锁等功能，相比于Jedis 更加大。但Jedis相比于Redisson 更原生一些，更灵活。</p><h3 id="203、什么是缓存穿透？怎么解决？"><a href="#203、什么是缓存穿透？怎么解决？" class="headerlink" title="203、什么是缓存穿透？怎么解决？"></a>203、什么是缓存穿透？怎么解决？</h3><p>1、缓存穿透</p><p>一般的缓存系统，都是按照key去缓存查询，如果不存在对用的value，就应该去后端系统查找（比如DB数据库）。一些恶意的请求会故意查询不存在的key，请求量很大，就会对后端系统造成很大的压力。这就叫做缓存穿透。</p><p>2、怎么解决？</p><p>对查询结果为空的情况也进行缓存，缓存时间设置短一点，或者该key对应的数据insert之后清理缓存。</p><p>对一定不存在的key进行过滤。可以把所有的可能存在的key放到一个大的Bitmap中，查询时通过该Bitmap过滤。</p><p>3、缓存雪崩</p><p>当缓存服务器重启或者大量缓存集中在某一时间段失效，这样在失效的时候，会给后端系统带来很大的压力，导致系统崩溃。</p><p>4、如何解决？</p><ol><li>在缓存失效后，通过加锁或者队列来控制读数据库写缓存的线程数量。比如对某个key只允许一个线程查询数据和写缓存，其它线程等待；</li><li>做二级缓存；</li><li>不同的key，设置不同的过期时间，让缓存失效的时间尽量均匀；</li></ol><h3 id="204、怎么保证缓存和数据库数据的一致性？"><a href="#204、怎么保证缓存和数据库数据的一致性？" class="headerlink" title="204、怎么保证缓存和数据库数据的一致性？"></a>204、怎么保证缓存和数据库数据的一致性？</h3><p>1、淘汰缓存</p><p>数据如果为较为复杂的数据时，进行缓存的更新操作就会变得异常复杂，因此一般推荐选择淘汰缓存，而不是更新缓存。</p><p>2、选择先淘汰缓存，再更新数据库</p><p>假如先更新数据库，再淘汰缓存，如果淘汰缓存失败，那么后面的请求都会得到脏数据，直至缓存过期。</p><p>假如先淘汰缓存再更新数据库，如果更新数据库失败，只会产生一次缓存穿透，相比较而言，后者对业务则没有本质上的影响。</p><p>3、延时双删策略</p><p>如下场景：同时有一个请求A进行更新操作，另一个请求B进行查询操作。</p><ol><li>请求A进行写操作，删除缓存</li><li>请求B查询发现缓存不存在</li><li>请求B去数据库查询得到旧值</li><li>请求B将旧值写入缓存</li><li>请求A将新值写入数据库</li></ol><p>次数便出现了数据不一致问题。采用延时双删策略得以解决。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">(String key,Object data)</span>{</span><br><span class="line">    redisUtils.del(key);</span><br><span class="line">    db.update(data);</span><br><span class="line">    Thread.Sleep(<span class="number">100</span>);</span><br><span class="line">    redisUtils.del(key);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这么做，可以将1秒内所造成的缓存脏数据，再次删除。这个时间设定可根据俄业务场景进行一个调节。</p><p>4、数据库读写分离的场景</p><p>两个请求，一个请求A进行更新操作，另一个请求B进行查询操作。</p><ol><li>请求A进行写操作，删除缓存</li><li>请求A将数据写入数据库了，</li><li>请求B查询缓存发现，缓存没有值</li><li>请求B去从库查询，这时，还没有完成主从同步，因此查询到的是旧值</li><li>请求B将旧值写入缓存</li><li>数据库完成主从同步，从库变为新值</li></ol><p>依旧采用延时双删策略解决此问题。</p><h3 id="205、Redis，什么是缓存穿透？怎么解决？"><a href="#205、Redis，什么是缓存穿透？怎么解决？" class="headerlink" title="205、Redis，什么是缓存穿透？怎么解决？"></a>205、Redis，什么是缓存穿透？怎么解决？</h3><p>1、缓存穿透</p><p>一般的缓存系统，都是按照key去缓存查询，如果不存在对用的value，就应该去后端系统查找（比如DB数据库）。一些恶意的请求会故意查询不存在的key，请求量很大，就会对后端系统造成很大的压力。这就叫做缓存穿透。</p><p>2、怎么解决？</p><p>对查询结果为空的情况也进行缓存，缓存时间设置短一点，或者该key对应的数据insert之后清理缓存。</p><p>对一定不存在的key进行过滤。可以把所有的可能存在的key放到一个大的Bitmap中，查询时通过该Bitmap过滤。</p><p>3、缓存雪崩</p><p>当缓存服务器重启或者大量缓存集中在某一时间段失效，这样在失效的时候，会给后端系统带来很大的压力，导致系统崩溃。</p><p>4、如何解决？</p><ol><li>在缓存失效后，通过加锁或者队列来控制读数据库写缓存的线程数量。比如对某个key只允许一个线程查询数据和写缓存，其它线程等待；</li><li>做二级缓存；</li><li>不同的key，设置不同的过期时间，让缓存失效的时间尽量均匀；</li></ol><h3 id="206、Redis怎么实现分布式锁？"><a href="#206、Redis怎么实现分布式锁？" class="headerlink" title="206、Redis怎么实现分布式锁？"></a>206、Redis怎么实现分布式锁？</h3><p>使用Redis实现分布式锁</p><p>redis命令：set users 10 nx ex 12 原子性命令</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用uuid，解决锁释放的问题</span></span><br><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testLock</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException {</span><br><span class="line">    <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">b_lock</span> <span class="operator">=</span> redisTemplate.opsForValue().setIfAbsent(<span class="string">"lock"</span>, uuid, <span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line">    <span class="keyword">if</span>(b_lock){</span><br><span class="line">        <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> redisTemplate.opsForValue().get(<span class="string">"num"</span>);</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(value)){</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> Integer.parseInt(value + <span class="string">""</span>);</span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">"num"</span>,++num);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">lockUUID</span> <span class="operator">=</span> redisTemplate.opsForValue().get(<span class="string">"lock"</span>);</span><br><span class="line">        <span class="keyword">if</span>(uuid.equals(lockUUID.toString())){</span><br><span class="line">            redisTemplate.delete(<span class="string">"lock"</span>);</span><br><span class="line">        }</span><br><span class="line">    }<span class="keyword">else</span>{</span><br><span class="line">        Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        testLock();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>备注：可以通过lua脚本，保证分布式锁的原子性。</p><h3 id="207、Redis分布式锁有什么缺陷？"><a href="#207、Redis分布式锁有什么缺陷？" class="headerlink" title="207、Redis分布式锁有什么缺陷？"></a>207、Redis分布式锁有什么缺陷？</h3><p>Redis 分布式锁不能解决超时的问题，分布式锁有一个超时时间，程序的执行如果超出了锁的超时时间就会出现问题。</p><p>Redis容易产生的几个问题：</p><ol><li>锁未被释放</li><li>B锁被A锁释放了</li><li>数据库事务超时</li><li>锁过期了，业务还没执行完</li><li>Redis主从复制的问题</li></ol><h3 id="208、Redis如何做内存优化？"><a href="#208、Redis如何做内存优化？" class="headerlink" title="208、Redis如何做内存优化？"></a>208、Redis如何做内存优化？</h3><p>1、缩短键值的长度</p><ol><li>缩短值的长度才是关键，如果值是一个大的业务对象，可以将对象序列化成二进制数组；</li><li>首先应该在业务上进行精简，去掉不必要的属性，避免存储一些没用的数据；</li><li>其次是序列化的工具选择上，应该选择更高效的序列化工具来降低字节数组大小；</li><li>以JAVA为例，内置的序列化方式无论从速度还是压缩比都不尽如人意，这时可以选择更高效的序列化工具，如: protostuff，kryo等</li></ol><p>2、共享对象池</p><p>对象共享池指Redis内部维护[0-9999]的整数对象池。创建大量的整数类型redisObject存在内存开销，每个redisObject内部结构至少占16字节，甚至超过了整数自身空间消耗。所以Redis内存维护一个[0-9999]的整数对象池，用于节约内存。 除了整数值对象，其他类型如list,hash,set,zset内部元素也可以使用整数对象池。因此开发中在满足需求的前提下，尽量使用整数对象以节省内存。</p><p>3、字符串优化</p><p>4、编码优化</p><p>5、控制key的数量</p><blockquote><p>🍅 作者简介：哪吒，CSDN2021博客之星亚军🏆、新星计划导师✌、博客专家💪<br>🍅 哪吒多年工作总结：<a href="https://blog.csdn.net/guorui_java/article/details/120098618" title="Java学习路线总结，搬砖工逆袭Java架构师">Java学习路线总结，搬砖工逆袭Java架构师</a><br>🍅 技术交流：<a href="https://bbs.csdn.net/topics/607729516" title="定期更新Java硬核干货，不定期送书活动">定期更新Java硬核干货，不定期送书活动</a><br>🍅 <strong>关注公众号【哪吒编程】，回复 面试题</strong>，获取《10万字208道Java经典面试题总结(附答案)》 <strong>pdf</strong>，背题更方便，一文在手，面试我有</p></blockquote><p><img src="https://img-blog.csdnimg.cn/7a795a91f31b4360a55a6c2439b20141.gif"></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>csdn博客转markdown</title>
      <link href="/2024/04/16/128750716/"/>
      <url>/2024/04/16/128750716/</url>
      
        <content type="html"><![CDATA[<p>近期完成了csdn上的部分博客转到个人博客上，csdn使用的传统编辑器，个人博客使用的markdown，所以下面分享一下两者之间转化。</p><h5 id="1-安装nodejs和npm，这两步网上教程很多，可以参考下网上"><a href="#1-安装nodejs和npm，这两步网上教程很多，可以参考下网上" class="headerlink" title="1. 安装nodejs和npm，这两步网上教程很多，可以参考下网上"></a>1. 安装nodejs和npm，这两步网上教程很多，可以参考下网上</h5><h5 id="2-安装clean-mark"><a href="#2-安装clean-mark" class="headerlink" title="2.安装clean-mark"></a>2.安装clean-mark</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install clean-mark --global</span><br></pre></td></tr></tbody></table></figure><p>该工具可以将我们的博客做一个初步的转markdown,用法如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clean-mark "https://blog.csdn.net/yyy/article/details/xxx"</span><br></pre></td></tr></tbody></table></figure><p>双引号内部为某篇具体需要转换的博文链接，转换成功后在当前目录下会出现xxx.md</p><h5 id="3-对md文件做进一步的修正"><a href="#3-对md文件做进一步的修正" class="headerlink" title="3.对md文件做进一步的修正"></a>3.对md文件做进一步的修正</h5><p>使用clean-mark工具转换的md目前有两个问题</p><ol><li>图片，使用的图片链接会是csdn服务器上的图片，并带有水印，需要将去除水印的图片下载到本地，并将md文件中的链接替换为本地图片链接</li><li>乱码，在一些未识别编程语言的代码片中，中文会出现乱码，形如变，这是XML字符实体的一种表示形式，，&amp;#x表示十六进制<br>由于需要修正的md文件很多，一个个处理很不方便，所以将需要转换的博客通过第二步转换后同一在一个目录，然后编写程序，只要扫描到该目录下的md文件，就进行修正</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CsdnHandle</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">fileRoot</span> <span class="operator">=</span> <span class="string">"H:\\CSDN"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">artImgFilePath</span> <span class="operator">=</span> <span class="string">"file://D:/Program Files/Gridea/post-images/"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">CsdnHandle</span> <span class="variable">handle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CsdnHandle</span>();</span><br><span class="line">        handle.process();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">process</span><span class="params">()</span> {</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">imgRoot</span> <span class="operator">=</span> fileRoot+<span class="string">"\\img\\"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tomd</span> <span class="operator">=</span> fileRoot+<span class="string">"\\tomd\\"</span>;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(imgRoot);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) {</span><br><span class="line">            file.mkdirs();</span><br><span class="line">        }</span><br><span class="line">        file = <span class="keyword">new</span> <span class="title class_">File</span>(tomd);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) {</span><br><span class="line">            file.mkdirs();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        file = <span class="keyword">new</span> <span class="title class_">File</span>(fileRoot);</span><br><span class="line">        File[] fileArray = file.listFiles();</span><br><span class="line">        <span class="keyword">for</span> (File file1 : fileArray) {</span><br><span class="line">            <span class="keyword">if</span> (!file1.isDirectory()) {</span><br><span class="line"></span><br><span class="line">                <span class="type">Integer</span> <span class="variable">hz</span> <span class="operator">=</span> file1.getAbsolutePath().indexOf(<span class="string">".md"</span>);</span><br><span class="line">                <span class="keyword">if</span> (hz != -<span class="number">1</span>) {</span><br><span class="line">                    conversionMd(file1,imgRoot,tomd);</span><br><span class="line">                    System.out.println(file1.getName() + <span class="string">" ok"</span>);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">conversionMd</span><span class="params">(File file,String imgRootPath,String toMdPath)</span> {</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; allLines = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            allLines = Files.readAllLines(Paths.get(file.getAbsolutePath()));</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">        <span class="type">int</span> <span class="variable">head</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">title</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">pattern</span> <span class="operator">=</span> Pattern.compile(<span class="string">"!\\[]\\(.*?\\)"</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">imgId</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">bw</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (String line : allLines) {</span><br><span class="line">            <span class="keyword">if</span>(line.equals(<span class="string">"---"</span>)) {</span><br><span class="line">                head++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(head == <span class="number">1</span>) {</span><br><span class="line">                <span class="keyword">if</span>(line.indexOf(<span class="string">"title: "</span>) != -<span class="number">1</span>) {</span><br><span class="line">                    title = line.substring(<span class="string">"title: "</span>.length());</span><br><span class="line">                    title = title.replace(<span class="string">" "</span>,<span class="string">"之"</span>);</span><br><span class="line">                    title = title.replace(<span class="string">"-"</span>,<span class="string">"之"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="type">File</span> <span class="variable">mdfile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(toMdPath+title+<span class="string">".md"</span>);</span><br><span class="line">                    <span class="keyword">try</span> {</span><br><span class="line">                        out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(mdfile);</span><br><span class="line">                        bw=<span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(out,<span class="string">"utf-8"</span>));</span><br><span class="line">                    } <span class="keyword">catch</span> (FileNotFoundException e) {</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    } <span class="keyword">catch</span> (UnsupportedEncodingException e) {</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(head == <span class="number">2</span> &amp;&amp; title != <span class="literal">null</span> &amp;&amp; bw != <span class="literal">null</span>) {</span><br><span class="line">                <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> pattern.matcher(line);</span><br><span class="line">                <span class="keyword">while</span> (matcher.find()) {</span><br><span class="line">                    <span class="type">String</span> <span class="variable">httpLink</span> <span class="operator">=</span> matcher.group(<span class="number">0</span>).substring(<span class="number">4</span>,matcher.group(<span class="number">0</span>).length()-<span class="number">1</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> linkSaveImg(imgId, title,imgRootPath,httpLink);</span><br><span class="line">                    line = line.replace(httpLink, path);</span><br><span class="line">                    imgId++;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">try</span> {</span><br><span class="line">                    bw.write(unescape(line));</span><br><span class="line">                    bw.newLine();</span><br><span class="line">                } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">if</span>(bw != <span class="literal">null</span>)</span><br><span class="line">                bw.close();</span><br><span class="line">            <span class="keyword">if</span>(out != <span class="literal">null</span>)</span><br><span class="line">                out.close();</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">linkSaveImg</span><span class="params">(<span class="type">int</span> imgId, String title,String filePath,String http)</span> {</span><br><span class="line"></span><br><span class="line">        String sp[] = http.split(<span class="string">"\\?"</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">suffix</span> <span class="operator">=</span> sp[<span class="number">0</span>].substring(sp[<span class="number">0</span>].lastIndexOf(<span class="string">"."</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(sp[<span class="number">0</span>]);</span><br><span class="line">            <span class="type">HttpURLConnection</span> <span class="variable">conn</span> <span class="operator">=</span> (HttpURLConnection) url.openConnection();</span><br><span class="line"></span><br><span class="line">            conn.setConnectTimeout(<span class="number">3</span> * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">            conn.setRequestProperty(<span class="string">"User-Agent"</span>, <span class="string">"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> conn.getInputStream();</span><br><span class="line"></span><br><span class="line">            <span class="type">byte</span>[] getData = readInputStream(inputStream);</span><br><span class="line"></span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(filePath+title+<span class="string">"_"</span>+imgId+suffix);</span><br><span class="line">            <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">            fos.write(getData);</span><br><span class="line">            <span class="keyword">if</span> (fos != <span class="literal">null</span>) {</span><br><span class="line">                fos.close();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (inputStream != <span class="literal">null</span>) {</span><br><span class="line">                inputStream.close();</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> artImgFilePath+title+<span class="string">"_"</span>+imgId+suffix;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] readInputStream(InputStream inputStream) <span class="keyword">throws</span> IOException {</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="keyword">while</span> ((len = inputStream.read(buffer)) != -<span class="number">1</span>) {</span><br><span class="line">            bos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">        }</span><br><span class="line">        bos.close();</span><br><span class="line">        <span class="keyword">return</span> bos.toByteArray();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">unescape</span><span class="params">(String src)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>((index=src.indexOf(<span class="string">""</span>&amp;#x<span class="string">")) != -1) {</span></span><br><span class="line"><span class="string">            String data = src.substring(index+3,index+7);</span></span><br><span class="line"><span class="string">            char ch = (char) Integer.parseInt(data, 16);</span></span><br><span class="line"><span class="string">            src = src.replace("</span><span class="string">"&amp;#x"</span>+data+<span class="string">";"</span>,<span class="string">""</span>+ch);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> src;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>使用Java编写这个程序的主要原因是网络相关操作真香！</p><h4 id="上面分享的是传统编辑器转markdown，如果本身博文就是使用markdown编写，那么有个可全部打包下载的方案"><a href="#上面分享的是传统编辑器转markdown，如果本身博文就是使用markdown编写，那么有个可全部打包下载的方案" class="headerlink" title="上面分享的是传统编辑器转markdown，如果本身博文就是使用markdown编写，那么有个可全部打包下载的方案"></a>上面分享的是传统编辑器转markdown，如果本身博文就是使用markdown编写，那么有个可全部打包下载的方案</h4><p><img src="https://img-blog.csdnimg.cn/e21fdcb2b58646a79d829a409f443527.png#pic_center"><br>链接打开会发现是一个404，没错，不用怀疑是操作错了。</p><h5 id="2-F12-console"><a href="#2-F12-console" class="headerlink" title=";  2.F12 -> console"></a><a name="2f12__console_194">;</a>  2.F12 -&gt; console</h5><p>在该404界面F12打开 开发者工具，并选择控制台（console）<br>输入如下代码回车</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var s=document.createElement('script');s.type='text/javascript';document.body.appendChild(s);s.src='//cdn.jsdelivr.net/gh/ame-yu/csdn-move@latest/dist/index.js';</span><br></pre></td></tr></tbody></table></figure><p><img src="https://img-blog.csdnimg.cn/10f3bf04255b479b83ad5bb881dc57f4.jpeg#pic_center"></p><p>稍等片刻便可打包下载一个zip文件，里面包含所有的md文章，文章数越多，其等待时间越长，可将鼠标放置浏览器标签页查看其打包进度情况。<br><img src="https://img-blog.csdnimg.cn/70b9eb3d7ecf4fe2b244ed4afd86a270.jpeg#pic_center"></p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>介绍一些免费好用的静态网站托管服务</title>
      <link href="/2024/03/30/120873489/"/>
      <url>/2024/03/30/120873489/</url>
      
        <content type="html"><![CDATA[<h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul><li>自带域名可 https 访问</li><li>可配置自定义域名</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li>无法给自定义域名配置 SSL</li></ul><p>跟 GitHub Pages 的功能一样，但是：</p><ul><li>无法自定义域名</li><li>能且只能通过 https 协议访问（http 协议会被跳转到 https 协议）</li><li>所有项目的静态网站代码都只能放在专门的站点仓库里（accountName.bitbucket.io），不能像 GitHub 那样可以在每个项目里用 gh-pages 分支保存文件</li></ul><p>Bitbucket 旗下的静态网站托管服务。</p><ul><li>可以使用 CLI 上传代码</li><li>支持自动构建（Continuous Deployment）</li><li>可以自定义域名但是是收费功能，自定义域名支持 https 且不需要提供证书，它会帮你生成一个</li></ul><p>同样跟 GitHub Pages 的功能一样，但是：</p><ul><li><p>自定义域名可配置 https，不过需要上传证书</p></li><li><p>只能使用 CLI 上传代码</p></li><li><p>支持自定义域名，但开启 SSL 是收费功能且需要自行上传证书</p></li><li><p>支持 200.html —— 适用于使用 History API 的 SPA</p></li><li><p>只能使用 CLI 上传代码</p></li><li><p>支持自定义域名并支持一键开启 https</p></li><li><p>支持重定向（Redirects）和重写（Rewrites）功能（当网站使用 History API 时特别有用</p></li><li><p>有被墙的风险……</p></li><li><p>可以使用 CLI 上传代码</p></li><li><p>支持自定义域名且自定义域名支持一键开启 https（证书来自 Let’s Encrype）</p></li><li><p>支持强制让用户通过 https 访问网站（开启后此功能后，http 的访问一律会 <strong>301</strong> 跳转到 https</p></li><li><p>支持自动构建</p></li><li><p>支持重定向（Redirects）和重写（Rewrites）功能</p></li><li><p>数据通过 HTTP2 协议传输</p></li><li><p>提供 webhooks 与 API</p></li><li><p>可以使用 CLI 上传代码，或者链接一个 Git 仓库</p></li><li><p>不仅提供静态网站托管，同时也支持托管 Node.js 服务</p></li><li><p>支持自定义域名且自定义域名支持一键开启 https（证书来自 Let’s Encrype）</p></li><li><p>数据通过 HTTP2 协议传输</p></li><li><p>提供 API</p></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>推荐使用 <a href="https://www.netlify.com/" title="Netlify">Netlify</a>，如果要顺便托管 Node.js 服务可以用 <a href="https://zeit.co/now" title="now">now</a>。</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 托管 </tag>
            
            <tag> 推荐 </tag>
            
            <tag> github </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Github]hexo-boot-master</title>
      <link href="/2023/11/05/5683896891/"/>
      <url>/2023/11/05/5683896891/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.pixelbbs.cn/source/plugin/bphp_clouds/upload/4438/20240601/2f2766a8d8c69d8ccf60e1bc923b7057.zip">打包下载</a></p><h2>注意： Hexo Boot 4.0 版本项目代码结构大调整</h2><h3>调整内容看下文第八点</h3><h2 id="一、Hexo-Boot"><a href="#一、Hexo-Boot" class="headerlink" title="一、Hexo Boot"></a>一、Hexo Boot</h2><p>Hexo Boot 是基于 Spring Boot + MySQL 开发的一套开源的博客系统。前身是 <a href="https://github.com/moonlightL/ml-blog">ml-blog</a> 博客系统，在此基础上演变和扩展而来。</p><p><a href="https://github.com/moonlightL/ml-blog/blob/master/LICENSE"><img src="https://img.shields.io/badge/license-MIT-brightgreen.svg"></a><br><img src="https://img.shields.io/badge/language-Java-blue.svg"></p><h2 id="二、扩展功能"><a href="#二、扩展功能" class="headerlink" title="二、扩展功能"></a>二、扩展功能</h2><p>除了继承 <a href="https://github.com/moonlightL/ml-blog">ml-blog</a> 中的功能（文章、分类、标签、全局参数）外，Hexo Boot 还扩展了一下功能</p><h3 id="2-1-评论、留言功能"><a href="#2-1-评论、留言功能" class="headerlink" title="2.1 评论、留言功能"></a>2.1 评论、留言功能</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">轻松查看网友的评论与留言，及时互动，同时还附带表情功能，丰富回复内容</span><br></pre></td></tr></tbody></table></figure><h3 id="2-2-友链功能"><a href="#2-2-友链功能" class="headerlink" title="2.2 友链功能"></a>2.2 友链功能</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">与网友互换主页，友好分享</span><br></pre></td></tr></tbody></table></figure><h3 id="2-3-主题功能"><a href="#2-3-主题功能" class="headerlink" title="2.3 主题功能"></a>2.3 主题功能</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">支持前端页面主题动态变换以及在线编辑源码，让页面色彩丰富起来，同时支持自定义主题</span><br></pre></td></tr></tbody></table></figure><h3 id="2-4-黑名单功能"><a href="#2-4-黑名单功能" class="headerlink" title="2.4 黑名单功能"></a>2.4 黑名单功能</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设置 ip 黑名单，防御网络小人恶意攻击系统</span><br></pre></td></tr></tbody></table></figure><h3 id="2-5-附件功能"><a href="#2-5-附件功能" class="headerlink" title="2.5 附件功能"></a>2.5 附件功能</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">支持本地、七牛云、OSS、COS 4种对象存储方式</span><br></pre></td></tr></tbody></table></figure><h3 id="2-6-备份功能"><a href="#2-6-备份功能" class="headerlink" title="2.6 备份功能"></a>2.6 备份功能</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">支持自动和手动备份SQL数据，防患数据丢失</span><br></pre></td></tr></tbody></table></figure><h3 id="2-7-音乐播放"><a href="#2-7-音乐播放" class="headerlink" title="2.7 音乐播放"></a>2.7 音乐播放</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">支持音乐配置管理以及在线播放，切换页面不中断</span><br></pre></td></tr></tbody></table></figure><h3 id="2-8-动态"><a href="#2-8-动态" class="headerlink" title="2.8 动态"></a>2.8 动态</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">发表个人心情（支持图片、视频和 emoji 表情）、名人名言等简短信息</span><br></pre></td></tr></tbody></table></figure><h3 id="2-9-默认主题特色"><a href="#2-9-默认主题特色" class="headerlink" title="2.9 默认主题特色"></a>2.9 默认主题特色</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">支持 CDN 配置</span><br><span class="line">图片延迟加载</span><br><span class="line">图片灯箱</span><br><span class="line">夜间模式</span><br><span class="line">音乐播放</span><br><span class="line">打赏功能</span><br><span class="line">点赞功能</span><br><span class="line">评论功能（支持两种：默认和Twikoo）</span><br><span class="line">文章布局（支持两种：卡片和列表）</span><br><span class="line">实现 pjax </span><br></pre></td></tr></tbody></table></figure><p>更多详情请访问下边提供的网址进行浏览。</p><h3 id="2-10-插件管理"><a href="#2-10-插件管理" class="headerlink" title="2.10 插件管理"></a>2.10 插件管理</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">支持模块化功能开发，模块热插拔，实现功能定制化（4.0版本新增）</span><br></pre></td></tr></tbody></table></figure><h2 id="三、预览效果"><a href="#三、预览效果" class="headerlink" title="三、预览效果"></a>三、预览效果</h2><p><a href="https://www.liuyj.top/">网站演示1（默认主题）</a> </p><p><a href="https://wno704.top/">网站演示2（默认主题）</a> </p><p><a href="https://www.extlight.com/">网站演示3（私人订制）</a> </p><h3 id="3-1-后台管理预览图"><a href="#3-1-后台管理预览图" class="headerlink" title="3.1 后台管理预览图"></a>3.1 后台管理预览图</h3><p><img src="https://images.extlight.com/hexo-boot-00.jpg" alt="安装页面"></p><p><img src="https://images.extlight.com/hexo-boot-01.jpg" alt="仪表盘页面"></p><p><img src="https://images.extlight.com/hexo-boot-02.jpg" alt="文章页面"></p><p><img src="https://images.extlight.com/hexo-boot-03.jpg" alt="评论页面"></p><p><img src="https://images.extlight.com/hexo-boot-04.jpg" alt="参数配置页面"></p><p><img src="https://images.extlight.com/hexo-boot-05.jpg" alt="个人详情页面"></p><p><img src="https://images.extlight.com/hexo-boot-06.jpg" alt="数据备份页面"></p><p><img src="https://images.extlight.com/hexo-boot-07.jpg" alt="黑名单页面"></p><p><img src="https://images.extlight.com/hexo-boot-08.jpg" alt="附件页面"></p><p><img src="https://images.extlight.com/hexo-boot-09.jpg" alt="主题列表页面"></p><p><img src="https://images.extlight.com/hexo-boot-10.jpg" alt="修改主题源码页面"></p><h3 id="3-2-前端预览图-默认主题"><a href="#3-2-前端预览图-默认主题" class="headerlink" title="3.2 前端预览图(默认主题)"></a>3.2 前端预览图(默认主题)</h3><p><img src="https://images.extlight.com/hexo-boot-theme-default.jpg"></p><h2 id="四、启动与部署"><a href="#四、启动与部署" class="headerlink" title="四、启动与部署"></a>四、启动与部署</h2><h3 id="4-1-启动"><a href="#4-1-启动" class="headerlink" title="4.1 启动"></a>4.1 启动</h3><p>下载源码，通过 Idea 工具打开项目，修改 resources 目录下的 application.yml 中的数据库配置（用户名和密码），运行项目即可。</p><p>前端主页访问地址： </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8080</span><br></pre></td></tr></tbody></table></figure><p>后端管理访问地址</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8080/admin/login.html</span><br></pre></td></tr></tbody></table></figure><p><strong>注意：首次访问上边的链接会自动跳转到安装页面，填写好相关用户信息，点击安装即可。</strong></p><h3 id="4-2-部署"><a href="#4-2-部署" class="headerlink" title="4.2 部署"></a>4.2 部署</h3><p>该项目支持 war 包和 jar 包两种方式运行</p><h4 id="4-2-1-war-包形式"><a href="#4-2-1-war-包形式" class="headerlink" title="4.2.1 war 包形式"></a>4.2.1 war 包形式</h4><p>1.修改 pom.xml 文件的 2 处地方：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">将 &lt;packaging&gt;war&lt;/packaging&gt; 注释放开</span><br><span class="line"></span><br><span class="line">排除 spring-boot-starter-web 的内置 tomcat</span><br></pre></td></tr></tbody></table></figure><p>2.<code>mvn clean package</code>，打出名为 ROOT.war 文件，将其上传至 tomcat 的 webapps 目录下（如已有 ROOT 文件，将其删掉），启动 tomcat 即可</p><h4 id="4-2-2-jar-包形式"><a href="#4-2-2-jar-包形式" class="headerlink" title="4.2.2 jar 包形式"></a>4.2.2 jar 包形式</h4><p>1.创建博客配置文件夹 <code>mkdir ~/.hexo-boot</code></p><p>2.mvn clean package，打出 jar 包后上传至 <strong>~/.hexo-boot</strong></p><p>3.将 application.yml 文件上传至 <strong>~/.hexo-boot</strong> 目录中，根据自己的情况修改<strong>application.yml</strong>的数据库信息</p><p>4.创建 Service 服务</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/hexo-boot.service</span><br><span class="line"></span><br><span class="line"># 编辑内容如下：</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=hexo-boot</span><br><span class="line">After=syslog.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">ExecStart=/usr/java/jdk8/bin/java -server -Xms512m -Xmx1024m -jar /root/.hexo-boot/hexo-boot.jar --spring.config.additional-location=/root/.hexo-boot/</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></tbody></table></figure><p><strong>注意：内存分配和路径根据自己的情况进行修改，且路径必须是绝对路径！</strong></p><p><strong>注意：内存分配和路径根据自己的情况进行修改，且路径必须是绝对路径！</strong></p><p><strong>注意：内存分配和路径根据自己的情况进行修改，且路径必须是绝对路径！</strong></p><ol start="5"><li>服务命令</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">systemctl start hexo-boot</span><br><span class="line"># 重启</span><br><span class="line">systemctl restart hexo-boot</span><br><span class="line"># 关闭</span><br><span class="line">systemctl stop hexo-boot</span><br></pre></td></tr></tbody></table></figure><ol start="6"><li>补充</li></ol><p>步骤1 和 步骤2 可以使用如下命令代替</p><p><strong>注意 jar 版本号，请使用最新版本</strong></p><p><strong>注意 jar 版本号，请使用最新版本</strong></p><p><strong>注意 jar 版本号，请使用最新版本</strong></p><p>【GitHub】资源</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 下载安装包</span><br><span class="line">curl -L https://github.com/moonlightL/hexo-boot/releases/download/2.3/hexo-boot-2.3.0.jar --output ~/.hexo-boot/hexo-boot.jar</span><br><span class="line"></span><br><span class="line"># 下载 spring boot 配置文件，记得要修改数据库配置</span><br><span class="line">curl -L -o ~/.hexo-boot/application.yml --create-dirs https://github.com/moonlightL/hexo-boot/releases/download/1.4.0/application.yml</span><br></pre></td></tr></tbody></table></figure><p>【码云】资源</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 下载安装包</span><br><span class="line">curl -L https://gitee.com/moonlightL/hexo-boot/attach_files/620620/download/hexo-boot-2.3.0.jar --output ~/.hexo-boot/hexo-boot.jar</span><br><span class="line"></span><br><span class="line"># 下载 spring boot 配置文件，记得要修改数据库配置</span><br><span class="line">curl -L -o ~/.hexo-boot/application.yml --create-dirs https://gitee.com/moonlightL/hexo-boot/attach_files/537532/download/application.yml</span><br></pre></td></tr></tbody></table></figure><h2 id="五、添加主题"><a href="#五、添加主题" class="headerlink" title="五、添加主题"></a>五、添加主题</h2><h3 id="5-1-方式一"><a href="#5-1-方式一" class="headerlink" title="5.1 方式一"></a>5.1 方式一</h3><p>开发阶段：下载主题源码，修改名称（比如 hexo-boot-theme-abc 改成 abc），然后将整个文件夹复制到项目的 resources/templates/theme 下（与 default 目录同级），启动项目即可。</p><p>运行阶段：复制主题文件夹到 classes/templates/theme 下即可</p><h3 id="5-2-方式二"><a href="#5-2-方式二" class="headerlink" title="5.2 方式二"></a>5.2 方式二</h3><p>进入博客后端管理界面 -&gt; 更换主题 -&gt; 拉取安装，出现地址拉取框</p><p>输入主题的 git 地址，点击“拉取”按钮，即可等待下载安装</p><h3 id="5-3-方式三"><a href="#5-3-方式三" class="headerlink" title="5.3 方式三"></a>5.3 方式三</h3><p>将主题文件(.zip)下载到本地，然后进入博客后端管理界面 -&gt; 更换主题 -&gt; 上传安装，出现上传文件框</p><p>选择需要上传的主题文件，点击“解压安装”按钮即可</p><p><strong>目前已开源的主题:</strong></p><p><a href="https://github.com/moonlightL/hexo-boot-theme-vCard">hexo-boot-theme-vCard</a></p><p><a href="https://github.com/moonlightL/hexo-boot-theme-breezyCV">hexo-boot-theme-breezyCV</a></p><p><a href="https://github.com/moonlightL/hexo-boot-theme-next">hexo-boot-theme-next</a></p><p><a href="https://github.com/moonlightL/hexo-boot-theme-wuxia">hexo-boot-theme-wuxia</a></p><p>如果网络不佳，无法访问 GitHub，也可以访问 <a href="https://gitee.com/moonlightL">码云</a> ，找到主题进行下载。</p><h3 id="5-3-自定义主题"><a href="#5-3-自定义主题" class="headerlink" title="5.3 自定义主题"></a>5.3 自定义主题</h3><p>篇幅较大，请查看 Wiki</p><p><a href="https://github.com/moonlightL/hexo-boot/wiki/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98">GitHub Wiki</a></p><p><a href="https://gitee.com/moonlightL/hexo-boot/wikis/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98?sort_id=3151185">码云 Wiki</a></p><h2 id="六、问题反馈"><a href="#六、问题反馈" class="headerlink" title="六、问题反馈"></a>六、问题反馈</h2><p>1.) 专辑列表中，手动录入方式保存视频时，点击“生成封面”没反应</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">出现跨域问题，需要再对应的图床中配置跨域来源。</span><br></pre></td></tr></tbody></table></figure><p>2.）专辑列表中，保存视频时提示操作超时/报错</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果使用的是博客是3.4版本以及之前的版本，需要手动创建cover目录，即 mkdir -p ~/.hexo-boot/attachments/cover 。</span><br></pre></td></tr></tbody></table></figure><h2 id="七、更新日志"><a href="#七、更新日志" class="headerlink" title="七、更新日志"></a>七、更新日志</h2><p>2022-04-04 整合 COS（腾讯云）对象存储，优化文件上传代码</p><p>2022-02-18 统一评论功能接口，重写评论区插件</p><p>2021-12-23 新增发布专辑功能（图片、视频）</p><p>2021-07-08 新增日志记录功能</p><p>2021-06-29 文章添加访问密码</p><p>2021-06-24 新增动态功能</p><p>2021-06-22 新增自定义文章链接，支持上传zip包安装博客主题</p><p>2021-04-28 新增富文本编辑器（已支持 editor.md 和 summernote 两套编辑器）</p><p>2021-03-24 实现 html 内容压缩渲染</p><p>2021-03-03 调整管理后台主题源码修改编辑区，新增代码高亮、关键字查询和行数定位功能</p><p>2021-02-03 默认主题支持 pjax 请求，同时新增音乐播放功能</p><p>2020-12-16 调整默认主题，新增自定义页面功能</p><p>2020-12-02 支持 jar 方式部署运行</p><p>2020-11-12 新增在线下载拉取主题功能</p><p>2020-10-30 扩展主题配置，在线编辑主题文件，调整评论区插件的展示列表</p><p>2020-10-22 上传开源</p><h2 id="八、Hexo-Boot-4-0-版本调整"><a href="#八、Hexo-Boot-4-0-版本调整" class="headerlink" title="八、Hexo-Boot 4.0 版本调整"></a>八、Hexo-Boot 4.0 版本调整</h2><ul><li>代码结构分层</li><li>新增插件功能</li><li>将 Druid 数据源替换为 HikariCP</li><li>抽离系统信息代码，以插件形式封装</li><li>抽离第三方对象存储代码，以插件形式封装</li><li>修改部分页面 UI 交互<div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg=="><script type="text/javascript">  (function(d, s) {    var j, e = d.getElementsByTagName(s)[0];    if (typeof LivereTower === 'function') { return; }    j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;    e.parentNode.insertBefore(j, e);  })(document, 'script');</script></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 10款好看的主题｜新手建站必备！</title>
      <link href="/2023/01/31/43857/"/>
      <url>/2023/01/31/43857/</url>
      
        <content type="html"><![CDATA[<p>新手使用Hexo搭建博客，可能最在意的就是使用叫款主题了吧。</p><p>Hexo官网提供了很多主题，简直是「乱花渐欲迷人眼」，想要一眼就分辨出哪个主题好哪个主题不好，不一一点进去尝试，真分辨不出自己想要哪个主题。</p><p>踩了许多坑之后，为挑出10款简洁又好看，好看又实用的主题。不敢保证每个人的审美，但绝不坑！</p><p>😉走起！</p><h1 id="一、Butterfly"><a href="#一、Butterfly" class="headerlink" title="一、Butterfly"></a>一、Butterfly</h1><ul><li>在线演示：<a href="https://crazywong.com/">CrazyWong</a></li><li>魔改标杆：<ul><li><a href="https://akilar.top/">Akilarの糖果屋 - Akilar.top</a></li><li><a href="https://blog.zhheo.com/">张洪Heo - 分享设计与科技生活 (zhheo.com)</a></li><li><a href="https://sunguoqi.com/">小孙同学 (sunguoqi.com)</a></li></ul></li><li>魔改教程：<a href="https://butterfly.zhheo.com/docs/">人人都可以去自定义 | Butterfly主题美化教程 (zhheo.com)</a></li><li>主题仓库：<a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a></li><li>使用文档：<a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a></li><li>推荐值：⭐⭐⭐⭐⭐</li></ul><h1 id="二、NexT"><a href="#二、NexT" class="headerlink" title="二、NexT"></a>二、NexT</h1><ul><li>在线演示：<a href="https://theme-next.js.org/">NexT - Theme for Hexo (theme-next.js.org)</a></li><li>主题仓库：<a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></li><li>使用文档：<a href="https://theme-next.js.org/docs/">Documentation | NexT (theme-next.js.org)</a></li><li>推荐值：⭐⭐⭐⭐⭐</li></ul><h1 id="三、Fluid"><a href="#三、Fluid" class="headerlink" title="三、Fluid"></a>三、Fluid</h1><ul><li>在线演示：<a href="https://theme-next.js.org/">NexT - Theme for Hexo (theme-next.js.org)</a></li><li>主题仓库：<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></li><li>使用文档：<a href="https://hexo.fluid-dev.com/docs/start/">开始使用 | Hexo Fluid 用户手册 (fluid-dev.com)</a></li><li>推荐值：⭐⭐⭐⭐</li></ul><h1 id="四、Volantis"><a href="#四、Volantis" class="headerlink" title="四、Volantis"></a>四、Volantis</h1><ul><li>在线演示：<a href="https://xaoxuu.com/">XAOXUU</a></li><li>主题仓库：<a href="https://github.com/volantis-x/community">GitHub - volantis-x/community: Volantis Community 社区主页 https://volantis.js.org</a></li><li>使用文档：<a href="https://volantis.js.org/v6/getting-started/">开始使用 - Volantis</a></li><li>推荐值：⭐⭐⭐⭐⭐</li></ul><h1 id="五、Hacker"><a href="#五、Hacker" class="headerlink" title="五、Hacker"></a>五、Hacker</h1><ul><li>在线演示：<a href="https://blog.daraw.cn/">DaraW | Code is Poetry</a></li><li>主题仓库：<a href="https://github.com/CodeDaraW/Hacker">GitHub - CodeDaraW/Hacker: ❤️ A simple theme for Hexo</a></li><li>使用文档：<a href="https://github.com/CodeDaraW/Hacker/blob/master/README_zh-CN.md">Hacker/README_zh-CN.md at master · CodeDaraW/Hacker · GitHub</a></li><li>推荐值：⭐⭐⭐⭐</li></ul><h1 id="六、Cactus"><a href="#六、Cactus" class="headerlink" title="六、Cactus"></a>六、Cactus</h1><ul><li>在线演示：<a href="https://probberechts.github.io/hexo-theme-cactus/">Cactus (probberechts.github.io)</a></li><li>主题仓库：<a href="https://github.com/probberechts/hexo-theme-cactus">GitHub - probberechts/hexo-theme-cactus: A responsive, clean and simple theme for Hexo.</a></li><li>使用文档：<a href="https://github.com/probberechts/hexo-theme-cactus">GitHub - probberechts/hexo-theme-cactus: A responsive, clean and simple theme for Hexo.</a></li><li>推荐值：⭐⭐⭐⭐</li></ul><h1 id="七、Quiet"><a href="#七、Quiet" class="headerlink" title="七、Quiet"></a>七、Quiet</h1><ul><li>在线演示：<a href="https://blog.taire.de/">Taire’s Blog</a></li><li>主题仓库：<a href="https://blog.taire.de/">Taire’s Blog</a></li><li>使用文档：<a href="https://github.com/79e/hexo-theme-quiet/blob/master/README.md">hexo-theme-quiet/README.md at master · 79E/hexo-theme-quiet · GitHub</a></li><li>推荐值：⭐⭐⭐⭐</li></ul><h1 id="八、Acorn"><a href="#八、Acorn" class="headerlink" title="八、Acorn"></a>八、Acorn</h1><ul><li>在线演示：<a href="https://acorn.imaging.xin/">Acorn 企业免费建站主题 (imaging.xin)</a></li><li>主题仓库：<a href="https://github.com/zhwangart/hexo-theme-acorn">https://github.com/zhwangart/hexo-theme-acorn</a></li><li>使用文档：<a href="https://acorn.imaging.xin/docs/">简介 | Acorn 企业免费建站主题 (imaging.xin)</a></li><li>推荐值：⭐⭐⭐⭐</li></ul><h1 id="九、yun"><a href="#九、yun" class="headerlink" title="九、yun"></a>九、yun</h1><ul><li>在线演示：<a href="https://www.yunyoujun.cn/">云游君的小站 (yunyoujun.cn)</a></li><li>主题仓库：<a href="https://github.com/YunYouJun/valaxy/tree/main/packages/valaxy-theme-yun">valaxy/packages/valaxy-theme-yun at main · YunYouJun/valaxy · GitHub</a></li><li>使用文档：<a href="https://github.com/YunYouJun/valaxy/tree/main/packages/valaxy-theme-yun/docs/zh-CN">valaxy/packages/valaxy-theme-yun/docs/zh-CN at main · YunYouJun/valaxy · GitHub</a></li><li>推荐值：⭐⭐⭐⭐</li></ul><h1 id="十、One-paper"><a href="#十、One-paper" class="headerlink" title="十、One-paper"></a>十、One-paper</h1><ul><li>在线演示：<a href="https://zheli.design/one-paper/">One-paper</a></li><li>主题仓库：<a href="https://github.com/zheli-design/hexo-theme-one-paper">GitHub - zheli-design/hexo-theme-one-paper: 专注于写作，模拟纸张阅读感受的轻量 Hexo 主题。</a></li><li>使用文档：<a href="https://github.com/zheli-design/hexo-theme-one-paper/blob/main/README.md">hexo-theme-one-paper/README.md at main · zheli-design/hexo-theme-one-paper · GitHub</a></li><li>推荐值：⭐⭐⭐⭐</li></ul><h3 id="关于哪个主题最好"><a href="#关于哪个主题最好" class="headerlink" title="关于哪个主题最好"></a>关于哪个主题最好</h3><p>选择主题之前，一定要明确自己搭建博客的需求。</p><p>如果你不能锁定你的需求，挑再好看的主题都白搭。所以，一定要知道自己的目标和需求。</p><p>比如搭建博客的目标是为了保存平时写的代码笔记，那找一个类似于「博客园」那样界面清晰的、目录结构简洁明了的主题最适合你。毕竟，输出技术文档才是你真正的目的。</p><p>搭建博客的目标，也不一定只是写技术文档，有的人的目标是做个网站玩一玩，平时也不写东西，即使是心血来潮写点东西，最终也没有人看（自己更不看）；还有的人是想在自己的网站上放点照片啊，心得啊，游记啊之类的东西……</p><p>无论如何，一定要找到适合自己的，那才是最好的。</p><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Github]hexo-theme-next</title>
      <link href="/2022/11/09/next8492848/"/>
      <url>/2022/11/09/next8492848/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.pixelbbs.cn/source/plugin/bphp_clouds/upload/4438/20240601/8f90876b39738e4f8309b36d151d22d6.zip">打包下载zip</a></p><h1 align="center">本项目已停止维护。<span class="github-emoji"><span>⚠</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h1><h2 align="center">社区维护的版本请移步这里：<a href="https://github.com/theme-next/hexo-theme-next">NexT v6 and v7 <span class="github-emoji"><span>🚩</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a9.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></a></h2><h1 align="center">NexT</h1><p align="center">NexT 是一个高质量并且优雅的<a href="http://hexo.io">Hexo</a> 主题。这是精心制作做出来的 hexo 主题。</p><p><a href="https://gitter.im/iissnan/hexo-theme-next?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge"><img src="https://badges.gitter.im/Join%20Chat.svg" alt="Join the chat at https://gitter.im/iissnan/hexo-theme-next"></a><br><a href="https://github.com/iissnan/hexo-theme-next/commits/master"><img src="https://img.shields.io/maintenance/yes/2017.svg" alt="mnt-image"></a><br><a href="https://travis-ci.org/iissnan/hexo-theme-next?branch=master" title="Travis CI"><img src="https://travis-ci.org/iissnan/hexo-theme-next.svg?branch=master" alt="travis-image"></a><br><a href="https://github.com/iissnan/hexo-theme-next/releases"><img src="https://img.shields.io/github/release/iissnan/hexo-theme-next.svg" alt="rel-image"></a><br><a href="http://hexo.io/"><img src="https://img.shields.io/badge/hexo-%3E%3D%203.0-blue.svg" alt="hexo-image"></a><br><a href="LICENSE"><img src="https://img.shields.io/dub/l/vibe-d.svg" alt="lic-image"></a></p><ul><li><a href="http://theme-next.iissnan.com" target="_blank">NexT 使用文档</a> |  <a href="README.md">English Documentation</a></li></ul><h2 id="实时预览-Live-Preview"><a href="#实时预览-Live-Preview" class="headerlink" title="实时预览 Live Preview"></a>实时预览 Live Preview</h2><ul><li><span class="github-emoji"><span>💟</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f49f.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Muse 方案: <a href="https://leaferx.online/">LEAFERx</a> | <a href="https://notes.wanghao.work/">XiaMo</a> | <a href="https://oawan.me/">OAwan</a></li><li><span class="github-emoji"><span>🔯</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f52f.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Mist 方案: <a href="https://blog.zzbd.org/">Jeff</a> | <a href="http://uchuhimo.me/">uchuhimo</a> | <a href="http://www.ixirong.com/">xirong</a></li><li><span class="github-emoji"><span>♓</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2653.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Pisces 方案: <a href="http://notes.iissnan.com/">Vi</a> | <a href="https://acris.me/">Acris</a> | <a href="https://rainylog.com/">Rainy</a></li><li><span class="github-emoji"><span>♊</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/264a.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Gemini 方案: <a href="https://almostover.ru/">Ivan.Nginx</a> | <a href="https://raincal.com/">Raincal</a> | <a href="https://dandyxu.me/">Dandy</a></li></ul><p>更多 NexT 例子点击 <a href="https://github.com/iissnan/hexo-theme-next/issues/119">这里</a>.</p><h2 id="安装-Installation"><a href="#安装-Installation" class="headerlink" title="安装 Installation"></a>安装 Installation</h2><p><strong>1.</strong> 在终端切换到<strong>hexo 根</strong>目录. 在hexo目录下一定有 <code>node_modules</code>, <code>source</code>, <code>themes</code> 和其他文件夹:<br>   </p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> hexo</span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">_config.yml  node_modules  package.json  public  scaffolds  <span class="built_in">source</span>  themes</span><br></pre></td></tr></tbody></table></figure><p></p><p><strong>2.</strong> 从 github 上获取主题 。这里有几种方式来获取主题:</p><h3 id="下载最新发布的版本-Download-tagged-release-version"><a href="#下载最新发布的版本-Download-tagged-release-version" class="headerlink" title="下载最新发布的版本  Download tagged release version"></a>下载<a href="https://github.com/iissnan/hexo-theme-next/releases/latest">最新发布的版本</a>  Download tagged release version</h3><p> &nbsp; 在大多数情况下 <strong>稳定</strong>。 推荐用户下载这个。</p><p>   <a href="http://lmgtfy.com/?q=linux+curl+tar+wget+install"><img src="https://img.shields.io/badge/install%20with%20-curl%20%7C%20tar%20%7C%20wget-blue.svg" alt="curl-tar-wget-image"></a></p>   <figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> themes/next</span><br><span class="line">$ curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | <span class="built_in">cut</span> -d <span class="string">'"'</span> -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1</span><br></pre></td></tr></tbody></table></figure><h3 id="下载标签发布版本-Download-tagged-release-version"><a href="#下载标签发布版本-Download-tagged-release-version" class="headerlink" title="下载标签发布版本  Download tagged release version"></a>下载<a href="https://github.com/iissnan/hexo-theme-next/releases">标签发布版本</a>  Download tagged release version</h3><p> &nbsp; 您必须定义版本。从<a href="https://github.com/iissnan/hexo-theme-next/tags">标签列表</a>里选择版本替换<code>v5.1.2</code>。</p><p>   <a href="http://lmgtfy.com/?q=linux+curl+tar+install"><img src="https://img.shields.io/badge/install%20with%20-curl%20%7C%20tar-blue.svg" alt="curl-tar-image"></a></p>   <figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> themes/next</span><br><span class="line">$ curl -L https://api.github.com/repos/iissnan/hexo-theme-next/tarball/v5.1.2 | tar -zxv -C themes/next --strip-components=1</span><br></pre></td></tr></tbody></table></figure><p>   <a href="http://lmgtfy.com/?q=linux+git+install"><img src="https://img.shields.io/badge/install%20with%20-git-blue.svg" alt="git-image"></a></p>   <figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> --branch v5.1.2 https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></tbody></table></figure><h3 id="下载最新的-master-分支-Download-latest-master-branch"><a href="#下载最新的-master-分支-Download-latest-master-branch" class="headerlink" title="下载最新的 master 分支  Download latest master branch"></a>下载<a href="https://github.com/iissnan/hexo-theme-next/archive/master.zip">最新的 master 分支</a>  Download latest master branch</h3><p> &nbsp;可能会 <strong>不稳定</strong>, 但是包含最新的特色，推荐开发者下载.</p><p>   <a href="http://lmgtfy.com/?q=linux+curl+tar+install"><img src="https://img.shields.io/badge/install%20with%20-curl%20%7C%20tar-blue.svg" alt="curl-tar-image"></a></p>   <figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> themes/next</span><br><span class="line">$ curl -L https://api.github.com/repos/iissnan/hexo-theme-next/tarball | tar -zxv -C themes/next --strip-components=1</span><br></pre></td></tr></tbody></table></figure><p>   <a href="http://lmgtfy.com/?q=linux+git+install"><img src="https://img.shields.io/badge/install%20with%20-git-blue.svg" alt="git-image"></a></p>   <figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></tbody></table></figure><p>  使用克隆命令，你将得到<strong>整个存储库</strong>。而且在任何时候你都可以切换到任何标签发布版本。<br>  获取标签列表：</p>   <figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next</span><br><span class="line">$ git tag -l</span><br><span class="line">…</span><br><span class="line">v5.0.0</span><br><span class="line">v5.0.1</span><br><span class="line">v5.1.0</span><br><span class="line">v5.1.1</span><br><span class="line">v5.1.2</span><br></pre></td></tr></tbody></table></figure><p> &nbsp; 例如, 你想要切换到<code>v5.1.0</code> <a href="https://github.com/iissnan/hexo-theme-next/tags">标签发布版本</a>. 输入以下命令:</p>   <figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout tags/v5.1.0</span><br><span class="line">Note: checking out <span class="string">'tags/v5.1.0'</span>.</span><br><span class="line">…</span><br><span class="line">HEAD now on 1f72f68... CSS: Remove global list-style setting of ul</span><br></pre></td></tr></tbody></table></figure><p> &nbsp; 如果你想切换回 <a href="https://github.com/iissnan/hexo-theme-next/commits/master">master 分支</a>的话, 输入这个命令:</p>   <figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br></pre></td></tr></tbody></table></figure><p><strong>3.</strong> 在 <strong>hexo 根目录下</strong> 的配置文件<code>_config.yml</code>里设置主题:</p><pre><code>theme: next</code></pre><h3 id="Bugs"><a href="#Bugs" class="headerlink" title="Bugs"></a>Bugs</h3><p>对于那些遇到 <strong>Error: Cannot find module ‘hexo-util’</strong> <a href="https://github.com/iissnan/hexo-theme-next/issues/1490">问题</a>的人, 请检查你的NPM 版本.</p><ul><li><code>版本 &gt; 3</code>: 如果仍然不行的话，请移除 <code>node_modules</code> 文件 然后重新安装，使用 <code>npm install</code>命令。</li><li><code>版本 &lt; 3</code>: 请通过<code>npm install --save-dev hexo-util</code>命令添加<code>hexo-util</code>到你的站点包依赖里</li></ul><h2 id="更新-Update"><a href="#更新-Update" class="headerlink" title="更新 Update"></a>更新 Update</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next</span><br><span class="line">$ git pull</span><br></pre></td></tr></tbody></table></figure><h3 id="Bugs-1"><a href="#Bugs-1" class="headerlink" title="Bugs"></a>Bugs</h3><blockquote><p>提交您的更改或存储它们，然后才能合并。</p></blockquote><p>您必须提交，存储或放弃本地更改. 看&nbsp;<a href="https://stackoverflow.com/a/15745424/5861495">here</a> 是如何做的。</p><h3 id="使用Hexo-data-files-328-配置主题-Theme-configurations-using-Hexo-data-files-328"><a href="#使用Hexo-data-files-328-配置主题-Theme-configurations-using-Hexo-data-files-328" class="headerlink" title="使用Hexo data files(#328)配置主题  Theme configurations using Hexo data files #328"></a>使用Hexo data files(<a href="https://github.com/iissnan/hexo-theme-next/issues/328">#328</a>)配置主题  Theme configurations using Hexo data files #328</h3><p>目前升级 NexT 主题的时候并不是非常的流畅。若使用 <code>git pull</code> 的方式，很多时候可能会产生冲突；而下载新版本覆盖安装的方式又需要手动合并主题的 <code>_config.yml</code> 文件。</p><p>在此修改之前， NexT 建议将配置分离，一部分在 站点的配置文件中，另外一部分在主题的配置文件中。将需要自定的选项放置在 站点配置文件中，从而脱离避免更新主题时可能遇到的麻烦。这种方式是可行，但是有一些缺点：</p><ol><li>配置分离成了两个部分</li><li>用户可能会疑惑一些选项该放置在哪里比较合适</li></ol><p>为了解决这个问题， NexT 将会使用 Hexo 的 <a href="https://hexo.io/docs/data-files.html">Data Files</a> 。然而由于 Data Files 是在 Hexo 3 版本时引进的，所以要使用这个特性，需要 Hexo 的版本不低于 3。</p><p>若你比较喜欢 Hexo 2.x 版本，可以继续使用原先的配置方式。 NexT 保持着向下兼容。</p><h4 id="特性-Benefits"><a href="#特性-Benefits" class="headerlink" title="特性&nbsp;Benefits"></a>特性&nbsp;Benefits</h4><p>通过这个特性，你可以将所有的主题配置放置在站点的&nbsp;<code>source/_data/next.yml</code>&nbsp;文件中。原先放置在 站点配置文件 中的选项可以迁移到新的位置，同时，主题配置文件可以不用做任何修改。若后续版本有配置相关的改动时，你仅需在&nbsp;<code>next.yml</code>&nbsp;中做相应调整即可</p><h4 id="如何使用这个特性-How-to-use-this-feature"><a href="#如何使用这个特性-How-to-use-this-feature" class="headerlink" title="如何使用这个特性 How to use this feature"></a>如何使用这个特性 How to use this feature</h4><ol><li>请先确保你所使用的 Hexo 版本在 3 以上</li><li>在站点的&nbsp;<code>source/_data</code>&nbsp;目录下新建&nbsp;<code>next.yml</code>&nbsp;文件（<code>_data</code>目录可能需要新建）</li><li>迁移站点配置文件和主题配置文件中的配置到&nbsp;<code>next.yml</code>&nbsp;中</li><li>使用 <code>--config source/_data/next.yml</code> 参数启动服务器, 生成或者部署。<br> &nbsp; 例如: <code>hexo clean --config source/_data/next.yml &amp;&amp; hexo g --config source/_data/next.yml</code>。</li></ol><h2 id="特色-Features"><a href="#特色-Features" class="headerlink" title="特色 Features"></a>特色 Features</h2><h3 id="支持多国语言-包括"><a href="#支持多国语言-包括" class="headerlink" title="支持多国语言, 包括:"></a>支持多国语言, 包括:</h3><p><span class="github-emoji"><span>🇨🇳</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 简体中文 &amp; 繁体中文<br><br><span class="github-emoji"><span>🇺🇸</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 英语<br><br><span class="github-emoji"><span>🇷🇺</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1fa.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 俄语<br><br><span class="github-emoji"><span>🇫🇷</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f7.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 法语<br><br><span class="github-emoji"><span>🇩🇪</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1ea.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 德语<br><br><span class="github-emoji"><span>🇯🇵</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f5.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 日语<br><br><span class="github-emoji"><span>🇮🇩</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1e9.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 印度尼西亚语<br><br><span class="github-emoji"><span>🇵🇹</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f9.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 葡萄牙语 (巴西)<br><br><span class="github-emoji"><span>🇰🇷</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f7.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 朝鲜语<br><br><span class="github-emoji"><span>🇮🇹</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f9.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 意大利语<br><br><span class="github-emoji"><span>🇳🇱</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 荷兰语</p><p>默认语言是英语。</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="comment"># language: zh-Hans</span></span><br><span class="line"><span class="comment"># language: zh-hk</span></span><br><span class="line"><span class="comment"># language: zh-tw</span></span><br><span class="line"><span class="comment"># language: ru</span></span><br><span class="line"><span class="comment"># language: fr-FR</span></span><br><span class="line"><span class="comment"># language: de</span></span><br><span class="line"><span class="comment"># language: ja</span></span><br><span class="line"><span class="comment"># language: id</span></span><br><span class="line"><span class="comment"># language: pt</span></span><br><span class="line"><span class="comment"># language: pt-BR</span></span><br><span class="line"><span class="comment"># language: ko</span></span><br><span class="line"><span class="comment"># language: it</span></span><br><span class="line"><span class="comment"># language: nl-NL</span></span><br></pre></td></tr></tbody></table></figure><p>在站点配置文件<code>_config.yml</code>中可以将语言切换成中文</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span><br></pre></td></tr></tbody></table></figure><h3 id="评论支持-Comment-support"><a href="#评论支持-Comment-support" class="headerlink" title="评论支持 Comment support"></a>评论支持 Comment support</h3><p>NexT 已经原生支持 <code>多说</code> and <code>Disqus</code> 评论系统。</p><p>添加以下代码到你的主题配置文件 <code>_config.yml</code>:</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">duoshuo:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="string">your-duoshuo-shortname</span></span><br></pre></td></tr></tbody></table></figure><p>或者</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">disqus_shortname:</span> <span class="string">your-disqus-shortname</span></span><br></pre></td></tr></tbody></table></figure><h3 id="标签页-Tags-page"><a href="#标签页-Tags-page" class="headerlink" title="标签页 Tags page"></a>标签页 Tags page</h3><blockquote><p>添加一个标签页面，里面包含您网站中的所有标签。</p></blockquote><ul><li><p>创建一个名为 <code>tags</code> 页面</p><pre><code>  hexo new page "tags"</code></pre></li><li><p>编辑标签页, 设置页面类型为<code>tags</code>.</p><pre><code>  title: All tags  date: 2014-12-22 12:39:04  type: "tags"</code></pre></li><li><p>添加 <code>tags</code> 到主题配置文件 <code>_config.yml</code> 里:</p><pre><code>  menu:    home: /    archives: /archives    tags: /tags</code></pre></li></ul><h3 id="分类页-Categories-page"><a href="#分类页-Categories-page" class="headerlink" title="分类页 Categories page"></a>分类页 Categories page</h3><blockquote><p>添加一个分类页面，里面包含您网站中的所有分类。</p></blockquote><ul><li><p>创建一个名为 <code>categories</code> 页面</p><pre><code>  hexo new page "categories"</code></pre></li><li><p>编辑分类页, 设置页面类型为 <code>categories</code>.</p><pre><code>  title: All categories  date: 2014-12-22 12:39:04  type: "categories"</code></pre></li><li><p>添加&nbsp;<code>categories</code> 到主题配置文件 <code>_config.yml</code> 里:</p><pre><code>  menu:    home: /    archives: /archives    categories: /categories</code></pre></li></ul><h3 id="社交媒体-Social-Media"><a href="#社交媒体-Social-Media" class="headerlink" title="社交媒体 Social Media"></a>社交媒体 Social Media</h3><p>NexT 可以自动添加链接到您的社交媒体帐户里:</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">your-github-url</span></span><br><span class="line">  <span class="attr">Twitter:</span> <span class="string">your-twitter-url</span></span><br><span class="line">  <span class="attr">Weibo:</span> <span class="string">your-weibo-url</span></span><br><span class="line">  <span class="attr">DouBan:</span> <span class="string">your-douban-url</span></span><br><span class="line">  <span class="attr">ZhiHu:</span> <span class="string">your-zhihu-url</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Feed-链接-Feed-link"><a href="#Feed-链接-Feed-link" class="headerlink" title="Feed 链接 Feed link"></a>Feed 链接 Feed link</h3><blockquote><p>显示 feed 链接。</p></blockquote><p>在主题配置文件<code>_config.yml</code>里设置<code>rss</code> , 如下所示:</p><ol><li><code>rss: false</code> 会禁用 feed 链接。</li><li><code>rss:  </code> 使用站点 feed 链接。这是默认的选项。</li></ol><p> &nbsp; &nbsp;按照插件<a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a>的README中的安装说明进行操作。在完成这个插件的配置后，Feed链接也生成好了</p><ol start="3"><li><code>rss: http://your-feed-url</code> 设置你的 feed 链接.</li></ol><h3 id="内置5种代码高亮主题-Up-to-5-code-highlight-themes-built-in"><a href="#内置5种代码高亮主题-Up-to-5-code-highlight-themes-built-in" class="headerlink" title="内置5种代码高亮主题 Up to 5 code highlight themes built-in"></a>内置5种代码高亮主题 Up to 5 code highlight themes built-in</h3><p>NexT 使用的是 <a href="https://github.com/chriskempson/tomorrow-theme">Tomorrow 主题</a> ，一共有5种主题供你选择。<br>Next 默认使用 <code>normal</code>. 下面是 <code>normal</code> 和&nbsp;<code>night</code> 主题的预览:</p><p><img src="http://iissnan.com/nexus/next/tomorrow-normal.png" alt="Tomorrow Normal Preview"><br><img src="http://iissnan.com/nexus/next/tomorrow-night.png" alt="Tomorrow Night Preview"></p><p>查看更多信息点击<a href="https://github.com/chriskempson/tomorrow-theme">Tomorrow 主题</a>。</p><h2 id="配置-Configuration"><a href="#配置-Configuration" class="headerlink" title="配置 Configuration"></a>配置 Configuration</h2><p>NexT 的配置很少</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Menu configuration.</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Favicon</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Avatar (put the image into next/source/images/)</span></span><br><span class="line"><span class="comment"># can be any image format supported by web browsers (JPEG,PNG,GIF,SVG,..)</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/default_avatar.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Code highlight theme</span></span><br><span class="line"><span class="comment"># available: normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Fancybox for image gallery</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify the date when the site was setup</span></span><br><span class="line"><span class="attr">since:</span> <span class="number">2013</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="浏览器支持-Browser-support"><a href="#浏览器支持-Browser-support" class="headerlink" title="浏览器支持 Browser support"></a>浏览器支持 Browser support</h2><p><img src="http://iissnan.com/nexus/next/browser-support.png" alt="Browser support"></p><p><a href="https://www.browserstack.com/"><img src="/.github/browserstack_logo.png" alt="Browser Stack"></a></p><blockquote><p><strong>BrowserStack</strong> is a cloud-based cross-browser testing tool that enables developers to test their websites across various browsers on different operating systems and mobile devices, without requiring users to install virtual machines, devices or emulators.</p></blockquote><h2 id="贡献-Contributing"><a href="#贡献-Contributing" class="headerlink" title="贡献 Contributing"></a>贡献 Contributing</h2><p>接受各种形式的贡献，包括不限于提交问题与需求，修复代码。等待您的<code>Pull Request</code>。</p><p>Any types of contribution are welcome. Thanks.</p><p>**ATTENTION! Contributors on Chinese docs needed!**<br>Need to translate from <a href="README.md">English docs</a> to Chinese docs.<br>Any help wanted!<br>Thank’s a lot!</p><h2 id="开发-Development"><a href="#开发-Development" class="headerlink" title="开发 Development"></a>开发 Development</h2><p>NexT 主旨在于简洁优雅且易于使用，所以首先要尽量确保 NexT 的简洁易用性。</p><p>NexT is built for easily use with elegant appearance. First things first, always keep things simple.</p><h2 id="开发历史-Changelog"><a href="#开发历史-Changelog" class="headerlink" title="开发历史 Changelog"></a><a href="https://github.com/iissnan/hexo-theme-next/wiki/Changelog">开发历史 Changelog</a></h2><!--[lic-image]: https://img.shields.io/npm/l/hexo-theme-next.svg--><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Github]hexo-theme-ayer</title>
      <link href="/2022/09/03/38927502375/"/>
      <url>/2022/09/03/38927502375/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.pixelbbs.cn/source/plugin/bphp_clouds/upload/4438/20240601/b9a213200cd941cb2d2971483f6e2c4d.zip">打包下载</a><br><img src="https://www.pixelbbs.cn/source/plugin/bphp_clouds/upload/4438/20240601/b7fad2c8ba31ce3690650c512d1fba8d.png"></p><p align="center"><a href="https://shen-yu.gitee.io" target="_blank" rel="noopener noreferrer"><img width="100" src="logo.png" alt="ayer logo"></a></p><h3 align="center">一个干净且优雅的 Hexo 主题</h3><p align="center">  <a href="https://travis-ci.org/Shen-Yu/hexo-theme-ayer?branch=master" target="_blank" rel="noopener noreferrer">    <img alt="travis-ci" src="https://travis-ci.org/Shen-Yu/hexo-theme-ayer.svg?branch=master">  </a>  <a href="http://standardjs.com" target="_blank" rel="noopener noreferrer">    <img alt="js-standard-style" src="https://img.shields.io/badge/code%20style-standard-brightgreen.svg">  </a>  <br>    <a href="https://www.npmjs.com/package/hexo-theme-ayer" target="_blank" rel="noopener noreferrer">  <img alt="npm" src="https://img.shields.io/npm/dt/hexo-theme-ayer">  </a>  <a href="https://shen-yu.gitee.io" target="_blank" rel="noopener noreferrer">   <img alt="platform" src="https://img.shields.io/badge/platform-PC--ios--android-ff69b4.svg">   </a>  <a href="https://gitter.im/hexo-theme-ayer/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge" target="_blank" rel="noopener noreferrer">    <img alt="Gitter" src="https://badges.gitter.im/Join%20Chat.svg">  </a>  <br>  <a href="https://www.npmjs.com/package/hexo-theme-ayer" target="_blank" rel="noopener noreferrer">    <img alt="npm version" src="https://img.shields.io/npm/v/hexo-theme-ayer">  </a>  <img alt="language" src="https://img.shields.io/badge/language-ejs--stylus-green.svg"> <a href="https://github.com/Shen-Yu/hexo-theme-ayer/releases" target="_blank" rel="noopener noreferrer">  <img alt="GitHub repo size" src="https://img.shields.io/github/repo-size/Shen-Yu/hexo-theme-ayer?color=b37feb">  </a>  <a href="https://github.com/Shen-Yu/hexo-theme-ayer/blob/master/LICENSE" target="_blank" rel="noopener noreferrer"><img alt="LICENSE" src="https://img.shields.io/badge/LICENSE-SATA-6ccab8">  </a></p><hr><p><span class="github-emoji"><span>🌊</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f30a.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Ayer is a clean and elegant theme for Hexo, also fast, powerful and responsive. It contains many awesome features, It’s perfect for your blog, “Ayer” means “water” in Malaysian and “yesterday” in Spanish. <a href="https://github.com/shen-yu/hexo-theme-ayer/issues/new/choose">Create an issue</a> if you have any queries or advice during the process of using, </p><p><b>注：收藏本主题请点右上角 Star，谢谢~~ </b><br><b>如果你想给主题添砖加瓦，可以点右上角 Fork，然后给此仓库提交 PR</b></p><h3 id="Preview-预览"><a href="#Preview-预览" class="headerlink" title="Preview 预览"></a><a href="https://shen-yu.gitee.io/">Preview 预览</a></h3><h3 id="中文说明"><a href="#中文说明" class="headerlink" title="中文说明"></a><a href="https://shen-yu.gitee.io/2019/ayer/">中文说明</a></h3><h3 id="国内镜像"><a href="#国内镜像" class="headerlink" title="国内镜像"></a><a href="https://gitee.com/shen-yu/hexo-theme-ayer">国内镜像</a></h3><p><img src="/screenshots/hexo-theme-ayer.png" alt="Screenshot"></p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="For-hexo-5-0"><a href="#For-hexo-5-0" class="headerlink" title="For hexo >= 5.0"></a>For hexo &gt;= 5.0</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-ayer -S</span><br></pre></td></tr></tbody></table></figure><ul><li>If this theme is newly installed, a <code>_config.ayer.yml</code> file will be generated in the root directory after the installation is complete, and you can directly edit the <code>_config.ayer.yml</code> file for configuration.</li><li>If it is a theme upgrade, you can use the configuration method of hexo &lt; 5.0, or you can move the original configuration file to the root directory and rename it to <code>_config.ayer.yml</code>.</li></ul><h3 id="For-hexo-5-0-1"><a href="#For-hexo-5-0-1" class="headerlink" title="For hexo < 5.0"></a>For hexo &lt; 5.0</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer</span><br></pre></td></tr></tbody></table></figure><h2 id="Enable"><a href="#Enable" class="headerlink" title="Enable"></a>Enable</h2><p>Modify <code>theme</code> setting in <code>_config.yml</code> to <code>ayer</code></p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">ayer</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/ayer</span><br><span class="line">git pull</span><br></pre></td></tr></tbody></table></figure><h2 id="Multi-Language-Support"><a href="#Multi-Language-Support" class="headerlink" title="Multi Language Support"></a>Multi Language Support</h2><p>zh-CN（中文简体） en（English） zh-TW（中文繁体） ja（日本語） es（Español） de（Deutsch） fr（Français） ru（Русский） ko（한국어） vi（Tiếng Việt） nl（Nederlands） no（norsk） pt（Português）</p><p>English is default languge, if you want to change, modify <code>language</code> option in <code>_config.yml</code> file in your Hexo blog’s root folder.</p><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>let me know if you have any questions.</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Menu-Sidebar</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">/categories</span></span><br><span class="line">  <span class="attr">Tags:</span> <span class="string">/tags</span></span><br><span class="line">  <span class="attr">Gallery:</span> <span class="string">http://shenyu-vip.lofter.com</span></span><br><span class="line">  <span class="attr">Travel:</span> <span class="string">/tags/旅行/</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">/2019/about</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Subtitle and Typing animation</span></span><br><span class="line"><span class="comment"># https://github.com/mattboldt/typed.js</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">A</span> <span class="string">clean</span> <span class="string">and</span> <span class="string">elegant</span> <span class="string">theme</span></span><br><span class="line">  <span class="attr">text2:</span> <span class="string">It's</span> <span class="string">perfect</span> <span class="string">for</span> <span class="string">your</span> <span class="string">hexo</span> <span class="string">blog</span></span><br><span class="line">  <span class="attr">text3:</span> <span class="string">Have</span> <span class="string">fun!</span> <span class="comment">#Supports up to three lines of text</span></span><br><span class="line">  <span class="attr">startDelay:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">typeSpeed:</span> <span class="number">200</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">backSpeed:</span> <span class="number">100</span></span><br><span class="line">  <span class="attr">showCursor:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Favicon and sidebar logo</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span><br><span class="line"><span class="attr">logo:</span> <span class="string">/images/ayer-side.svg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cover Setting</span></span><br><span class="line"><span class="comment"># enable: [true|false]；path: [background-image]；logo: [cover-logo-image]</span></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/images/cover1.jpg</span> <span class="comment"># there are some beautiful cover images in Ayer's directory: /source/images, choose your favorite image to replace it.</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="string">/images/ayer.svg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ProgressBar</span></span><br><span class="line"><span class="attr">progressBar:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Boardcast</span></span><br><span class="line"><span class="attr">broadcast:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">type:</span> <span class="number">2</span> <span class="comment"># 1：custom，2：hitokoto api(https://hitokoto.cn/)</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">a</span> <span class="string">clean</span> <span class="string">and</span> <span class="string">elegant</span> <span class="string">theme,</span> <span class="string">fast</span> <span class="string">and</span> <span class="string">responsive.</span> <span class="comment"># only work in custom mode</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Article Setting</span></span><br><span class="line"><span class="comment"># (Use this to excerpt if article is too long：&lt;!--more--&gt;)</span></span><br><span class="line"><span class="attr">excerpt_link:</span> <span class="string">Read</span> <span class="string">More...</span></span><br><span class="line"><span class="attr">excerpt_all:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy code button</span></span><br><span class="line"><span class="attr">copy_btn:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># Share</span></span><br><span class="line"><span class="attr">share_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># If you are not in China, maybe you prefer to set:false</span></span><br><span class="line"><span class="attr">share_china:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># share text</span></span><br><span class="line"><span class="attr">share_text:</span> <span class="string">Share</span></span><br><span class="line"><span class="comment"># search text</span></span><br><span class="line"><span class="attr">search_text:</span> <span class="string">Search</span></span><br><span class="line"><span class="comment"># nav text</span></span><br><span class="line"><span class="attr">nav_text:</span></span><br><span class="line">  <span class="attr">page_prev:</span> <span class="string">Prev</span> <span class="string">page</span></span><br><span class="line">  <span class="attr">page_next:</span> <span class="string">Next</span> <span class="string">page</span></span><br><span class="line">  <span class="attr">post_prev:</span> <span class="string">Newer</span> <span class="string">posts</span></span><br><span class="line">  <span class="attr">post_next:</span> <span class="string">Older</span> <span class="string">posts</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Catalog in article</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># images in the article support click to fullscreen</span></span><br><span class="line"><span class="attr">image_viewer:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="attr">word_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># only display in article page(not in index page)</span></span><br><span class="line">  <span class="attr">only_article_visit:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reward Setting</span></span><br><span class="line"><span class="comment"># type：0-close reward； 1-only open in article which you have configured reward:true； 2-open in all articles</span></span><br><span class="line"><span class="attr">reward_type:</span> <span class="number">2</span></span><br><span class="line"><span class="comment"># reward word</span></span><br><span class="line"><span class="attr">reward_wording:</span> <span class="string">"Buy me a cup of coffee~"</span></span><br><span class="line"><span class="comment"># qrcode image path</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br><span class="line"><span class="comment"># qrcode image path</span></span><br><span class="line"><span class="attr">weixin:</span> <span class="string">/images/wechat.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copyright</span></span><br><span class="line"><span class="comment"># type：0-close all； 1-only display in article which you have configured copyright: true； 2-all articles</span></span><br><span class="line"><span class="attr">copyright_type:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Search</span></span><br><span class="line"><span class="comment"># https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">search:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># RSS</span></span><br><span class="line"><span class="comment"># leave it empty if you dont' need</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DarkMode</span></span><br><span class="line"><span class="attr">darkmode:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Canvas background style: 0-close，1-moveline</span></span><br><span class="line"><span class="attr">canvas_bg:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom mouse pointer，replace /images/mouse.cur</span></span><br><span class="line"><span class="attr">mouse:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/images/mouse.cur</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Click effect: 0-close，1-love，2-boom，3-particles</span></span><br><span class="line"><span class="attr">click_effect:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># articleWidth and sidebarWidth</span></span><br><span class="line"><span class="attr">layout:</span></span><br><span class="line">  <span class="attr">article_width:</span> <span class="string">80rem</span></span><br><span class="line">  <span class="attr">sidebar_width:</span> <span class="string">8rem</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># GitHub Ribbons(https://github.blog/2008-12-19-github-ribbons/)</span></span><br><span class="line"><span class="attr">github:</span></span><br><span class="line">  <span class="comment"># (Set false if you don't need)</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://github.com/Shen-Yu/hexo-theme-ayer</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pv&amp;uv statistics</span></span><br><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cnzz statistics</span></span><br><span class="line"><span class="attr">cnzz:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">url:</span> <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Analytics</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="string">""</span></span><br><span class="line"><span class="comment"># Baidu Analytics</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mathjax Support</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Katex Support</span></span><br><span class="line"><span class="comment"># <span class="doctag">note:</span> need change the hexo-renderer，npm un hexo-renderer-marked -S &amp;&amp; npm i hexo-renderer-markdown-it-katex -S</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># true</span></span><br><span class="line">  <span class="attr">allpost:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># since year</span></span><br><span class="line"><span class="attr">since:</span> <span class="number">2019</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># only for chinese website</span></span><br><span class="line"><span class="comment"># ICP</span></span><br><span class="line"><span class="attr">icp:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">"http://www.beian.miit.gov.cn/"</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">"浙ICP备88888888"</span></span><br><span class="line"><span class="comment"># gongan</span></span><br><span class="line"><span class="attr">gongan:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/images/beian.png</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">"http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=01234567890123"</span> <span class="comment">#link</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">"浙公网安备01234567890123号"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># friends link</span></span><br><span class="line"><span class="attr">friends_link:</span></span><br><span class="line">  <span class="attr">Ayer:</span> <span class="comment">#site name</span></span><br><span class="line">    <span class="comment"># site url</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/Shen-Yu/hexo-theme-ayer</span></span><br><span class="line">    <span class="comment"># site icon(optional)</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">/images/ayer.png</span></span><br><span class="line">  <span class="attr">GitHub:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/Shen-Yu</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://i.loli.net/2020/09/07/indb4PRYDA98EkN.png</span></span><br><span class="line">  <span class="attr">gitee:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://gitee.com/shen-yu</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://i.loli.net/2020/09/07/K3AqO7h6krQFlRX.png</span></span><br><span class="line">  <span class="attr">Hexo:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://hexo.io</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://i.loli.net/2020/09/07/UYGzjo7h68CRWny.png</span></span><br><span class="line">  <span class="attr">hexo-tag-chart:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/Shen-Yu/hexo-tag-chart</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://i.loli.net/2020/09/07/GIXBYE5SoylhR1r.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Comment：1、Valine (recommended)；2、Gitalk；3、Twikoo；4、MiniValine</span></span><br><span class="line"><span class="comment"># You can close the comment section on one of your posts by marking `comments: false` in front-matter.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、Valine [A fast, simple &amp; powerful comment system](https://github.com/xCss/Valine)</span></span><br><span class="line"><span class="comment"># You need create leancloud account first (https://console.leancloud.app), then put the id|key in below.</span></span><br><span class="line"><span class="attr">leancloud:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="comment">#</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="comment">#</span></span><br><span class="line"><span class="comment"># Valine Setting</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mp</span> <span class="comment"># (https://valine.js.org/avatar.html)</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Add</span> <span class="string">some</span> <span class="string">comments</span> <span class="string">to</span> <span class="string">my</span> <span class="string">article~</span> <span class="comment"># placeholder</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、Gitalk(https://github.com/gitalk/gitalk)</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># true</span></span><br><span class="line">  <span class="attr">clientID:</span> <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">clientSecret:</span> <span class="comment"># Client Secret</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># Repository name</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="comment"># GitHub ID</span></span><br><span class="line">  <span class="attr">admin:</span> <span class="comment"># GitHub ID</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、Twikoo(https://github.com/imaegoo/twikoo)</span></span><br><span class="line"><span class="attr">twikoo:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">envId:</span> <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># advertisement</span></span><br><span class="line"><span class="comment"># if there is an "ad" word in photo or url，it may blocked by adblock or any other browser extensions</span></span><br><span class="line"><span class="attr">ads:</span></span><br><span class="line">  <span class="attr">ad_1:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">vultr优惠vps</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://cdn.jsdelivr.net/gh/Shen-Yu/cdn/img/vultr.png</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://www.vultr.com/?ref=8630075</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">ad_2:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">云服务器全球购低至2折</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://cdn.jsdelivr.net/gh/Shen-Yu/cdn/img/ten_2.jpg</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://curl.qcloud.com/kvO7hb43</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># encrypt settings</span></span><br><span class="line"><span class="attr">lock:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h2><ul><li><p><a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> (for Local Search)</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-searchdb</span> <span class="string">--save</span></span><br></pre></td></tr></tbody></table></figure><p>Then add the plugin configuration in hexo’s configuration file <code>_config.yml</code> (note: not the theme’s configuration file):</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo-generator-search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> (for RSS)</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-feed</span> <span class="string">--save</span></span><br></pre></td></tr></tbody></table></figure><p>Then add the plugin configuration in hexo’s configuration file <code>_config.yml</code> (note: not the theme’s configuration file):</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">feed:m</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">hub:</span></span><br><span class="line">    <span class="attr">content:</span></span><br><span class="line">    <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">    <span class="attr">content_limit_delim:</span> <span class="string">' '</span></span><br><span class="line">    <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><a href="https://github.com/netcan/hexo-generator-index-pin-top">hexo-generator-index-pin-top</a> (for Sticky Post)</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="Categories"><a href="#Categories" class="headerlink" title="Categories"></a>Categories</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></tbody></table></figure><p>Then paste following codes to file: /source/categories/index.md</p><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">type: categories</span><br><span class="line"><span class="section">layout: "categories"</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Tags"><a href="#Tags" class="headerlink" title="Tags"></a>Tags</h2><p>Same as categories.</p><h2 id="Friend-Links"><a href="#Friend-Links" class="headerlink" title="Friend Links"></a>Friend Links</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page friends</span><br></pre></td></tr></tbody></table></figure><p>Then paste following codes to file: /source/friends/index.md</p><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: friends</span><br><span class="line">type: friends</span><br><span class="line"><span class="section">layout: "friends"</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><p>Then edit <code>friends_link</code> in <code>_config.yml</code></p><h2 id="Gallery"><a href="#Gallery" class="headerlink" title="Gallery"></a>Gallery</h2><p>Need to write in the head of the markdown, this is not a good way to write, I hope to get a better way to write on github.</p><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Gallery</span><br><span class="line"></span><br><span class="line"><span class="section">albums: [["img<span class="emphasis">_url", "img_</span>caption"], ["img<span class="emphasis">_url", "img_</span>caption"]]</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Toc"><a href="#Toc" class="headerlink" title="Toc"></a>Toc</h2><p>Use Tocbot to parse the title tags (h1~h6) in the content and insert the directory.</p><ul><li><p>ayer/_config.yml</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Toc</span></span><br><span class="line">toc: <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>If Toc is turned on in ayer/_config.yml, then Tocbot will generate a Toc article directory in the title tag of each blog parsing content, but not all blogs require Toc, so in the Front-matter section of markdown Can be closed:</p><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="section">no<span class="emphasis">_toc: true</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br></pre></td></tr></tbody></table></figure></li></ul><hr><br><h2 id="Code-Contributors"><a href="#Code-Contributors" class="headerlink" title="Code Contributors"></a>Code Contributors</h2><p>This project exists thanks to all the people who contribute.</p><p><a href="https://github.com/Shen-Yu/hexo-theme-ayer/graphs/contributors"><img src="https://opencollective.com/ayer/contributors.svg?width=890&amp;button=false"></a></p><h2 id="Stargazers-over-time"><a href="#Stargazers-over-time" class="headerlink" title="Stargazers over time"></a>Stargazers over time</h2><p><a href="https://starchart.cc/Shen-Yu/hexo-theme-ayer"><img src="https://starchart.cc/Shen-Yu/hexo-theme-ayer.svg" alt="Stargazers over time"></a></p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a src="https://github.com/Shen-Yu/hexo-theme-ayer">Ayer</a> by <a href="https://github.com/Shen-Yu">Eric-Shen</a> is licensed under <a rel="license" href="https://github.com/Shen-Yu/hexo-theme-ayer/blob/master/LICENSE">SATA-License</a>.</p><p>The basic idea is, whenever using a project using SATA license, people shall star/like/+1 that project and thank the author. Just imagine Google stared your project and send you a thank-you letter because they used your project in github!<br><br></p><p>本项目采用<a rel="license" href="https://github.com/Shen-Yu/hexo-theme-ayer/blob/master/LICENSE">SATA</a>开源协议，在遵守 MIT 许可证的前提下，你应该马不停蹄的给这个开源项目“点个赞”，比如 github 右上角的 star，然后你应该感谢这个开源项目的作者，作者信息可以在许可证头部的版权声明部分找到。<br></p><p>下面是几条 SATA 作者推荐的感谢途径，也是 SATA 包含的内容：</p><ul><li>给你使用的开源项目的作者发个 Email，和他交个朋友</li><li>提出你在使用过程中发现的 BUG 或者提一些建设性的意见</li><li>告诉你的朋友们这是一个多棒的开源项目</li><li>当然，你也可以只是在心里默默的感激，不用让全世界都知道<div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg=="><script type="text/javascript">  (function(d, s) {    var j, e = d.getElementsByTagName(s)[0];    if (typeof LivereTower === 'function') { return; }    j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;    e.parentNode.insertBefore(j, e);  })(document, 'script');</script></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[github]Minecraft我的世界Spigot插件保姆级开发教程</title>
      <link href="/2020/05/12/4893589/"/>
      <url>/2020/05/12/4893589/</url>
      
        <content type="html"><![CDATA[<h1 id="Minecraft我的世界Spigot插件保姆级开发教程【1】——准备开发环境"><a href="#Minecraft我的世界Spigot插件保姆级开发教程【1】——准备开发环境" class="headerlink" title="Minecraft我的世界Spigot插件保姆级开发教程【1】——准备开发环境"></a>Minecraft我的世界Spigot插件保姆级开发教程【1】——准备开发环境</h1><p><font color="gray" size="3">更新时间：2020.5.11</font></p><p>本教程以<strong>1.15.2 Spigot</strong>服务端为例。</p><p>都0202年了，你还在MCBBS苦苦搜寻称心插件，或者担心插件有后门，或者好不容易找到的插件却作者弃坑，或者因某个插件的某个不完备的功能而失望长叹，或者……</p><h3 id="Spigot插件的优势"><a href="#Spigot插件的优势" class="headerlink" title="Spigot插件的优势"></a>Spigot插件的优势</h3><p>我们暂且抛开各个服务端核心之间的性能比较，单纯从spigot插件的优势来讲。首先，spigot能运行在spigot为核心的服务端上，包括spigot，Paper，catserver等。然而Craftbukkit(水桶端)的bukkit插件，Paper端的paper插件，sponge端的sponge插件均只能运行在自己的服务端核心上。所以，spigot插件以其服务端兼容性的优势（可运行在多种服务端核心上）和版本兼容性（一个插件支持多个游戏版本）的优势胜出。目前比较优秀的spigot插件有：EssentialX（基础插件）、Multiverse Core（多世界插件）、Vault（经济前置插件）、GroupManager（权限插件）、Residence（领地插件）等。怎么样，是不是很多都耳熟能详啊！是不是心动了啊！当然，如果编写了spigot插件，并且对性能有极致追求的玩家来说，在paper上运行你写的插件，那岂不是嗨皮到飞起？</p><h3 id="安装开发Spigot插件所需要的环境"><a href="#安装开发Spigot插件所需要的环境" class="headerlink" title="安装开发Spigot插件所需要的环境"></a>安装开发Spigot插件所需要的环境</h3><h4 id="安装集成开发环境-IDEA-与JDK"><a href="#安装集成开发环境-IDEA-与JDK" class="headerlink" title="安装集成开发环境(IDEA)与JDK"></a>安装集成开发环境(IDEA)与JDK</h4><p>代码编写自然少不了编写代码的工具，这里介绍一个特别特别好用，在IDE里堪称航空母舰级别的存在。这就是——IntelliJ IDEA。【备注：正式版需要付费，请使用教育版或者自行寻找方法激活】</p><p>安装环节过于简单，一直点击下一步，按需调整即可。</p><p><strong>IntelliJ IDEA</strong> 下载地址：<a href="https://www.jetbrains.com/idea/download/#section=windows">传送门</a>。</p><p><strong>JDK11</strong> 下载地址：<a href="https://www.oracle.com/java/technologies/javase-jdk11-downloads.html">传送门</a></p><h4 id="安装Spigot服务端环境"><a href="#安装Spigot服务端环境" class="headerlink" title="安装Spigot服务端环境"></a>安装Spigot服务端环境</h4><p>开发spigot插件需要一个spigot的服务端，所以接下来我们就整一个spigot服务端。由于spigot服务端核心官方是不提供的，官方提供的方法就是自己下载BuildTools进行编译构建，那么咱们就按照官方的方法来构建一个spigot服务端核心。</p><p>首先打开这个<a href="https://hub.spigotmc.org/jenkins/job/BuildTools/">传送门</a>，如图一，下载<strong>最终成功</strong>构建下面的<strong>BuildTools.jar</strong>，并将该文件放置在一个文件夹内。</p><p><img src="/./img/1.1.png"></p><p>在该文件夹<strong>shift+右键</strong>打开<strong>Powershell</strong>窗口，输入以下指令<code>java -jar BuildTools.jar --rev 1.15.2</code>敲下回车，文件就会开始自动下载依赖并进行编译。编译时间可能会比较长，因为下载、编译完后整个文件夹的大小会非常大，需要耐心等待。如果总是编译不成功，请检查自己是否安装了java与JDK，如果还是不行，那就科学上网来解决吧(雾)。</p><p><img src="/./img/1.6.png"></p><p>下图为构建成功的截图。</p><p><img src="/./img/1.7.png"></p><p><img src="/./img/1.2.png"></p><p>编译完后，文件夹内会多出很多文件（整个文件夹大小在609MB左右），其中包括<strong>spigot-1.15.2.jar（服务端核心文件）</strong>。我们只需要留下<strong>spigot-1.15.2.jar</strong>这个文件，把<strong>其余的全部删掉</strong>即可。现在我们就构建完1.15.2的spigot服务端核心了。</p><ol><li>新建一个txt文本文档，打开并输入：</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">java -Xincgc -Xms1g -Xmx2g -jar spigot-1.15.2.jar nogui</span><br><span class="line">pause</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li><p>保存该文档，并将文档重命名为bat后缀；</p></li><li><p>双击该bat文件即可运行服务器；</p></li><li><p>输入stop正常关闭服务器。</p></li></ol><p>补充一点，代码的第二行中 “**-Xms1g<strong>”是指最低内存1G，“</strong>-Xmx2g**”是指最高内存2G，自己可以根据情况更改。</p><p>第一次开启需要将<strong>eula.txt</strong>里面的<strong>false</strong>改成<strong>true</strong>。</p><p><img src="/./img/1.3.png" alt="3"></p><h4 id="安装IDEA-Minecraft-Development插件"><a href="#安装IDEA-Minecraft-Development插件" class="headerlink" title="安装IDEA Minecraft Development插件"></a>安装IDEA Minecraft Development插件</h4><p>我们打开安装好后的IDEA，进入当前界面（图一），点击右下角的Configure==》Plugins按钮。即可打开插件安装面板（图二）。在<strong>MarketPlace</strong>中搜索<strong>Minecraft</strong>关键字找到该插件，点击<strong>Install</strong>就可以完成插件的安装。</p><p><img src="/./img/1.4.png" alt="3"></p><p><img src="/./img/1.5.png" alt="3"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>那么这一部分的内容就结束了，是不是感觉很简单呢？正因为Minecraft是Java来编写的，所以入门的门槛相对于其他的游戏就低很多。只要你肯学，稍微有一点点的编程基础，基本上都能学会。当然，你如果能去看Bukkit官方，Spigot官方提供的javadoc来学的话，速度会更快。这一系列教程只能带你入门，具体问题还需要有具体方法来解决。</p><p>如果有问题，请在左侧Issue提出，也可以联系面包个人QQ。</p><p>文章中所涉及资源如果无法获取，请使用面包准备的<a href="https://pan.baidu.com/s/1qvyX2qqqKAdcID-DwgZzuw">传送门</a>。提取码：f7gr。</p><blockquote><p>未经作者允许，请勿转载文章。</p></blockquote><h1 id="Minecraft我的世界Spigot插件保姆级开发教程【2】——创建项目-加载通知"><a href="#Minecraft我的世界Spigot插件保姆级开发教程【2】——创建项目-加载通知" class="headerlink" title="Minecraft我的世界Spigot插件保姆级开发教程【2】——创建项目&amp;加载通知"></a>Minecraft我的世界Spigot插件保姆级开发教程【2】——创建项目&amp;加载通知</h1><p><font color="gray" size="3">更新时间：2020.5.12</font></p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>打开IDEA，点击<strong>Create New Project</strong>。</p><p><img src="/./img/2.1.png" alt="2.1"></p><p>我们在左侧栏选择<strong>Minecraft</strong>，右边勾选<strong>Spigot Plugin</strong>，然后点击<strong>Next</strong>。</p><p><img src="/./img/2.2.png" alt="2.2"></p><p>按照样例填写好三个字段。</p><p><img src="/./img/2.3.png" alt="2.2"></p><p>按照样例填写好字段，<strong>Optional Settings</strong>里面的内容为<strong>选填</strong>(可以留空不填)。填完后，点击<strong>Next</strong>。</p><p><img src="/./img/2.4.png" alt="2.2"></p><p>按照提示填写好<strong>Project name</strong>（工程名称）、<strong>Project location</strong>（工程地址）。然后点击<strong>Finish</strong>。IDEA就会自动为你配置插件开发所需要的环境，该过程时间可能比较<strong>长</strong>。解决方法：科学上网(雾)。</p><p><img src="/./img/2.5.png" alt="2.2"></p><p>至此，Spigot插件项目算是构建完毕了。</p><h3 id="文件目录与代码介绍"><a href="#文件目录与代码介绍" class="headerlink" title="文件目录与代码介绍"></a>文件目录与代码介绍</h3><p>工程构建完成后，在IDEA的左栏会一系列的文件。我们进入src==&gt;java==&gt;cn.cupbread.spigotplugincourse(之前创建项目的时候输入的groupID.项目ID)==&gt;SpigotPluginCourse(插件的主类)。</p><ul><li><p><strong>代码</strong>一般放在<strong>跟插件主类同级的目录</strong>，<strong>资源以及其他文件</strong>一般放在<strong>resource</strong>目录。</p></li><li><p>我们进入主类后会发现有两个函数，一个叫做<strong>onEnable()<strong>，一个叫做</strong>onDisable()<strong>。两个函数分别对应插件被</strong>载入的时候</strong>，所要执行的操作和插件被<strong>关闭或载出时候</strong>的操作。</p></li><li><p>右边有一个名字为Maven的工具栏。因为咱们这个Spigot使用的是Maven进行项目依赖管理，所以就会有这个工具栏。那么具体的作用是什么呢？我们只用记住两个按钮就可以了。一个是<strong>Lifecycle</strong>（生命周期）内的<strong>clean</strong>，一个是生命周期内的<strong>package</strong>。由于编译打包的时候会生成多余的文件，为了防止多余的文件影响下一次的打包，最好进行一下<strong>clean</strong>操作。<strong>package</strong>顾名思义，就是插件<strong>打包</strong>的意思。</p></li></ul><p><img src="/./img/2.6.png" alt="2.2"></p><h3 id="制作插件加载-卸载通知"><a href="#制作插件加载-卸载通知" class="headerlink" title="制作插件加载/卸载通知"></a>制作插件加载/卸载通知</h3><p>我们在**onEnable()**函数内写入内容【加载插件】</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onEnable</span><span class="params">()</span> {</span><br><span class="line">        <span class="comment">// Plugin startup logic</span></span><br><span class="line">        System.out.println(<span class="string">"=========Spigot教学插件============"</span>);</span><br><span class="line">        System.out.println(<span class="string">"插件加载成功"</span>);</span><br><span class="line">        System.out.println(<span class="string">"=========Spigot教学插件============"</span>);</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>我们在**onDisable()**函数内写入内容【加载插件】</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDisable</span><span class="params">()</span> {</span><br><span class="line">        <span class="comment">// Plugin shutdown logic</span></span><br><span class="line">        System.out.println(<span class="string">"=========Spigot教学插件============"</span>);</span><br><span class="line">        System.out.println(<span class="string">"插件卸载成功"</span>);</span><br><span class="line">        System.out.println(<span class="string">"=========Spigot教学插件============"</span>);</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><blockquote><p>**System.out.println(“这里填写要打印的内容”); **这个函数的用途就是在控制台打印内容。</p></blockquote><p>然后我们在右边的工具栏双击<strong>package</strong>指令，让IDEA自动执行打包。打包完成后，我们会在左边的文件目录看到多出来了一个名字为target的文件夹。</p><p>我们进入该文件夹，文件夹里面的<strong>SpigotPluginCourse-1.0-SNAPSHOT.jar</strong> 就是我们打包出来的插件了。</p><p>注意：<strong>original</strong>开头的文件不是打包完成的插件，咱们的插件是没有<strong>original</strong>开头的jar文件。</p><p><img src="/./img/2.7.png" alt="2.2"></p><p>我们直接选中这个文件，然后<strong>Ctrl+C</strong>复制。然后到之前准备好的1.15.2 spigot服务端下的<strong>plugins</strong>文件夹目录下<strong>Ctrl+V</strong>粘贴。这样，我们的插件就正式装在服务端里啦！我们回到服务端根目录下，双击<strong>启动.bat</strong>文件来启动服务器。</p><p>如果一切顺利的话，我们就可以看到我们之前写的代码在控制台打印的日志啦！</p><p><img src="/./img/2.8.png" alt="2.2"></p><p>同样，我们在控制台内输入<strong>stop</strong>关闭服务器，在服务器关闭后，也能看到插件<strong>卸载</strong>时所执行的<strong>输出函数</strong>。</p><p><img src="/./img/2.9.png" alt="2.2"></p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><p>那么本Part的内容就到此为止啦！有没有觉得特别特别简单呢？当然，这个加载卸载的提示也有很多玩法，例如：</p><p><img src="/./img/2.10.png" alt="2.2"></p><p>如果有问题，请在左侧Issue提出，也可以联系面包个人QQ。</p><p>本Part所涉及所有代码均能在<a href="http://gitlab.hoh.ink/hoh/spigot-plugin-development-code">面包房小黑屋代码仓库</a>内找到。</p><blockquote><p>未经作者允许，请勿转载文章。</p></blockquote><div id="lv-container" data-id="city" data-uid="MTAyMC81OTg1MC8zNjMxMg==">  <script type="text/javascript">    (function(d, s) {      var j, e = d.getElementsByTagName(s)[0];      if (typeof LivereTower === 'function') { return; }      j = d.createElement(s); j.src = 'https://cdn-city.livere.com/js/embed.dist.js'; j.async = true;      e.parentNode.insertBefore(j, e);    })(document, 'script');  </script></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
